{"id":"../node_modules/bootstrap-vue/esm/components/button/button-close.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":3,"column":31,"index":242},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button-close.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":4,"column":34,"index":289},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button-close.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":5,"column":52,"index":371},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button-close.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../constants/slots","loc":{"line":6,"column":34,"index":430},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button-close.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/slots.js"},{"name":"../../utils/events","loc":{"line":7,"column":26,"index":481},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button-close.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/events.js"},{"name":"../../utils/inspect","loc":{"line":8,"column":24,"index":527},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button-close.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/props","loc":{"line":9,"column":48,"index":598},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button-close.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../utils/normalize-slot","loc":{"line":10,"column":49,"index":668},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button-close.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/normalize-slot.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BButtonClose = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _slots = require(\"../../constants/slots\");\n\nvar _events = require(\"../../utils/events\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _normalizeSlot = require(\"../../utils/normalize-slot\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Props ---\nvar props = (0, _props2.makePropsConfigurable)({\n  ariaLabel: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Close'),\n  content: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, '&times;'),\n  disabled: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  textVariant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n}, _components.NAME_BUTTON_CLOSE); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BButtonClose = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_BUTTON_CLOSE,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots;\n    var $slots = slots();\n    var $scopedSlots = scopedSlots || {};\n    var componentData = {\n      staticClass: 'close',\n      class: _defineProperty({}, \"text-\".concat(props.textVariant), props.textVariant),\n      attrs: {\n        type: 'button',\n        disabled: props.disabled,\n        'aria-label': props.ariaLabel ? String(props.ariaLabel) : null\n      },\n      on: {\n        click: function click(event) {\n          // Ensure click on button HTML content is also disabled\n\n          /* istanbul ignore if: bug in JSDOM still emits click on inner element */\n          if (props.disabled && (0, _inspect.isEvent)(event)) {\n            (0, _events.stopEvent)(event);\n          }\n        }\n      }\n    }; // Careful not to override the default slot with innerHTML\n\n    if (!(0, _normalizeSlot.hasNormalizedSlot)(_slots.SLOT_NAME_DEFAULT, $scopedSlots, $slots)) {\n      componentData.domProps = {\n        innerHTML: props.content\n      };\n    }\n\n    return h('button', (0, _vue.mergeData)(data, componentData), (0, _normalizeSlot.normalizeSlot)(_slots.SLOT_NAME_DEFAULT, {}, $scopedSlots, $slots));\n  }\n});\n\nexports.BButtonClose = BButtonClose;"},"sourceMaps":null,"error":null,"hash":"12d2fb6519f38c35acf5c6817f6301c9","cacheData":{"env":{}}}