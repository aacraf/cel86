{"id":"../../node_modules/echarts/lib/helper.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/node_modules/echarts/package.json","includedInParent":true,"mtime":1654768047284},{"name":"zrender/lib/core/util","loc":{"line":21,"column":21,"index":814},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/zrender/lib/core/util.js"},{"name":"./chart/helper/createListFromArray","loc":{"line":23,"column":34,"index":875},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/chart/helper/createListFromArray.js"},{"name":"./coord/axisHelper","loc":{"line":25,"column":25,"index":940},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/coord/axisHelper.js"},{"name":"./coord/axisModelCommonMixin","loc":{"line":27,"column":35,"index":999},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/coord/axisModelCommonMixin.js"},{"name":"./model/Model","loc":{"line":29,"column":20,"index":1053},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/model/Model.js"},{"name":"./util/layout","loc":{"line":31,"column":22,"index":1094},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/util/layout.js"},{"name":"./data/helper/dataStackHelper","loc":{"line":36,"column":31,"index":1235},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/data/helper/dataStackHelper.js"},{"name":"./data/helper/completeDimensions","loc":{"line":42,"column":34,"index":1487},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/data/helper/completeDimensions.js"},{"name":"./data/helper/createDimensions","loc":{"line":46,"column":32,"index":1608},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/data/helper/createDimensions.js"},{"name":"./util/symbol","loc":{"line":50,"column":22,"index":1713},"parent":"/data/uibuilder/node_modules/echarts/lib/helper.js","resolved":"/data/uibuilder/node_modules/echarts/lib/util/symbol.js"}],"generated":{"js":"\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar createListFromArray = require(\"./chart/helper/createListFromArray\");\n\nvar axisHelper = require(\"./coord/axisHelper\");\n\nvar axisModelCommonMixin = require(\"./coord/axisModelCommonMixin\");\n\nvar Model = require(\"./model/Model\");\n\nvar _layout = require(\"./util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\nexports.getLayoutRect = _layout.getLayoutRect;\n\nvar _dataStackHelper = require(\"./data/helper/dataStackHelper\");\n\nvar enableDataStack = _dataStackHelper.enableDataStack;\nvar isDimensionStacked = _dataStackHelper.isDimensionStacked;\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nvar _completeDimensions = require(\"./data/helper/completeDimensions\");\n\nexports.completeDimensions = _completeDimensions;\n\nvar _createDimensions = require(\"./data/helper/createDimensions\");\n\nexports.createDimensions = _createDimensions;\n\nvar _symbol = require(\"./util/symbol\");\n\nexports.createSymbol = _symbol.createSymbol;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import createGraphFromNodeEdge from './chart/helper/createGraphFromNodeEdge';\n\n/**\n * Create a muti dimension List structure from seriesModel.\n * @param  {module:echarts/model/Model} seriesModel\n * @return {module:echarts/data/List} list\n */\nfunction createList(seriesModel) {\n  return createListFromArray(seriesModel.getSource(), seriesModel);\n} // export function createGraph(seriesModel) {\n//     var nodes = seriesModel.get('data');\n//     var links = seriesModel.get('links');\n//     return createGraphFromNodeEdge(nodes, links, seriesModel);\n// }\n\n\nvar dataStack = {\n  isDimensionStacked: isDimensionStacked,\n  enableDataStack: enableDataStack,\n  getStackedDimension: getStackedDimension\n};\n/**\n * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n * @param {string} symbolDesc\n * @param {number} x\n * @param {number} y\n * @param {number} w\n * @param {number} h\n * @param {string} color\n */\n\n/**\n * Create scale\n * @param {Array.<number>} dataExtent\n * @param {Object|module:echarts/Model} option\n */\nfunction createScale(dataExtent, option) {\n  var axisModel = option;\n\n  if (!Model.isInstance(option)) {\n    axisModel = new Model(option);\n    zrUtil.mixin(axisModel, axisModelCommonMixin);\n  }\n\n  var scale = axisHelper.createScaleByModel(axisModel);\n  scale.setExtent(dataExtent[0], dataExtent[1]);\n  axisHelper.niceScaleExtent(scale, axisModel);\n  return scale;\n}\n/**\n * Mixin common methods to axis model,\n *\n * Inlcude methods\n * `getFormattedLabels() => Array.<string>`\n * `getCategories() => Array.<string>`\n * `getMin(origin: boolean) => number`\n * `getMax(origin: boolean) => number`\n * `getNeedCrossZero() => boolean`\n * `setRange(start: number, end: number)`\n * `resetRange()`\n */\n\n\nfunction mixinAxisModelCommonMethods(Model) {\n  zrUtil.mixin(Model, axisModelCommonMixin);\n}\n\nexports.createList = createList;\nexports.dataStack = dataStack;\nexports.createScale = createScale;\nexports.mixinAxisModelCommonMethods = mixinAxisModelCommonMethods;"},"sourceMaps":null,"error":null,"hash":"272aeefccd3181f5f989938a94d8a6f1","cacheData":{"env":{}}}