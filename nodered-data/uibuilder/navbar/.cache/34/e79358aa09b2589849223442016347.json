{"id":"../node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":1,"column":20,"index":20},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":2,"column":34,"index":67},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":3,"column":103,"index":200},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../utils/math","loc":{"line":4,"column":33,"index":258},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/math.js"},{"name":"../../utils/number","loc":{"line":5,"column":24,"index":302},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/number.js"},{"name":"../../utils/props","loc":{"line":6,"column":48,"index":372},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../mixins/normalize-slot","loc":{"line":7,"column":35,"index":428},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"},{"name":"./avatar","loc":{"line":8,"column":28,"index":487},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar-group.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/avatar/avatar.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BAvatarGroup = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _math = require(\"../../utils/math\");\n\nvar _number = require(\"../../utils/number\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _normalizeSlot = require(\"../../mixins/normalize-slot\");\n\nvar _avatar = require(\"./avatar\");\n\n// --- Props ---\nvar props = (0, _props2.makePropsConfigurable)({\n  overlap: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 0.3),\n  // Child avatars will prefer this prop (if set) over their own\n  rounded: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN_STRING, false),\n  // Child avatars will always use this over their own size\n  size: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  // Child avatars will prefer this prop (if set) over their own\n  square: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  tag: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'div'),\n  // Child avatars will prefer this variant over their own\n  variant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n}, _components.NAME_AVATAR_GROUP); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BAvatarGroup = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_AVATAR_GROUP,\n  mixins: [_normalizeSlot.normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvAvatarGroup: this\n    };\n  },\n  props: props,\n  computed: {\n    computedSize: function computedSize() {\n      return (0, _avatar.computeSize)(this.size);\n    },\n    overlapScale: function overlapScale() {\n      return (0, _math.mathMin)((0, _math.mathMax)((0, _number.toFloat)(this.overlap, 0), 0), 1) / 2;\n    },\n    paddingStyle: function paddingStyle() {\n      var value = this.computedSize;\n      value = value ? \"calc(\".concat(value, \" * \").concat(this.overlapScale, \")\") : null;\n      return value ? {\n        paddingLeft: value,\n        paddingRight: value\n      } : {};\n    }\n  },\n  render: function render(h) {\n    var $inner = h('div', {\n      staticClass: 'b-avatar-group-inner',\n      style: this.paddingStyle\n    }, this.normalizeSlot());\n    return h(this.tag, {\n      staticClass: 'b-avatar-group',\n      attrs: {\n        role: 'group'\n      }\n    }, [$inner]);\n  }\n});\n\nexports.BAvatarGroup = BAvatarGroup;"},"sourceMaps":null,"error":null,"hash":"fdb18f201e676d5192a578fc04044ec3","cacheData":{"env":{}}}