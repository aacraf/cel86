{"id":"../node_modules/bootstrap-vue/esm/components/image/img.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":3,"column":31,"index":242},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":4,"column":25,"index":280},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":5,"column":127,"index":437},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../utils/array","loc":{"line":6,"column":23,"index":485},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"},{"name":"../../utils/identity","loc":{"line":7,"column":25,"index":531},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/identity.js"},{"name":"../../utils/inspect","loc":{"line":8,"column":25,"index":580},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/number","loc":{"line":9,"column":26,"index":629},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/number.js"},{"name":"../../utils/props","loc":{"line":10,"column":48,"index":699},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../utils/string","loc":{"line":11,"column":25,"index":745},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/image/img.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/string.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BImg = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _array = require(\"../../utils/array\");\n\nvar _identity = require(\"../../utils/identity\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _number = require(\"../../utils/number\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _string = require(\"../../utils/string\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Constants --\n// Blank image with fill template\nvar BLANK_TEMPLATE = '<svg width=\"%{w}\" height=\"%{h}\" ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'viewBox=\"0 0 %{w} %{h}\" preserveAspectRatio=\"none\">' + '<rect width=\"100%\" height=\"100%\" style=\"fill:%{f};\"></rect>' + '</svg>'; // --- Helper methods ---\n\nvar makeBlankImgSrc = function makeBlankImgSrc(width, height, color) {\n  var src = encodeURIComponent(BLANK_TEMPLATE.replace('%{w}', (0, _string.toString)(width)).replace('%{h}', (0, _string.toString)(height)).replace('%{f}', color));\n  return \"data:image/svg+xml;charset=UTF-8,\".concat(src);\n}; // --- Props ---\n\n\nvar props = (0, _props2.makePropsConfigurable)({\n  alt: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  blank: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  blankColor: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'transparent'),\n  block: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  center: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  fluid: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  // Gives fluid images class `w-100` to make them grow to fit container\n  fluidGrow: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  height: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING),\n  left: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  right: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  // Possible values:\n  //   `false`: no rounding of corners\n  //   `true`: slightly rounded corners\n  //   'top': top corners rounded\n  //   'right': right corners rounded\n  //   'bottom': bottom corners rounded\n  //   'left': left corners rounded\n  //   'circle': circle/oval\n  //   '0': force rounding off\n  rounded: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN_STRING, false),\n  sizes: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_STRING),\n  src: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  srcset: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_STRING),\n  thumbnail: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  width: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING)\n}, _components.NAME_IMG); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BImg = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_IMG,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n\n    var props = _ref.props,\n        data = _ref.data;\n    var alt = props.alt,\n        src = props.src,\n        block = props.block,\n        fluidGrow = props.fluidGrow,\n        rounded = props.rounded;\n    var width = (0, _number.toInteger)(props.width) || null;\n    var height = (0, _number.toInteger)(props.height) || null;\n    var align = null;\n    var srcset = (0, _array.concat)(props.srcset).filter(_identity.identity).join(',');\n    var sizes = (0, _array.concat)(props.sizes).filter(_identity.identity).join(',');\n\n    if (props.blank) {\n      if (!height && width) {\n        height = width;\n      } else if (!width && height) {\n        width = height;\n      }\n\n      if (!width && !height) {\n        width = 1;\n        height = 1;\n      } // Make a blank SVG image\n\n\n      src = makeBlankImgSrc(width, height, props.blankColor || 'transparent'); // Disable srcset and sizes\n\n      srcset = null;\n      sizes = null;\n    }\n\n    if (props.left) {\n      align = 'float-left';\n    } else if (props.right) {\n      align = 'float-right';\n    } else if (props.center) {\n      align = 'mx-auto';\n      block = true;\n    }\n\n    return h('img', (0, _vue.mergeData)(data, {\n      attrs: {\n        src: src,\n        alt: alt,\n        width: width ? (0, _string.toString)(width) : null,\n        height: height ? (0, _string.toString)(height) : null,\n        srcset: srcset || null,\n        sizes: sizes || null\n      },\n      class: (_class = {\n        'img-thumbnail': props.thumbnail,\n        'img-fluid': props.fluid || fluidGrow,\n        'w-100': fluidGrow,\n        rounded: rounded === '' || rounded === true\n      }, _defineProperty(_class, \"rounded-\".concat(rounded), (0, _inspect.isString)(rounded) && rounded !== ''), _defineProperty(_class, align, align), _defineProperty(_class, 'd-block', block), _class)\n    }));\n  }\n});\n\nexports.BImg = BImg;"},"sourceMaps":null,"error":null,"hash":"1012e72b301f58f9e2efb813bbf87e42","cacheData":{"env":{}}}