{"id":"../node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../vue","loc":{"line":7,"column":20,"index":1110},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../../constants/props","loc":{"line":8,"column":33,"index":1159},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../../utils/get","loc":{"line":9,"column":20,"index":1207},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/get.js"},{"name":"../../../utils/inspect","loc":{"line":10,"column":51,"index":1280},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../../utils/object","loc":{"line":11,"column":25,"index":1331},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/object.js"},{"name":"../../../utils/props","loc":{"line":12,"column":48,"index":1404},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../../mixins/form-options","loc":{"line":13,"column":60,"index":1488},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-options.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.optionsMixin = void 0;\n\nvar _vue = require(\"../../../vue\");\n\nvar _props = require(\"../../../constants/props\");\n\nvar _get = require(\"../../../utils/get\");\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _object = require(\"../../../utils/object\");\n\nvar _props2 = require(\"../../../utils/props\");\n\nvar _formOptions = require(\"../../../mixins/form-options\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Props ---\nvar props = (0, _props2.makePropsConfigurable)((0, _object.sortKeys)(_objectSpread(_objectSpread({}, _formOptions.props), {}, {\n  labelField: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'label'),\n  optionsField: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'options')\n})), 'formOptions'); // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar optionsMixin = _vue.Vue.extend({\n  mixins: [_formOptions.formOptionsMixin],\n  props: props,\n  methods: {\n    normalizeOption: function normalizeOption(option) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null; // When the option is an object, normalize it\n\n      if ((0, _inspect.isPlainObject)(option)) {\n        var value = (0, _get.get)(option, this.valueField);\n        var text = (0, _get.get)(option, this.textField);\n        var options = (0, _get.get)(option, this.optionsField, null); // When it has options, create an `<optgroup>` object\n\n        if (!(0, _inspect.isNull)(options)) {\n          return {\n            label: String((0, _get.get)(option, this.labelField) || text),\n            options: this.normalizeOptions(options)\n          };\n        } // Otherwise create an `<option>` object\n\n\n        return {\n          value: (0, _inspect.isUndefined)(value) ? key || text : value,\n          text: String((0, _inspect.isUndefined)(text) ? key : text),\n          html: (0, _get.get)(option, this.htmlField),\n          disabled: Boolean((0, _get.get)(option, this.disabledField))\n        };\n      } // Otherwise create an `<option>` object from the given value\n\n\n      return {\n        value: key || option,\n        text: String(option),\n        disabled: false\n      };\n    }\n  }\n});\n\nexports.optionsMixin = optionsMixin;"},"sourceMaps":null,"error":null,"hash":"a6636d39923f4b2bfd429e52fa4be08e","cacheData":{"env":{}}}