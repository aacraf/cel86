{"id":"../node_modules/bootstrap-vue/esm/components/table/td.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":7,"column":20,"index":1110},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":8,"column":32,"index":1155},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":9,"column":77,"index":1262},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../utils/dom","loc":{"line":10,"column":22,"index":1309},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../../utils/inspect","loc":{"line":11,"column":34,"index":1362},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/number","loc":{"line":12,"column":26,"index":1411},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/number.js"},{"name":"../../utils/props","loc":{"line":13,"column":48,"index":1481},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../utils/string","loc":{"line":14,"column":25,"index":1527},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/string.js"},{"name":"../../mixins/attrs","loc":{"line":15,"column":27,"index":1576},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/attrs.js"},{"name":"../../mixins/listeners","loc":{"line":16,"column":31,"index":1629},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/listeners.js"},{"name":"../../mixins/normalize-slot","loc":{"line":17,"column":35,"index":1690},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/td.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BTd = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _number = require(\"../../utils/number\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _string = require(\"../../utils/string\");\n\nvar _attrs = require(\"../../mixins/attrs\");\n\nvar _listeners = require(\"../../mixins/listeners\");\n\nvar _normalizeSlot = require(\"../../mixins/normalize-slot\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Helper methods ---\n// Parse a rowspan or colspan into a digit (or `null` if < `1` )\nvar parseSpan = function parseSpan(value) {\n  value = (0, _number.toInteger)(value, 0);\n  return value > 0 ? value : null;\n};\n/* istanbul ignore next */\n\n\nvar spanValidator = function spanValidator(value) {\n  return (0, _inspect.isUndefinedOrNull)(value) || parseSpan(value) > 0;\n}; // --- Props ---\n\n\nvar props = (0, _props2.makePropsConfigurable)({\n  colspan: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, null, spanValidator),\n  rowspan: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, null, spanValidator),\n  stackedHeading: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  stickyColumn: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  variant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n}, _components.NAME_TABLE_CELL); // --- Main component ---\n// TODO:\n//   In Bootstrap v5, we won't need \"sniffing\" as table element variants properly inherit\n//   to the child elements, so this can be converted to a functional component\n// @vue/component\n\nexports.props = props;\n\nvar BTd = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_TABLE_CELL,\n  // Mixin order is important!\n  mixins: [_attrs.attrsMixin, _listeners.listenersMixin, _normalizeSlot.normalizeSlotMixin],\n  inject: {\n    bvTableTr: {\n      default:\n      /* istanbul ignore next */\n      function _default() {\n        return {};\n      }\n    }\n  },\n  inheritAttrs: false,\n  props: props,\n  computed: {\n    // Overridden by `<b-th>`\n    tag: function tag() {\n      return 'td';\n    },\n    inTbody: function inTbody() {\n      return this.bvTableTr.inTbody;\n    },\n    inThead: function inThead() {\n      return this.bvTableTr.inThead;\n    },\n    inTfoot: function inTfoot() {\n      return this.bvTableTr.inTfoot;\n    },\n    isDark: function isDark() {\n      return this.bvTableTr.isDark;\n    },\n    isStacked: function isStacked() {\n      return this.bvTableTr.isStacked;\n    },\n    // We only support stacked-heading in tbody in stacked mode\n    isStackedCell: function isStackedCell() {\n      return this.inTbody && this.isStacked;\n    },\n    isResponsive: function isResponsive() {\n      return this.bvTableTr.isResponsive;\n    },\n    // Needed to handle header background classes, due to lack of\n    // background color inheritance with Bootstrap v4 table CSS\n    // Sticky headers only apply to cells in table `thead`\n    isStickyHeader: function isStickyHeader() {\n      return this.bvTableTr.isStickyHeader;\n    },\n    // Needed to handle header background classes, due to lack of\n    // background color inheritance with Bootstrap v4 table CSS\n    hasStickyHeader: function hasStickyHeader() {\n      return this.bvTableTr.hasStickyHeader;\n    },\n    // Needed to handle background classes, due to lack of\n    // background color inheritance with Bootstrap v4 table CSS\n    // Sticky column cells are only available in responsive\n    // mode (horizontal scrolling) or when sticky header mode\n    // Applies to cells in `thead`, `tbody` and `tfoot`\n    isStickyColumn: function isStickyColumn() {\n      return !this.isStacked && (this.isResponsive || this.hasStickyHeader) && this.stickyColumn;\n    },\n    rowVariant: function rowVariant() {\n      return this.bvTableTr.variant;\n    },\n    headVariant: function headVariant() {\n      return this.bvTableTr.headVariant;\n    },\n    footVariant: function footVariant() {\n      return this.bvTableTr.footVariant;\n    },\n    tableVariant: function tableVariant() {\n      return this.bvTableTr.tableVariant;\n    },\n    computedColspan: function computedColspan() {\n      return parseSpan(this.colspan);\n    },\n    computedRowspan: function computedRowspan() {\n      return parseSpan(this.rowspan);\n    },\n    // We use computed props here for improved performance by caching\n    // the results of the string interpolation\n    cellClasses: function cellClasses() {\n      var variant = this.variant,\n          headVariant = this.headVariant,\n          isStickyColumn = this.isStickyColumn;\n\n      if (!variant && this.isStickyHeader && !headVariant || !variant && isStickyColumn && this.inTfoot && !this.footVariant || !variant && isStickyColumn && this.inThead && !headVariant || !variant && isStickyColumn && this.inTbody) {\n        // Needed for sticky-header mode as Bootstrap v4 table cells do\n        // not inherit parent's `background-color`\n        variant = this.rowVariant || this.tableVariant || 'b-table-default';\n      }\n\n      return [variant ? \"\".concat(this.isDark ? 'bg' : 'table', \"-\").concat(variant) : null, isStickyColumn ? 'b-table-sticky-column' : null];\n    },\n    cellAttrs: function cellAttrs() {\n      var stackedHeading = this.stackedHeading; // We use computed props here for improved performance by caching\n      // the results of the object spread (Object.assign)\n\n      var headOrFoot = this.inThead || this.inTfoot; // Make sure col/rowspan's are > 0 or null\n\n      var colspan = this.computedColspan;\n      var rowspan = this.computedRowspan; // Default role and scope\n\n      var role = 'cell';\n      var scope = null; // Compute role and scope\n      // We only add scopes with an explicit span of 1 or greater\n\n      if (headOrFoot) {\n        // Header or footer cells\n        role = 'columnheader';\n        scope = colspan > 0 ? 'colspan' : 'col';\n      } else if ((0, _dom.isTag)(this.tag, 'th')) {\n        // th's in tbody\n        role = 'rowheader';\n        scope = rowspan > 0 ? 'rowgroup' : 'row';\n      }\n\n      return _objectSpread(_objectSpread({\n        colspan: colspan,\n        rowspan: rowspan,\n        role: role,\n        scope: scope\n      }, this.bvAttrs), {}, {\n        // Add in the stacked cell label data-attribute if in\n        // stacked mode (if a stacked heading label is provided)\n        'data-label': this.isStackedCell && !(0, _inspect.isUndefinedOrNull)(stackedHeading) ?\n        /* istanbul ignore next */\n        (0, _string.toString)(stackedHeading) : null\n      });\n    }\n  },\n  render: function render(h) {\n    var $content = [this.normalizeSlot()];\n    return h(this.tag, {\n      class: this.cellClasses,\n      attrs: this.cellAttrs,\n      // Transfer any native listeners\n      on: this.bvListeners\n    }, [this.isStackedCell ? h('div', [$content]) : $content]);\n  }\n});\n\nexports.BTd = BTd;"},"sourceMaps":null,"error":null,"hash":"7f651898320c524e5f4e531430556253","cacheData":{"env":{}}}