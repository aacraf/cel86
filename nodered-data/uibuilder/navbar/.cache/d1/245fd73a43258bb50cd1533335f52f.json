{"id":"../node_modules/bootstrap-vue/esm/components/form-input/form-input.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":7,"column":20,"index":1110},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":8,"column":32,"index":1155},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":9,"column":77,"index":1262},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../utils/array","loc":{"line":10,"column":30,"index":1317},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"},{"name":"../../utils/dom","loc":{"line":11,"column":28,"index":1366},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../../utils/events","loc":{"line":12,"column":57,"index":1442},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/events.js"},{"name":"../../utils/object","loc":{"line":13,"column":25,"index":1489},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/object.js"},{"name":"../../utils/props","loc":{"line":14,"column":48,"index":1559},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../mixins/form-control","loc":{"line":15,"column":60,"index":1640},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-control.js"},{"name":"../../mixins/form-selection","loc":{"line":16,"column":35,"index":1704},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-selection.js"},{"name":"../../mixins/form-size","loc":{"line":17,"column":54,"index":1789},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-size.js"},{"name":"../../mixins/form-state","loc":{"line":18,"column":56,"index":1871},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-state.js"},{"name":"../../mixins/form-text","loc":{"line":19,"column":54,"index":1952},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-text.js"},{"name":"../../mixins/form-validity","loc":{"line":20,"column":34,"index":2012},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-validity.js"},{"name":"../../mixins/id","loc":{"line":21,"column":42,"index":2084},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/id.js"},{"name":"../../mixins/listeners","loc":{"line":22,"column":31,"index":2134},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-input/form-input.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/listeners.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BFormInput = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _array = require(\"../../utils/array\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _events = require(\"../../utils/events\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _formControl = require(\"../../mixins/form-control\");\n\nvar _formSelection = require(\"../../mixins/form-selection\");\n\nvar _formSize = require(\"../../mixins/form-size\");\n\nvar _formState = require(\"../../mixins/form-state\");\n\nvar _formText = require(\"../../mixins/form-text\");\n\nvar _formValidity = require(\"../../mixins/form-validity\");\n\nvar _id = require(\"../../mixins/id\");\n\nvar _listeners = require(\"../../mixins/listeners\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Constants ---\n// Valid supported input types\nvar TYPES = ['text', 'password', 'email', 'number', 'url', 'tel', 'search', 'range', 'color', 'date', 'time', 'datetime', 'datetime-local', 'month', 'week']; // --- Props ---\n\nvar props = (0, _props2.makePropsConfigurable)((0, _object.sortKeys)(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _id.props), _formControl.props), _formSize.props), _formState.props), _formText.props), {}, {\n  list: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  max: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING),\n  min: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING),\n  // Disable mousewheel to prevent wheel from changing values (i.e. number/date)\n  noWheel: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  step: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING),\n  type: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'text', function (type) {\n    return (0, _array.arrayIncludes)(TYPES, type);\n  })\n})), _components.NAME_FORM_INPUT); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BFormInput = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_FORM_INPUT,\n  // Mixin order is important!\n  mixins: [_listeners.listenersMixin, _id.idMixin, _formControl.formControlMixin, _formSize.formSizeMixin, _formState.formStateMixin, _formText.formTextMixin, _formSelection.formSelectionMixin, _formValidity.formValidityMixin],\n  props: props,\n  computed: {\n    localType: function localType() {\n      // We only allow certain types\n      var type = this.type;\n      return (0, _array.arrayIncludes)(TYPES, type) ? type : 'text';\n    },\n    computedAttrs: function computedAttrs() {\n      var type = this.localType,\n          name = this.name,\n          form = this.form,\n          disabled = this.disabled,\n          placeholder = this.placeholder,\n          required = this.required,\n          min = this.min,\n          max = this.max,\n          step = this.step;\n      return {\n        id: this.safeId(),\n        name: name,\n        form: form,\n        type: type,\n        disabled: disabled,\n        placeholder: placeholder,\n        required: required,\n        autocomplete: this.autocomplete || null,\n        readonly: this.readonly || this.plaintext,\n        min: min,\n        max: max,\n        step: step,\n        list: type !== 'password' ? this.list : null,\n        'aria-required': required ? 'true' : null,\n        'aria-invalid': this.computedAriaInvalid\n      };\n    },\n    computedListeners: function computedListeners() {\n      return _objectSpread(_objectSpread({}, this.bvListeners), {}, {\n        input: this.onInput,\n        change: this.onChange,\n        blur: this.onBlur\n      });\n    }\n  },\n  watch: {\n    noWheel: function noWheel(newValue) {\n      this.setWheelStopper(newValue);\n    }\n  },\n  mounted: function mounted() {\n    this.setWheelStopper(this.noWheel);\n  },\n\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    // Turn off listeners when keep-alive component deactivated\n\n    /* istanbul ignore next */\n    this.setWheelStopper(false);\n  },\n\n  /* istanbul ignore next */\n  activated: function activated() {\n    // Turn on listeners (if no-wheel) when keep-alive component activated\n\n    /* istanbul ignore next */\n    this.setWheelStopper(this.noWheel);\n  },\n  beforeDestroy: function beforeDestroy() {\n    /* istanbul ignore next */\n    this.setWheelStopper(false);\n  },\n  methods: {\n    setWheelStopper: function setWheelStopper(on) {\n      var input = this.$el; // We use native events, so that we don't interfere with propagation\n\n      (0, _events.eventOnOff)(on, input, 'focus', this.onWheelFocus);\n      (0, _events.eventOnOff)(on, input, 'blur', this.onWheelBlur);\n\n      if (!on) {\n        (0, _events.eventOff)(document, 'wheel', this.stopWheel);\n      }\n    },\n    onWheelFocus: function onWheelFocus() {\n      (0, _events.eventOn)(document, 'wheel', this.stopWheel);\n    },\n    onWheelBlur: function onWheelBlur() {\n      (0, _events.eventOff)(document, 'wheel', this.stopWheel);\n    },\n    stopWheel: function stopWheel(event) {\n      (0, _events.stopEvent)(event, {\n        propagation: false\n      });\n      (0, _dom.attemptBlur)(this.$el);\n    }\n  },\n  render: function render(h) {\n    return h('input', {\n      class: this.computedClass,\n      attrs: this.computedAttrs,\n      domProps: {\n        value: this.localValue\n      },\n      on: this.computedListeners,\n      ref: 'input'\n    });\n  }\n});\n\nexports.BFormInput = BFormInput;"},"sourceMaps":null,"error":null,"hash":"769a82fea5bc7d3ac17a07c5d896d31e","cacheData":{"env":{}}}