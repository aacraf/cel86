{"id":"../node_modules/bootstrap-vue/esm/components/collapse/helpers/bv-collapse.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../vue","loc":{"line":8,"column":31,"index":307},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/collapse/helpers/bv-collapse.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../../constants/components","loc":{"line":9,"column":37,"index":360},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/collapse/helpers/bv-collapse.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../../constants/props","loc":{"line":10,"column":34,"index":427},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/collapse/helpers/bv-collapse.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../../utils/dom","loc":{"line":11,"column":65,"index":520},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/collapse/helpers/bv-collapse.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../../../utils/props","loc":{"line":12,"column":25,"index":567},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/collapse/helpers/bv-collapse.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BVCollapse = void 0;\n\nvar _vue = require(\"../../../vue\");\n\nvar _components = require(\"../../../constants/components\");\n\nvar _props = require(\"../../../constants/props\");\n\nvar _dom = require(\"../../../utils/dom\");\n\nvar _props2 = require(\"../../../utils/props\");\n\n// Generic collapse transion helper component\n//\n// Note:\n//   Applies the classes `collapse`, `show` and `collapsing`\n//   during the enter/leave transition phases only\n//   Although it appears that Vue may be leaving the classes\n//   in-place after the transition completes\n// --- Helper methods ---\n// Transition event handler helpers\nvar onEnter = function onEnter(el) {\n  (0, _dom.setStyle)(el, 'height', 0); // In a `requestAF()` for `appear` to work\n\n  (0, _dom.requestAF)(function () {\n    (0, _dom.reflow)(el);\n    (0, _dom.setStyle)(el, 'height', \"\".concat(el.scrollHeight, \"px\"));\n  });\n};\n\nvar onAfterEnter = function onAfterEnter(el) {\n  (0, _dom.removeStyle)(el, 'height');\n};\n\nvar onLeave = function onLeave(el) {\n  (0, _dom.setStyle)(el, 'height', 'auto');\n  (0, _dom.setStyle)(el, 'display', 'block');\n  (0, _dom.setStyle)(el, 'height', \"\".concat((0, _dom.getBCR)(el).height, \"px\"));\n  (0, _dom.reflow)(el);\n  (0, _dom.setStyle)(el, 'height', 0);\n};\n\nvar onAfterLeave = function onAfterLeave(el) {\n  (0, _dom.removeStyle)(el, 'height');\n}; // --- Constants ---\n// Default transition props\n// `appear` will use the enter classes\n\n\nvar TRANSITION_PROPS = {\n  css: true,\n  enterClass: '',\n  enterActiveClass: 'collapsing',\n  enterToClass: 'collapse show',\n  leaveClass: 'collapse show',\n  leaveActiveClass: 'collapsing',\n  leaveToClass: 'collapse'\n}; // Default transition handlers\n// `appear` will use the enter handlers\n\nvar TRANSITION_HANDLERS = {\n  enter: onEnter,\n  afterEnter: onAfterEnter,\n  leave: onLeave,\n  afterLeave: onAfterLeave\n}; // --- Main component ---\n\nvar props = {\n  // // If `true` (and `visible` is `true` on mount), animate initially visible\n  appear: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false)\n}; // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BVCollapse = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_COLLAPSE_HELPER,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var props = _ref.props,\n        data = _ref.data,\n        children = _ref.children;\n    return h('transition', // We merge in the `appear` prop last\n    (0, _vue.mergeData)(data, {\n      props: TRANSITION_PROPS,\n      on: TRANSITION_HANDLERS\n    }, {\n      props: props\n    }), // Note: `<transition>` supports a single root element only\n    children);\n  }\n});\n\nexports.BVCollapse = BVCollapse;"},"sourceMaps":null,"error":null,"hash":"cdd3e298883dadfcb1fa949c01afbc61","cacheData":{"env":{}}}