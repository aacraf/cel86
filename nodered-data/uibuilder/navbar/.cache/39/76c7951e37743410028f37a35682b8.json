{"id":"../node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../vue","loc":{"line":1,"column":20,"index":20},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../../constants/slots","loc":{"line":2,"column":37,"index":73},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/slots.js"},{"name":"../../../utils/inspect","loc":{"line":3,"column":27,"index":128},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../tr","loc":{"line":4,"column":20,"index":174},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-bottom-row.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/tr.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.bottomRowMixin = void 0;\n\nvar _vue = require(\"../../../vue\");\n\nvar _slots = require(\"../../../constants/slots\");\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _tr = require(\"../tr\");\n\n// --- Props ---\nvar props = {}; // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar bottomRowMixin = _vue.Vue.extend({\n  props: props,\n  methods: {\n    renderBottomRow: function renderBottomRow() {\n      var fields = this.computedFields,\n          stacked = this.stacked,\n          tbodyTrClass = this.tbodyTrClass,\n          tbodyTrAttr = this.tbodyTrAttr;\n      var h = this.$createElement; // Static bottom row slot (hidden in visibly stacked mode as we can't control the data-label)\n      // If in *always* stacked mode, we don't bother rendering the row\n\n      if (!this.hasNormalizedSlot(_slots.SLOT_NAME_BOTTOM_ROW) || stacked === true || stacked === '') {\n        return h();\n      }\n\n      return h(_tr.BTr, {\n        staticClass: 'b-table-bottom-row',\n        class: [(0, _inspect.isFunction)(tbodyTrClass) ?\n        /* istanbul ignore next */\n        tbodyTrClass(null, 'row-bottom') : tbodyTrClass],\n        attrs: (0, _inspect.isFunction)(tbodyTrAttr) ?\n        /* istanbul ignore next */\n        tbodyTrAttr(null, 'row-bottom') : tbodyTrAttr,\n        key: 'b-bottom-row'\n      }, this.normalizeSlot(_slots.SLOT_NAME_BOTTOM_ROW, {\n        columns: fields.length,\n        fields: fields\n      }));\n    }\n  }\n});\n\nexports.bottomRowMixin = bottomRowMixin;"},"sourceMaps":null,"error":null,"hash":"57c3f7209312a721d5e655384a354d07","cacheData":{"env":{}}}