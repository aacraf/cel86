{"id":"../../node_modules/zrender/lib/graphic/mixin/RectText.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/node_modules/zrender/package.json","includedInParent":true,"mtime":1654768047284},{"name":"../helper/text","loc":{"line":1,"column":25,"index":25},"parent":"/data/uibuilder/node_modules/zrender/lib/graphic/mixin/RectText.js","resolved":"/data/uibuilder/node_modules/zrender/lib/graphic/helper/text.js"},{"name":"../../core/BoundingRect","loc":{"line":3,"column":27,"index":72},"parent":"/data/uibuilder/node_modules/zrender/lib/graphic/mixin/RectText.js","resolved":"/data/uibuilder/node_modules/zrender/lib/core/BoundingRect.js"},{"name":"../constant","loc":{"line":5,"column":24,"index":125},"parent":"/data/uibuilder/node_modules/zrender/lib/graphic/mixin/RectText.js","resolved":"/data/uibuilder/node_modules/zrender/lib/graphic/constant.js"}],"generated":{"js":"var textHelper = require(\"../helper/text\");\n\nvar BoundingRect = require(\"../../core/BoundingRect\");\n\nvar _constant = require(\"../constant\");\n\nvar WILL_BE_RESTORED = _constant.WILL_BE_RESTORED;\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\nvar tmpRect = new BoundingRect();\n\nvar RectText = function () {};\n\nRectText.prototype = {\n  constructor: RectText,\n\n  /**\n   * Draw text in a rect with specified position.\n   * @param  {CanvasRenderingContext2D} ctx\n   * @param  {Object} rect Displayable rect\n   */\n  drawRectText: function (ctx, rect) {\n    var style = this.style;\n    rect = style.textRect || rect; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n    var text = style.text; // Convert to string\n\n    text != null && (text += '');\n\n    if (!textHelper.needDrawText(text, style)) {\n      return;\n    } // FIXME\n    // Do not provide prevEl to `textHelper.renderText` for ctx prop cache,\n    // but use `ctx.save()` and `ctx.restore()`. Because the cache for rect\n    // text propably break the cache for its host elements.\n\n\n    ctx.save(); // Transform rect to view space\n\n    var transform = this.transform;\n\n    if (!style.transformText) {\n      if (transform) {\n        tmpRect.copy(rect);\n        tmpRect.applyTransform(transform);\n        rect = tmpRect;\n      }\n    } else {\n      this.setTransform(ctx);\n    } // transformText and textRotation can not be used at the same time.\n\n\n    textHelper.renderText(this, ctx, text, style, rect, WILL_BE_RESTORED);\n    ctx.restore();\n  }\n};\nvar _default = RectText;\nmodule.exports = _default;"},"sourceMaps":null,"error":null,"hash":"4efff811cd0e71189789edc8accc488d","cacheData":{"env":{}}}