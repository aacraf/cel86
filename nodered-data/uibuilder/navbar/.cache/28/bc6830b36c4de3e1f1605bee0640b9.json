{"id":"../node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../vue","loc":{"line":9,"column":20,"index":1131},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../../constants/events","loc":{"line":10,"column":90,"index":1237},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../../constants/props","loc":{"line":11,"column":114,"index":1380},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../../utils/array","loc":{"line":12,"column":30,"index":1438},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"},{"name":"../../../utils/inspect","loc":{"line":13,"column":46,"index":1508},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../../utils/props","loc":{"line":14,"column":25,"index":1559},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../../utils/stable-sort","loc":{"line":15,"column":27,"index":1610},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/stable-sort.js"},{"name":"../../../utils/string","loc":{"line":16,"column":21,"index":1661},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/string.js"},{"name":"./default-sort-compare","loc":{"line":17,"column":35,"index":1721},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-sorting.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/default-sort-compare.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortingMixin = exports.props = void 0;\n\nvar _vue = require(\"../../../vue\");\n\nvar _events = require(\"../../../constants/events\");\n\nvar _props2 = require(\"../../../constants/props\");\n\nvar _array = require(\"../../../utils/array\");\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _props3 = require(\"../../../utils/props\");\n\nvar _stableSort = require(\"../../../utils/stable-sort\");\n\nvar _string = require(\"../../../utils/string\");\n\nvar _defaultSortCompare = require(\"./default-sort-compare\");\n\nvar _props, _watch;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Constants ---\nvar MODEL_PROP_NAME_SORT_BY = 'sortBy';\nvar MODEL_EVENT_NAME_SORT_BY = _events.MODEL_EVENT_NAME_PREFIX + MODEL_PROP_NAME_SORT_BY;\nvar MODEL_PROP_NAME_SORT_DESC = 'sortDesc';\nvar MODEL_EVENT_NAME_SORT_DESC = _events.MODEL_EVENT_NAME_PREFIX + MODEL_PROP_NAME_SORT_DESC;\nvar SORT_DIRECTION_ASC = 'asc';\nvar SORT_DIRECTION_DESC = 'desc';\nvar SORT_DIRECTION_LAST = 'last';\nvar SORT_DIRECTIONS = [SORT_DIRECTION_ASC, SORT_DIRECTION_DESC, SORT_DIRECTION_LAST]; // --- Props ---\n\nvar props = (_props = {\n  labelSortAsc: (0, _props3.makeProp)(_props2.PROP_TYPE_STRING, 'Click to sort Ascending'),\n  labelSortClear: (0, _props3.makeProp)(_props2.PROP_TYPE_STRING, 'Click to clear sorting'),\n  labelSortDesc: (0, _props3.makeProp)(_props2.PROP_TYPE_STRING, 'Click to sort Descending'),\n  noFooterSorting: (0, _props3.makeProp)(_props2.PROP_TYPE_BOOLEAN, false),\n  noLocalSorting: (0, _props3.makeProp)(_props2.PROP_TYPE_BOOLEAN, false),\n  // Another prop that should have had a better name\n  // It should be `noSortClear` (on non-sortable headers)\n  // We will need to make sure the documentation is clear on what\n  // this prop does (as well as in the code for future reference)\n  noSortReset: (0, _props3.makeProp)(_props2.PROP_TYPE_BOOLEAN, false)\n}, _defineProperty(_props, MODEL_PROP_NAME_SORT_BY, (0, _props3.makeProp)(_props2.PROP_TYPE_STRING)), _defineProperty(_props, \"sortCompare\", (0, _props3.makeProp)(_props2.PROP_TYPE_FUNCTION)), _defineProperty(_props, \"sortCompareLocale\", (0, _props3.makeProp)(_props2.PROP_TYPE_ARRAY_STRING)), _defineProperty(_props, \"sortCompareOptions\", (0, _props3.makeProp)(_props2.PROP_TYPE_OBJECT, {\n  numeric: true\n})), _defineProperty(_props, MODEL_PROP_NAME_SORT_DESC, (0, _props3.makeProp)(_props2.PROP_TYPE_BOOLEAN, false)), _defineProperty(_props, \"sortDirection\", (0, _props3.makeProp)(_props2.PROP_TYPE_STRING, SORT_DIRECTION_ASC, function (value) {\n  return (0, _array.arrayIncludes)(SORT_DIRECTIONS, value);\n})), _defineProperty(_props, \"sortIconLeft\", (0, _props3.makeProp)(_props2.PROP_TYPE_BOOLEAN, false)), _defineProperty(_props, \"sortNullLast\", (0, _props3.makeProp)(_props2.PROP_TYPE_BOOLEAN, false)), _props); // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar sortingMixin = _vue.Vue.extend({\n  props: props,\n  data: function data() {\n    return {\n      localSortBy: this[MODEL_PROP_NAME_SORT_BY] || '',\n      localSortDesc: this[MODEL_PROP_NAME_SORT_DESC] || false\n    };\n  },\n  computed: {\n    localSorting: function localSorting() {\n      return this.hasProvider ? !!this.noProviderSorting : !this.noLocalSorting;\n    },\n    isSortable: function isSortable() {\n      return this.computedFields.some(function (f) {\n        return f.sortable;\n      });\n    },\n    // Sorts the filtered items and returns a new array of the sorted items\n    // When not sorted, the original items array will be returned\n    sortedItems: function sortedItems() {\n      var sortBy = this.localSortBy,\n          sortDesc = this.localSortDesc,\n          locale = this.sortCompareLocale,\n          nullLast = this.sortNullLast,\n          sortCompare = this.sortCompare,\n          localSorting = this.localSorting;\n      var items = (this.filteredItems || this.localItems || []).slice();\n\n      var localeOptions = _objectSpread(_objectSpread({}, this.sortCompareOptions), {}, {\n        usage: 'sort'\n      });\n\n      if (sortBy && localSorting) {\n        var field = this.computedFieldsObj[sortBy] || {};\n        var sortByFormatted = field.sortByFormatted;\n        var formatter = (0, _inspect.isFunction)(sortByFormatted) ?\n        /* istanbul ignore next */\n        sortByFormatted : sortByFormatted ? this.getFieldFormatter(sortBy) : undefined; // `stableSort` returns a new array, and leaves the original array intact\n\n        return (0, _stableSort.stableSort)(items, function (a, b) {\n          var result = null; // Call user provided `sortCompare` routine first\n\n          if ((0, _inspect.isFunction)(sortCompare)) {\n            // TODO:\n            //   Change the `sortCompare` signature to the one of `defaultSortCompare`\n            //   with the next major version bump\n            result = sortCompare(a, b, sortBy, sortDesc, formatter, localeOptions, locale);\n          } // Fallback to built-in `defaultSortCompare` if `sortCompare`\n          // is not defined or returns `null`/`false`\n\n\n          if ((0, _inspect.isUndefinedOrNull)(result) || result === false) {\n            result = (0, _defaultSortCompare.defaultSortCompare)(a, b, {\n              sortBy: sortBy,\n              formatter: formatter,\n              locale: locale,\n              localeOptions: localeOptions,\n              nullLast: nullLast\n            });\n          } // Negate result if sorting in descending order\n\n\n          return (result || 0) * (sortDesc ? -1 : 1);\n        });\n      }\n\n      return items;\n    }\n  },\n  watch: (_watch = {\n    /* istanbul ignore next: pain in the butt to test */\n    isSortable: function isSortable(newValue) {\n      if (newValue) {\n        if (this.isSortable) {\n          this.$on(_events.EVENT_NAME_HEAD_CLICKED, this.handleSort);\n        }\n      } else {\n        this.$off(_events.EVENT_NAME_HEAD_CLICKED, this.handleSort);\n      }\n    }\n  }, _defineProperty(_watch, MODEL_PROP_NAME_SORT_DESC, function (newValue) {\n    /* istanbul ignore next */\n    if (newValue === this.localSortDesc) {\n      return;\n    }\n\n    this.localSortDesc = newValue || false;\n  }), _defineProperty(_watch, MODEL_PROP_NAME_SORT_BY, function (newValue) {\n    /* istanbul ignore next */\n    if (newValue === this.localSortBy) {\n      return;\n    }\n\n    this.localSortBy = newValue || '';\n  }), _defineProperty(_watch, \"localSortDesc\", function localSortDesc(newValue, oldValue) {\n    // Emit update to sort-desc.sync\n    if (newValue !== oldValue) {\n      this.$emit(MODEL_EVENT_NAME_SORT_DESC, newValue);\n    }\n  }), _defineProperty(_watch, \"localSortBy\", function localSortBy(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.$emit(MODEL_EVENT_NAME_SORT_BY, newValue);\n    }\n  }), _watch),\n  created: function created() {\n    if (this.isSortable) {\n      this.$on(_events.EVENT_NAME_HEAD_CLICKED, this.handleSort);\n    }\n  },\n  methods: {\n    // Handlers\n    // Need to move from thead-mixin\n    handleSort: function handleSort(key, field, event, isFoot) {\n      var _this = this;\n\n      if (!this.isSortable) {\n        /* istanbul ignore next */\n        return;\n      }\n\n      if (isFoot && this.noFooterSorting) {\n        return;\n      } // TODO: make this tri-state sorting\n      // cycle desc => asc => none => desc => ...\n\n\n      var sortChanged = false;\n\n      var toggleLocalSortDesc = function toggleLocalSortDesc() {\n        var sortDirection = field.sortDirection || _this.sortDirection;\n\n        if (sortDirection === SORT_DIRECTION_ASC) {\n          _this.localSortDesc = false;\n        } else if (sortDirection === SORT_DIRECTION_DESC) {\n          _this.localSortDesc = true;\n        } else {// sortDirection === 'last'\n          // Leave at last sort direction from previous column\n        }\n      };\n\n      if (field.sortable) {\n        var sortKey = !this.localSorting && field.sortKey ? field.sortKey : key;\n\n        if (this.localSortBy === sortKey) {\n          // Change sorting direction on current column\n          this.localSortDesc = !this.localSortDesc;\n        } else {\n          // Start sorting this column ascending\n          this.localSortBy = sortKey; // this.localSortDesc = false\n\n          toggleLocalSortDesc();\n        }\n\n        sortChanged = true;\n      } else if (this.localSortBy && !this.noSortReset) {\n        this.localSortBy = '';\n        toggleLocalSortDesc();\n        sortChanged = true;\n      }\n\n      if (sortChanged) {\n        // Sorting parameters changed\n        this.$emit(_events.EVENT_NAME_SORT_CHANGED, this.context);\n      }\n    },\n    // methods to compute classes and attrs for thead>th cells\n    sortTheadThClasses: function sortTheadThClasses(key, field, isFoot) {\n      return {\n        // If sortable and sortIconLeft are true, then place sort icon on the left\n        'b-table-sort-icon-left': field.sortable && this.sortIconLeft && !(isFoot && this.noFooterSorting)\n      };\n    },\n    sortTheadThAttrs: function sortTheadThAttrs(key, field, isFoot) {\n      if (!this.isSortable || isFoot && this.noFooterSorting) {\n        // No attributes if not a sortable table\n        return {};\n      }\n\n      var sortable = field.sortable; // Assemble the aria-sort attribute value\n\n      var ariaSort = sortable && this.localSortBy === key ? this.localSortDesc ? 'descending' : 'ascending' : sortable ? 'none' : null; // Return the attribute\n\n      return {\n        'aria-sort': ariaSort\n      };\n    },\n    sortTheadThLabel: function sortTheadThLabel(key, field, isFoot) {\n      // A label to be placed in an `.sr-only` element in the header cell\n      if (!this.isSortable || isFoot && this.noFooterSorting) {\n        // No label if not a sortable table\n        return null;\n      }\n\n      var sortable = field.sortable; // The correctness of these labels is very important for screen-reader users.\n\n      var labelSorting = '';\n\n      if (sortable) {\n        if (this.localSortBy === key) {\n          // currently sorted sortable column.\n          labelSorting = this.localSortDesc ? this.labelSortAsc : this.labelSortDesc;\n        } else {\n          // Not currently sorted sortable column.\n          // Not using nested ternary's here for clarity/readability\n          // Default for ariaLabel\n          labelSorting = this.localSortDesc ? this.labelSortDesc : this.labelSortAsc; // Handle sortDirection setting\n\n          var sortDirection = this.sortDirection || field.sortDirection;\n\n          if (sortDirection === SORT_DIRECTION_ASC) {\n            labelSorting = this.labelSortAsc;\n          } else if (sortDirection === SORT_DIRECTION_DESC) {\n            labelSorting = this.labelSortDesc;\n          }\n        }\n      } else if (!this.noSortReset) {\n        // Non sortable column\n        labelSorting = this.localSortBy ? this.labelSortClear : '';\n      } // Return the sr-only sort label or null if no label\n\n\n      return (0, _string.trim)(labelSorting) || null;\n    }\n  }\n});\n\nexports.sortingMixin = sortingMixin;"},"sourceMaps":null,"error":null,"hash":"946cac9becd9a9ef2119ef7a73dc2793","cacheData":{"env":{}}}