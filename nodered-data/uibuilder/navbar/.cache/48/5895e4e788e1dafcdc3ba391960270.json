{"id":"../node_modules/bootstrap-vue/esm/components/navbar/navbar.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":3,"column":20,"index":231},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/navbar/navbar.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":4,"column":28,"index":272},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/navbar/navbar.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":5,"column":78,"index":380},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/navbar/navbar.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../utils/config","loc":{"line":6,"column":31,"index":436},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/navbar/navbar.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/config.js"},{"name":"../../utils/dom","loc":{"line":7,"column":22,"index":480},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/navbar/navbar.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../../utils/inspect","loc":{"line":8,"column":25,"index":524},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/navbar/navbar.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/props","loc":{"line":9,"column":48,"index":595},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/navbar/navbar.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../mixins/normalize-slot","loc":{"line":10,"column":35,"index":651},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/navbar/navbar.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BNavbar = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _config = require(\"../../utils/config\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _normalizeSlot = require(\"../../mixins/normalize-slot\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Props ---\nvar props = (0, _props2.makePropsConfigurable)({\n  fixed: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  print: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  sticky: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  tag: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'nav'),\n  toggleable: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN_STRING, false),\n  type: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'light'),\n  variant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n}, _components.NAME_NAVBAR); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BNavbar = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_NAVBAR,\n  mixins: [_normalizeSlot.normalizeSlotMixin],\n  provide: function provide() {\n    return {\n      bvNavbar: this\n    };\n  },\n  props: props,\n  computed: {\n    breakpointClass: function breakpointClass() {\n      var toggleable = this.toggleable;\n      var xs = (0, _config.getBreakpoints)()[0];\n      var breakpoint = null;\n\n      if (toggleable && (0, _inspect.isString)(toggleable) && toggleable !== xs) {\n        breakpoint = \"navbar-expand-\".concat(toggleable);\n      } else if (toggleable === false) {\n        breakpoint = 'navbar-expand';\n      }\n\n      return breakpoint;\n    }\n  },\n  render: function render(h) {\n    var _ref;\n\n    var tag = this.tag,\n        type = this.type,\n        variant = this.variant,\n        fixed = this.fixed;\n    return h(tag, {\n      staticClass: 'navbar',\n      class: [(_ref = {\n        'd-print': this.print,\n        'sticky-top': this.sticky\n      }, _defineProperty(_ref, \"navbar-\".concat(type), type), _defineProperty(_ref, \"bg-\".concat(variant), variant), _defineProperty(_ref, \"fixed-\".concat(fixed), fixed), _ref), this.breakpointClass],\n      attrs: {\n        role: (0, _dom.isTag)(tag, 'nav') ? null : 'navigation'\n      }\n    }, [this.normalizeSlot()]);\n  }\n});\n\nexports.BNavbar = BNavbar;"},"sourceMaps":null,"error":null,"hash":"99ebb400c397db9f4c329cc3b1cef054","cacheData":{"env":{}}}