{"id":"../node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":3,"column":31,"index":242},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":4,"column":31,"index":286},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":5,"column":77,"index":393},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../utils/identity","loc":{"line":6,"column":25,"index":443},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/identity.js"},{"name":"../../utils/inspect","loc":{"line":7,"column":34,"index":501},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/math","loc":{"line":8,"column":24,"index":548},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/math.js"},{"name":"../../utils/number","loc":{"line":9,"column":24,"index":592},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/number.js"},{"name":"../../utils/props","loc":{"line":10,"column":25,"index":639},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/helpers/icon-base.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BVIconBase = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _identity = require(\"../../utils/identity\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _math = require(\"../../utils/math\");\n\nvar _number = require(\"../../utils/number\");\n\nvar _props2 = require(\"../../utils/props\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Constants ---\n// Base attributes needed on all icons\nvar BASE_ATTRS = {\n  viewBox: '0 0 16 16',\n  width: '1em',\n  height: '1em',\n  focusable: 'false',\n  role: 'img',\n  'aria-label': 'icon'\n}; // Attributes that are nulled out when stacked\n\nvar STACKED_ATTRS = {\n  width: null,\n  height: null,\n  focusable: null,\n  role: null,\n  'aria-label': null\n}; // --- Props ---\n\nvar props = {\n  animation: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  content: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  flipH: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  flipV: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  fontScale: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 1),\n  rotate: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 0),\n  scale: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 1),\n  shiftH: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 0),\n  shiftV: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 0),\n  stacked: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  title: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  variant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n}; // --- Main component ---\n// Shared private base component to reduce bundle/runtime size\n// @vue/component\n\nexports.props = props;\n\nvar BVIconBase = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_ICON_BASE,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n\n    var data = _ref.data,\n        props = _ref.props,\n        children = _ref.children;\n    var animation = props.animation,\n        content = props.content,\n        flipH = props.flipH,\n        flipV = props.flipV,\n        stacked = props.stacked,\n        title = props.title,\n        variant = props.variant;\n    var fontScale = (0, _math.mathMax)((0, _number.toFloat)(props.fontScale, 1), 0) || 1;\n    var scale = (0, _math.mathMax)((0, _number.toFloat)(props.scale, 1), 0) || 1;\n    var rotate = (0, _number.toFloat)(props.rotate, 0);\n    var shiftH = (0, _number.toFloat)(props.shiftH, 0);\n    var shiftV = (0, _number.toFloat)(props.shiftV, 0); // Compute the transforms\n    // Note that order is important as SVG transforms are applied in order from\n    // left to right and we want flipping/scale to occur before rotation\n    // Note shifting is applied separately\n    // Assumes that the viewbox is `0 0 16 16` (`8 8` is the center)\n\n    var hasScale = flipH || flipV || scale !== 1;\n    var hasTransforms = hasScale || rotate;\n    var hasShift = shiftH || shiftV;\n    var hasContent = !(0, _inspect.isUndefinedOrNull)(content);\n    var transforms = [hasTransforms ? 'translate(8 8)' : null, hasScale ? \"scale(\".concat((flipH ? -1 : 1) * scale, \" \").concat((flipV ? -1 : 1) * scale, \")\") : null, rotate ? \"rotate(\".concat(rotate, \")\") : null, hasTransforms ? 'translate(-8 -8)' : null].filter(_identity.identity); // We wrap the content in a `<g>` for handling the transforms (except shift)\n\n    var $inner = h('g', {\n      attrs: {\n        transform: transforms.join(' ') || null\n      },\n      domProps: hasContent ? {\n        innerHTML: content || ''\n      } : {}\n    }, children); // If needed, we wrap in an additional `<g>` in order to handle the shifting\n\n    if (hasShift) {\n      $inner = h('g', {\n        attrs: {\n          transform: \"translate(\".concat(16 * shiftH / 16, \" \").concat(-16 * shiftV / 16, \")\")\n        }\n      }, [$inner]);\n    } // Wrap in an additional `<g>` for proper animation handling if stacked\n\n\n    if (stacked) {\n      $inner = h('g', [$inner]);\n    }\n\n    var $title = title ? h('title', title) : null;\n    var $content = [$title, $inner].filter(_identity.identity);\n    return h('svg', (0, _vue.mergeData)({\n      staticClass: 'b-icon bi',\n      class: (_class = {}, _defineProperty(_class, \"text-\".concat(variant), variant), _defineProperty(_class, \"b-icon-animation-\".concat(animation), animation), _class),\n      attrs: BASE_ATTRS,\n      style: stacked ? {} : {\n        fontSize: fontScale === 1 ? null : \"\".concat(fontScale * 100, \"%\")\n      }\n    }, // Merge in user supplied data\n    data, // If icon is stacked, null-out some attrs\n    stacked ? {\n      attrs: STACKED_ATTRS\n    } : {}, // These cannot be overridden by users\n    {\n      attrs: {\n        xmlns: stacked ? null : 'http://www.w3.org/2000/svg',\n        fill: 'currentColor'\n      }\n    }), $content);\n  }\n});\n\nexports.BVIconBase = BVIconBase;"},"sourceMaps":null,"error":null,"hash":"ccc2d860b84daef998d12e665a2ae82d","cacheData":{"env":{}}}