{"id":"../node_modules/bootstrap-vue/esm/components/time/time.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":22,"column":20,"index":2685},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":23,"column":26,"index":2724},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/events","loc":{"line":24,"column":35,"index":2789},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../constants/key-codes","loc":{"line":25,"column":38,"index":2853},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/key-codes.js"},{"name":"../../constants/props","loc":{"line":26,"column":101,"index":2983},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../constants/regex","loc":{"line":27,"column":24,"index":3032},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/regex.js"},{"name":"../../utils/array","loc":{"line":28,"column":23,"index":3080},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"},{"name":"../../utils/date","loc":{"line":29,"column":48,"index":3149},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/date.js"},{"name":"../../utils/dom","loc":{"line":30,"column":81,"index":3250},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../../utils/events","loc":{"line":31,"column":26,"index":3295},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/events.js"},{"name":"../../utils/identity","loc":{"line":32,"column":25,"index":3342},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/identity.js"},{"name":"../../utils/inspect","loc":{"line":33,"column":42,"index":3408},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/loose-equal","loc":{"line":34,"column":27,"index":3458},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/loose-equal.js"},{"name":"../../utils/locale","loc":{"line":35,"column":28,"index":3513},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/locale.js"},{"name":"../../utils/model","loc":{"line":36,"column":31,"index":3566},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/model.js"},{"name":"../../utils/number","loc":{"line":37,"column":26,"index":3613},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/number.js"},{"name":"../../utils/object","loc":{"line":38,"column":31,"index":3666},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/object.js"},{"name":"../../utils/props","loc":{"line":39,"column":48,"index":3736},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../utils/string","loc":{"line":40,"column":25,"index":3782},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/string.js"},{"name":"../../mixins/id","loc":{"line":41,"column":42,"index":3846},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/id.js"},{"name":"../../mixins/normalize-slot","loc":{"line":42,"column":35,"index":3900},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"},{"name":"../form-spinbutton/form-spinbutton","loc":{"line":43,"column":63,"index":3994},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-spinbutton/form-spinbutton.js"},{"name":"../../icons/icons","loc":{"line":44,"column":48,"index":4080},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/icons.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BTime = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _events = require(\"../../constants/events\");\n\nvar _keyCodes = require(\"../../constants/key-codes\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _regex = require(\"../../constants/regex\");\n\nvar _array = require(\"../../utils/array\");\n\nvar _date = require(\"../../utils/date\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _events2 = require(\"../../utils/events\");\n\nvar _identity = require(\"../../utils/identity\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _looseEqual = require(\"../../utils/loose-equal\");\n\nvar _locale = require(\"../../utils/locale\");\n\nvar _model = require(\"../../utils/model\");\n\nvar _number = require(\"../../utils/number\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _string = require(\"../../utils/string\");\n\nvar _id = require(\"../../mixins/id\");\n\nvar _normalizeSlot = require(\"../../mixins/normalize-slot\");\n\nvar _formSpinbutton = require(\"../form-spinbutton/form-spinbutton\");\n\nvar _icons = require(\"../../icons/icons\");\n\nvar _watch;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n} // BTime control (not form input control)\n\n\n// --- Constants ---\nvar _makeModelMixin = (0, _model.makeModelMixin)('value', {\n  type: _props.PROP_TYPE_STRING,\n  defaultValue: ''\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event;\n\nvar NUMERIC = 'numeric'; // --- Helper methods ---\n\nvar padLeftZeros = function padLeftZeros(value) {\n  return \"00\".concat(value || '').slice(-2);\n};\n\nvar parseHMS = function parseHMS(value) {\n  value = (0, _string.toString)(value);\n  var hh = null,\n      mm = null,\n      ss = null;\n\n  if (_regex.RX_TIME.test(value)) {\n    ;\n\n    var _value$split$map = value.split(':').map(function (v) {\n      return (0, _number.toInteger)(v, null);\n    });\n\n    var _value$split$map2 = _slicedToArray(_value$split$map, 3);\n\n    hh = _value$split$map2[0];\n    mm = _value$split$map2[1];\n    ss = _value$split$map2[2];\n  }\n\n  return {\n    hours: (0, _inspect.isUndefinedOrNull)(hh) ? null : hh,\n    minutes: (0, _inspect.isUndefinedOrNull)(mm) ? null : mm,\n    seconds: (0, _inspect.isUndefinedOrNull)(ss) ? null : ss,\n    ampm: (0, _inspect.isUndefinedOrNull)(hh) || hh < 12 ? 0 : 1\n  };\n};\n\nvar formatHMS = function formatHMS(_ref) {\n  var hours = _ref.hours,\n      minutes = _ref.minutes,\n      seconds = _ref.seconds;\n  var requireSeconds = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  if ((0, _inspect.isNull)(hours) || (0, _inspect.isNull)(minutes) || requireSeconds && (0, _inspect.isNull)(seconds)) {\n    return '';\n  }\n\n  var hms = [hours, minutes, requireSeconds ? seconds : 0];\n  return hms.map(padLeftZeros).join(':');\n}; // --- Props ---\n\n\nvar props = (0, _props2.makePropsConfigurable)((0, _object.sortKeys)(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _id.props), modelProps), (0, _object.pick)(_formSpinbutton.props, ['labelIncrement', 'labelDecrement'])), {}, {\n  // ID of label element\n  ariaLabelledby: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  disabled: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  hidden: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  hideHeader: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  // Explicitly force 12 or 24 hour time\n  // Default is to use resolved locale for 12/24 hour display\n  // Tri-state: `true` = 12, `false` = 24, `null` = auto\n  hour12: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, null),\n  labelAm: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'AM'),\n  labelAmpm: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'AM/PM'),\n  labelHours: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Hours'),\n  labelMinutes: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Minutes'),\n  labelNoTimeSelected: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'No time selected'),\n  labelPm: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'PM'),\n  labelSeconds: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Seconds'),\n  labelSelected: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Selected time'),\n  locale: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_STRING),\n  minutesStep: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 1),\n  readonly: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  secondsStep: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 1),\n  // If `true`, show the second spinbutton\n  showSeconds: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false)\n})), _components.NAME_TIME); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BTime = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_TIME,\n  mixins: [_id.idMixin, modelMixin, _normalizeSlot.normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    var parsed = parseHMS(this[MODEL_PROP_NAME] || '');\n    return {\n      // Spin button models\n      modelHours: parsed.hours,\n      modelMinutes: parsed.minutes,\n      modelSeconds: parsed.seconds,\n      modelAmpm: parsed.ampm,\n      // Internal flag to enable aria-live regions\n      isLive: false\n    };\n  },\n  computed: {\n    computedHMS: function computedHMS() {\n      var hours = this.modelHours;\n      var minutes = this.modelMinutes;\n      var seconds = this.modelSeconds;\n      return formatHMS({\n        hours: hours,\n        minutes: minutes,\n        seconds: seconds\n      }, this.showSeconds);\n    },\n    resolvedOptions: function resolvedOptions() {\n      // Resolved locale options\n      var locale = (0, _array.concat)(this.locale).filter(_identity.identity);\n      var options = {\n        hour: NUMERIC,\n        minute: NUMERIC,\n        second: NUMERIC\n      };\n\n      if (!(0, _inspect.isUndefinedOrNull)(this.hour12)) {\n        // Force 12 or 24 hour clock\n        options.hour12 = !!this.hour12;\n      }\n\n      var dtf = new Intl.DateTimeFormat(locale, options);\n      var resolved = dtf.resolvedOptions();\n      var hour12 = resolved.hour12 || false; // IE 11 doesn't resolve the hourCycle, so we make\n      // an assumption and fall back to common values\n\n      var hourCycle = resolved.hourCycle || (hour12 ? 'h12' : 'h23');\n      return {\n        locale: resolved.locale,\n        hour12: hour12,\n        hourCycle: hourCycle\n      };\n    },\n    computedLocale: function computedLocale() {\n      return this.resolvedOptions.locale;\n    },\n    computedLang: function computedLang() {\n      return (this.computedLocale || '').replace(/-u-.*$/, '');\n    },\n    computedRTL: function computedRTL() {\n      return (0, _locale.isLocaleRTL)(this.computedLang);\n    },\n    computedHourCycle: function computedHourCycle() {\n      // h11, h12, h23, or h24\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Locale/hourCycle\n      // h12 - Hour system using 1–12. Corresponds to 'h' in patterns. The 12 hour clock, with midnight starting at 12:00 am\n      // h23 - Hour system using 0–23. Corresponds to 'H' in patterns. The 24 hour clock, with midnight starting at 0:00\n      // h11 - Hour system using 0–11. Corresponds to 'K' in patterns. The 12 hour clock, with midnight starting at 0:00 am\n      // h24 - Hour system using 1–24. Corresponds to 'k' in pattern. The 24 hour clock, with midnight starting at 24:00\n      // For h12 or h24, we visually format 00 hours as 12\n      return this.resolvedOptions.hourCycle;\n    },\n    is12Hour: function is12Hour() {\n      return !!this.resolvedOptions.hour12;\n    },\n    context: function context() {\n      return {\n        locale: this.computedLocale,\n        isRTL: this.computedRTL,\n        hourCycle: this.computedHourCycle,\n        hour12: this.is12Hour,\n        hours: this.modelHours,\n        minutes: this.modelMinutes,\n        seconds: this.showSeconds ? this.modelSeconds : 0,\n        value: this.computedHMS,\n        formatted: this.formattedTimeString\n      };\n    },\n    valueId: function valueId() {\n      return this.safeId() || null;\n    },\n    computedAriaLabelledby: function computedAriaLabelledby() {\n      return [this.ariaLabelledby, this.valueId].filter(_identity.identity).join(' ') || null;\n    },\n    timeFormatter: function timeFormatter() {\n      // Returns a formatter function reference\n      // The formatter converts the time to a localized string\n      var options = {\n        hour12: this.is12Hour,\n        hourCycle: this.computedHourCycle,\n        hour: NUMERIC,\n        minute: NUMERIC,\n        timeZone: 'UTC'\n      };\n\n      if (this.showSeconds) {\n        options.second = NUMERIC;\n      } // Formats the time as a localized string\n\n\n      return (0, _date.createDateFormatter)(this.computedLocale, options);\n    },\n    numberFormatter: function numberFormatter() {\n      // Returns a formatter function reference\n      // The formatter always formats as 2 digits and is localized\n      var nf = new Intl.NumberFormat(this.computedLocale, {\n        style: 'decimal',\n        minimumIntegerDigits: 2,\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n        notation: 'standard'\n      });\n      return nf.format;\n    },\n    formattedTimeString: function formattedTimeString() {\n      var hours = this.modelHours;\n      var minutes = this.modelMinutes;\n      var seconds = this.showSeconds ? this.modelSeconds || 0 : 0;\n\n      if (this.computedHMS) {\n        return this.timeFormatter((0, _date.createDate)(Date.UTC(0, 0, 1, hours, minutes, seconds)));\n      }\n\n      return this.labelNoTimeSelected || ' ';\n    },\n    spinScopedSlots: function spinScopedSlots() {\n      var h = this.$createElement;\n      return {\n        increment: function increment(_ref2) {\n          var hasFocus = _ref2.hasFocus;\n          return h(_icons.BIconChevronUp, {\n            props: {\n              scale: hasFocus ? 1.5 : 1.25\n            },\n            attrs: {\n              'aria-hidden': 'true'\n            }\n          });\n        },\n        decrement: function decrement(_ref3) {\n          var hasFocus = _ref3.hasFocus;\n          return h(_icons.BIconChevronUp, {\n            props: {\n              flipV: true,\n              scale: hasFocus ? 1.5 : 1.25\n            },\n            attrs: {\n              'aria-hidden': 'true'\n            }\n          });\n        }\n      };\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue, oldValue) {\n    if (newValue !== oldValue && !(0, _looseEqual.looseEqual)(parseHMS(newValue), parseHMS(this.computedHMS))) {\n      var _parseHMS = parseHMS(newValue),\n          hours = _parseHMS.hours,\n          minutes = _parseHMS.minutes,\n          seconds = _parseHMS.seconds,\n          ampm = _parseHMS.ampm;\n\n      this.modelHours = hours;\n      this.modelMinutes = minutes;\n      this.modelSeconds = seconds;\n      this.modelAmpm = ampm;\n    }\n  }), _defineProperty(_watch, \"computedHMS\", function computedHMS(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.$emit(MODEL_EVENT_NAME, newValue);\n    }\n  }), _defineProperty(_watch, \"context\", function context(newValue, oldValue) {\n    if (!(0, _looseEqual.looseEqual)(newValue, oldValue)) {\n      this.$emit(_events.EVENT_NAME_CONTEXT, newValue);\n    }\n  }), _defineProperty(_watch, \"modelAmpm\", function modelAmpm(newValue, oldValue) {\n    var _this = this;\n\n    if (newValue !== oldValue) {\n      var hours = (0, _inspect.isNull)(this.modelHours) ? 0 : this.modelHours;\n      this.$nextTick(function () {\n        if (newValue === 0 && hours > 11) {\n          // Switched to AM\n          _this.modelHours = hours - 12;\n        } else if (newValue === 1 && hours < 12) {\n          // Switched to PM\n          _this.modelHours = hours + 12;\n        }\n      });\n    }\n  }), _defineProperty(_watch, \"modelHours\", function modelHours(newHours, oldHours) {\n    if (newHours !== oldHours) {\n      this.modelAmpm = newHours > 11 ? 1 : 0;\n    }\n  }), _watch),\n  created: function created() {\n    var _this2 = this;\n\n    this.$nextTick(function () {\n      _this2.$emit(_events.EVENT_NAME_CONTEXT, _this2.context);\n    });\n  },\n  mounted: function mounted() {\n    this.setLive(true);\n  },\n\n  /* istanbul ignore next */\n  activated: function activated() {\n    this.setLive(true);\n  },\n\n  /* istanbul ignore next */\n  deactivated: function deactivated() {\n    this.setLive(false);\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.setLive(false);\n  },\n  methods: {\n    // Public methods\n    focus: function focus() {\n      if (!this.disabled) {\n        // We focus the first spin button\n        (0, _dom.attemptFocus)(this.$refs.spinners[0]);\n      }\n    },\n    blur: function blur() {\n      if (!this.disabled) {\n        var activeElement = (0, _dom.getActiveElement)();\n\n        if ((0, _dom.contains)(this.$el, activeElement)) {\n          (0, _dom.attemptBlur)(activeElement);\n        }\n      }\n    },\n    // Formatters for the spin buttons\n    formatHours: function formatHours(hh) {\n      var hourCycle = this.computedHourCycle; // We always store 0-23, but format based on h11/h12/h23/h24 formats\n\n      hh = this.is12Hour && hh > 12 ? hh - 12 : hh; // Determine how 00:00 and 12:00 are shown\n\n      hh = hh === 0 && hourCycle === 'h12' ? 12 : hh === 0 && hourCycle === 'h24' ?\n      /* istanbul ignore next */\n      24 : hh === 12 && hourCycle === 'h11' ?\n      /* istanbul ignore next */\n      0 : hh;\n      return this.numberFormatter(hh);\n    },\n    formatMinutes: function formatMinutes(mm) {\n      return this.numberFormatter(mm);\n    },\n    formatSeconds: function formatSeconds(ss) {\n      return this.numberFormatter(ss);\n    },\n    formatAmpm: function formatAmpm(ampm) {\n      // These should come from label props???\n      // `ampm` should always be a value of `0` or `1`\n      return ampm === 0 ? this.labelAm : ampm === 1 ? this.labelPm : '';\n    },\n    // Spinbutton on change handlers\n    setHours: function setHours(value) {\n      this.modelHours = value;\n    },\n    setMinutes: function setMinutes(value) {\n      this.modelMinutes = value;\n    },\n    setSeconds: function setSeconds(value) {\n      this.modelSeconds = value;\n    },\n    setAmpm: function setAmpm(value) {\n      this.modelAmpm = value;\n    },\n    onSpinLeftRight: function onSpinLeftRight() {\n      var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var type = event.type,\n          keyCode = event.keyCode;\n\n      if (!this.disabled && type === 'keydown' && (keyCode === _keyCodes.CODE_LEFT || keyCode === _keyCodes.CODE_RIGHT)) {\n        (0, _events2.stopEvent)(event);\n        var spinners = this.$refs.spinners || [];\n        var index = spinners.map(function (cmp) {\n          return !!cmp.hasFocus;\n        }).indexOf(true);\n        index = index + (keyCode === _keyCodes.CODE_LEFT ? -1 : 1);\n        index = index >= spinners.length ? 0 : index < 0 ? spinners.length - 1 : index;\n        (0, _dom.attemptFocus)(spinners[index]);\n      }\n    },\n    setLive: function setLive(on) {\n      var _this3 = this;\n\n      if (on) {\n        this.$nextTick(function () {\n          (0, _dom.requestAF)(function () {\n            _this3.isLive = true;\n          });\n        });\n      } else {\n        this.isLive = false;\n      }\n    }\n  },\n  render: function render(h) {\n    var _this4 = this;\n    /* istanbul ignore if */\n\n\n    if (this.hidden) {\n      // If hidden, we just render a placeholder comment\n      return h();\n    }\n\n    var valueId = this.valueId;\n    var computedAriaLabelledby = this.computedAriaLabelledby;\n    var spinIds = []; // Helper method to render a spinbutton\n\n    var makeSpinbutton = function makeSpinbutton(handler, key, classes) {\n      var spinbuttonProps = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var id = _this4.safeId(\"_spinbutton_\".concat(key, \"_\")) || null;\n      spinIds.push(id);\n      return h(_formSpinbutton.BFormSpinbutton, {\n        class: classes,\n        props: _objectSpread({\n          id: id,\n          placeholder: '--',\n          vertical: true,\n          required: true,\n          disabled: _this4.disabled,\n          readonly: _this4.readonly,\n          locale: _this4.computedLocale,\n          labelIncrement: _this4.labelIncrement,\n          labelDecrement: _this4.labelDecrement,\n          wrap: true,\n          ariaControls: valueId,\n          min: 0\n        }, spinbuttonProps),\n        scopedSlots: _this4.spinScopedSlots,\n        on: {\n          // We use `change` event to minimize SR verbosity\n          // As the spinbutton will announce each value change\n          // and we don't want the formatted time to be announced\n          // on each value input if repeat is happening\n          change: handler\n        },\n        key: key,\n        ref: 'spinners',\n        refInFor: true\n      });\n    }; // Helper method to return a \"colon\" separator\n\n\n    var makeColon = function makeColon() {\n      return h('div', {\n        staticClass: 'd-flex flex-column',\n        class: {\n          'text-muted': _this4.disabled || _this4.readonly\n        },\n        attrs: {\n          'aria-hidden': 'true'\n        }\n      }, [h(_icons.BIconCircleFill, {\n        props: {\n          shiftV: 4,\n          scale: 0.5\n        }\n      }), h(_icons.BIconCircleFill, {\n        props: {\n          shiftV: -4,\n          scale: 0.5\n        }\n      })]);\n    };\n\n    var $spinners = []; // Hours\n\n    $spinners.push(makeSpinbutton(this.setHours, 'hours', 'b-time-hours', {\n      value: this.modelHours,\n      max: 23,\n      step: 1,\n      formatterFn: this.formatHours,\n      ariaLabel: this.labelHours\n    })); // Spacer\n\n    $spinners.push(makeColon()); // Minutes\n\n    $spinners.push(makeSpinbutton(this.setMinutes, 'minutes', 'b-time-minutes', {\n      value: this.modelMinutes,\n      max: 59,\n      step: this.minutesStep || 1,\n      formatterFn: this.formatMinutes,\n      ariaLabel: this.labelMinutes\n    }));\n\n    if (this.showSeconds) {\n      // Spacer\n      $spinners.push(makeColon()); // Seconds\n\n      $spinners.push(makeSpinbutton(this.setSeconds, 'seconds', 'b-time-seconds', {\n        value: this.modelSeconds,\n        max: 59,\n        step: this.secondsStep || 1,\n        formatterFn: this.formatSeconds,\n        ariaLabel: this.labelSeconds\n      }));\n    } // AM/PM ?\n\n\n    if (this.is12Hour) {\n      // TODO:\n      //   If locale is RTL, unshift this instead of push?\n      //   And switch class `ml-2` to `mr-2`\n      //   Note some LTR locales (i.e. zh) also place AM/PM to the left\n      $spinners.push(makeSpinbutton(this.setAmpm, 'ampm', 'b-time-ampm', {\n        value: this.modelAmpm,\n        max: 1,\n        formatterFn: this.formatAmpm,\n        ariaLabel: this.labelAmpm,\n        // We set `required` as `false`, since this always has a value\n        required: false\n      }));\n    } // Assemble spinners\n\n\n    $spinners = h('div', {\n      staticClass: 'd-flex align-items-center justify-content-center mx-auto',\n      attrs: {\n        role: 'group',\n        tabindex: this.disabled || this.readonly ? null : '-1',\n        'aria-labelledby': computedAriaLabelledby\n      },\n      on: {\n        keydown: this.onSpinLeftRight,\n        click:\n        /* istanbul ignore next */\n        function click(event) {\n          if (event.target === event.currentTarget) {\n            _this4.focus();\n          }\n        }\n      }\n    }, $spinners); // Selected type display\n\n    var $value = h('output', {\n      staticClass: 'form-control form-control-sm text-center',\n      class: {\n        disabled: this.disabled || this.readonly\n      },\n      attrs: {\n        id: valueId,\n        role: 'status',\n        for: spinIds.filter(_identity.identity).join(' ') || null,\n        tabindex: this.disabled ? null : '-1',\n        'aria-live': this.isLive ? 'polite' : 'off',\n        'aria-atomic': 'true'\n      },\n      on: {\n        // Transfer focus/click to focus hours spinner\n        click: this.focus,\n        focus: this.focus\n      }\n    }, [h('bdi', this.formattedTimeString), this.computedHMS ? h('span', {\n      staticClass: 'sr-only'\n    }, \" (\".concat(this.labelSelected, \") \")) : '']);\n    var $header = h('header', {\n      staticClass: 'b-time-header',\n      class: {\n        'sr-only': this.hideHeader\n      }\n    }, [$value]); // Optional bottom slot\n\n    var $slot = this.normalizeSlot();\n    $slot = $slot ? h('footer', {\n      staticClass: 'b-time-footer'\n    }, $slot) : h();\n    return h('div', {\n      staticClass: 'b-time d-inline-flex flex-column text-center',\n      attrs: {\n        role: 'group',\n        lang: this.computedLang || null,\n        'aria-labelledby': computedAriaLabelledby || null,\n        'aria-disabled': this.disabled ? 'true' : null,\n        'aria-readonly': this.readonly && !this.disabled ? 'true' : null\n      }\n    }, [$header, $spinners, $slot]);\n  }\n});\n\nexports.BTime = BTime;"},"sourceMaps":null,"error":null,"hash":"a7a0cbe10d1ae52e39baca2a24bcd5f8","cacheData":{"env":{}}}