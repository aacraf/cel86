{"id":"../../node_modules/echarts/lib/component/axisPointer.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/node_modules/echarts/package.json","includedInParent":true,"mtime":1654768047284},{"name":"../echarts","loc":{"line":21,"column":22,"index":815},"parent":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer.js","resolved":"/data/uibuilder/node_modules/echarts/lib/echarts.js"},{"name":"zrender/lib/core/util","loc":{"line":23,"column":21,"index":852},"parent":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer.js","resolved":"/data/uibuilder/node_modules/zrender/lib/core/util.js"},{"name":"./axisPointer/modelHelper","loc":{"line":25,"column":37,"index":916},"parent":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer.js","resolved":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer/modelHelper.js"},{"name":"./axisPointer/axisTrigger","loc":{"line":27,"column":26,"index":973},"parent":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer.js","resolved":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer/axisTrigger.js"},{"name":"./axisPointer/AxisPointerModel","loc":{"line":29,"column":8,"index":1012},"parent":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer.js","resolved":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer/AxisPointerModel.js"},{"name":"./axisPointer/AxisPointerView","loc":{"line":31,"column":8,"index":1056},"parent":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer.js","resolved":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer/AxisPointerView.js"},{"name":"./axisPointer/CartesianAxisPointer","loc":{"line":33,"column":8,"index":1099},"parent":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer.js","resolved":"/data/uibuilder/node_modules/echarts/lib/component/axisPointer/CartesianAxisPointer.js"}],"generated":{"js":"\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisPointerModelHelper = require(\"./axisPointer/modelHelper\");\n\nvar axisTrigger = require(\"./axisPointer/axisTrigger\");\n\nrequire(\"./axisPointer/AxisPointerModel\");\n\nrequire(\"./axisPointer/AxisPointerView\");\n\nrequire(\"./axisPointer/CartesianAxisPointer\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// CartesianAxisPointer is not supposed to be required here. But consider\n// echarts.simple.js and online build tooltip, which only require gridSimple,\n// CartesianAxisPointer should be able to required somewhere.\necharts.registerPreprocessor(function (option) {\n  // Always has a global axisPointerModel for default setting.\n  if (option) {\n    (!option.axisPointer || option.axisPointer.length === 0) && (option.axisPointer = {});\n    var link = option.axisPointer.link; // Normalize to array to avoid object mergin. But if link\n    // is not set, remain null/undefined, otherwise it will\n    // override existent link setting.\n\n    if (link && !zrUtil.isArray(link)) {\n      option.axisPointer.link = [link];\n    }\n  }\n}); // This process should proformed after coordinate systems created\n// and series data processed. So put it on statistic processing stage.\n\necharts.registerProcessor(echarts.PRIORITY.PROCESSOR.STATISTIC, function (ecModel, api) {\n  // Build axisPointerModel, mergin tooltip.axisPointer model for each axis.\n  // allAxesInfo should be updated when setOption performed.\n  ecModel.getComponent('axisPointer').coordSysAxesInfo = axisPointerModelHelper.collect(ecModel, api);\n}); // Broadcast to all views.\n\necharts.registerAction({\n  type: 'updateAxisPointer',\n  event: 'updateAxisPointer',\n  update: ':updateAxisPointer'\n}, axisTrigger);"},"sourceMaps":null,"error":null,"hash":"4429183b34e3f0ef67c4930ef4447bf0","cacheData":{"env":{}}}