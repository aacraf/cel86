{"id":"../node_modules/bootstrap-vue/esm/utils/number.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toInteger = exports.toFloat = exports.toFixed = void 0;\n\n// Number utilities\n// Converts a value (string, number, etc.) to an integer number\n// Assumes radix base 10\nvar toInteger = function toInteger(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NaN;\n  var integer = parseInt(value, 10);\n  return isNaN(integer) ? defaultValue : integer;\n}; // Converts a value (string, number, etc.) to a number\n\n\nexports.toInteger = toInteger;\n\nvar toFloat = function toFloat(value) {\n  var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : NaN;\n  var float = parseFloat(value);\n  return isNaN(float) ? defaultValue : float;\n}; // Converts a value (string, number, etc.) to a string\n// representation with `precision` digits after the decimal\n// Returns the string 'NaN' if the value cannot be converted\n\n\nexports.toFloat = toFloat;\n\nvar toFixed = function toFixed(val, precision) {\n  return toFloat(val).toFixed(toInteger(precision, 0));\n};\n\nexports.toFixed = toFixed;"},"sourceMaps":null,"error":null,"hash":"db7693d481a5a2004e4e64180e36de16","cacheData":{"env":{}}}