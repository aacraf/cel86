{"id":"../node_modules/bootstrap-vue/esm/components/form-select/form-select.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":7,"column":20,"index":1110},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":8,"column":33,"index":1156},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/events","loc":{"line":9,"column":34,"index":1220},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../constants/props","loc":{"line":10,"column":78,"index":1324},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../constants/slots","loc":{"line":11,"column":32,"index":1381},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/slots.js"},{"name":"../../utils/array","loc":{"line":12,"column":34,"index":1440},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"},{"name":"../../utils/dom","loc":{"line":13,"column":42,"index":1503},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../../utils/html","loc":{"line":14,"column":27,"index":1549},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/html.js"},{"name":"../../utils/inspect","loc":{"line":15,"column":24,"index":1593},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/object","loc":{"line":16,"column":25,"index":1641},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/object.js"},{"name":"../../utils/props","loc":{"line":17,"column":48,"index":1711},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../mixins/form-control","loc":{"line":18,"column":60,"index":1792},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-control.js"},{"name":"../../mixins/form-custom","loc":{"line":19,"column":58,"index":1879},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-custom.js"},{"name":"../../mixins/form-size","loc":{"line":20,"column":54,"index":1961},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-size.js"},{"name":"../../mixins/form-state","loc":{"line":21,"column":56,"index":2043},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-state.js"},{"name":"../../mixins/id","loc":{"line":22,"column":42,"index":2112},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/id.js"},{"name":"../../mixins/model","loc":{"line":23,"column":83,"index":2214},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/model.js"},{"name":"../../mixins/normalize-slot","loc":{"line":24,"column":35,"index":2271},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"},{"name":"./helpers/mixin-options","loc":{"line":25,"column":29,"index":2331},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/helpers/mixin-options.js"},{"name":"./form-select-option","loc":{"line":26,"column":34,"index":2392},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select-option.js"},{"name":"./form-select-option-group","loc":{"line":27,"column":39,"index":2455},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-select/form-select-option-group.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BFormSelect = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _events = require(\"../../constants/events\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _slots = require(\"../../constants/slots\");\n\nvar _array = require(\"../../utils/array\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _html = require(\"../../utils/html\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _formControl = require(\"../../mixins/form-control\");\n\nvar _formCustom = require(\"../../mixins/form-custom\");\n\nvar _formSize = require(\"../../mixins/form-size\");\n\nvar _formState = require(\"../../mixins/form-state\");\n\nvar _id = require(\"../../mixins/id\");\n\nvar _model = require(\"../../mixins/model\");\n\nvar _normalizeSlot = require(\"../../mixins/normalize-slot\");\n\nvar _mixinOptions = require(\"./helpers/mixin-options\");\n\nvar _formSelectOption = require(\"./form-select-option\");\n\nvar _formSelectOptionGroup = require(\"./form-select-option-group\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Props ---\nvar props = (0, _props2.makePropsConfigurable)((0, _object.sortKeys)(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _id.props), _model.props), _formControl.props), _formCustom.props), _formSize.props), _formState.props), {}, {\n  ariaInvalid: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN_STRING, false),\n  multiple: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  // Browsers default size to `0`, which shows 4 rows in most browsers in multiple mode\n  // Size of `1` can bork out Firefox\n  selectSize: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER, 0)\n})), _components.NAME_FORM_SELECT); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BFormSelect = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_FORM_SELECT,\n  mixins: [_id.idMixin, _model.modelMixin, _formControl.formControlMixin, _formSize.formSizeMixin, _formState.formStateMixin, _formCustom.formCustomMixin, _mixinOptions.optionsMixin, _normalizeSlot.normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    return {\n      localValue: this[_model.MODEL_PROP_NAME]\n    };\n  },\n  computed: {\n    computedSelectSize: function computedSelectSize() {\n      // Custom selects with a size of zero causes the arrows to be hidden,\n      // so dont render the size attribute in this case\n      return !this.plain && this.selectSize === 0 ? null : this.selectSize;\n    },\n    inputClass: function inputClass() {\n      return [this.plain ? 'form-control' : 'custom-select', this.size && this.plain ? \"form-control-\".concat(this.size) : null, this.size && !this.plain ? \"custom-select-\".concat(this.size) : null, this.stateClass];\n    }\n  },\n  watch: {\n    value: function value(newValue) {\n      this.localValue = newValue;\n    },\n    localValue: function localValue() {\n      this.$emit(_model.MODEL_EVENT_NAME, this.localValue);\n    }\n  },\n  methods: {\n    focus: function focus() {\n      (0, _dom.attemptFocus)(this.$refs.input);\n    },\n    blur: function blur() {\n      (0, _dom.attemptBlur)(this.$refs.input);\n    },\n    onChange: function onChange(event) {\n      var _this = this;\n\n      var target = event.target;\n      var selectedValue = (0, _array.from)(target.options).filter(function (o) {\n        return o.selected;\n      }).map(function (o) {\n        return '_value' in o ? o._value : o.value;\n      });\n      this.localValue = target.multiple ? selectedValue : selectedValue[0];\n      this.$nextTick(function () {\n        _this.$emit(_events.EVENT_NAME_CHANGE, _this.localValue);\n      });\n    }\n  },\n  render: function render(h) {\n    var name = this.name,\n        disabled = this.disabled,\n        required = this.required,\n        size = this.computedSelectSize,\n        value = this.localValue;\n    var $options = this.formOptions.map(function (option, index) {\n      var value = option.value,\n          label = option.label,\n          options = option.options,\n          disabled = option.disabled;\n      var key = \"option_\".concat(index);\n      return (0, _inspect.isArray)(options) ? h(_formSelectOptionGroup.BFormSelectOptionGroup, {\n        props: {\n          label: label,\n          options: options\n        },\n        key: key\n      }) : h(_formSelectOption.BFormSelectOption, {\n        props: {\n          value: value,\n          disabled: disabled\n        },\n        domProps: (0, _html.htmlOrText)(option.html, option.text),\n        key: key\n      });\n    });\n    return h('select', {\n      class: this.inputClass,\n      attrs: {\n        id: this.safeId(),\n        name: name,\n        form: this.form || null,\n        multiple: this.multiple || null,\n        size: size,\n        disabled: disabled,\n        required: required,\n        'aria-required': required ? 'true' : null,\n        'aria-invalid': this.computedAriaInvalid\n      },\n      on: {\n        change: this.onChange\n      },\n      directives: [{\n        name: 'model',\n        value: value\n      }],\n      ref: 'input'\n    }, [this.normalizeSlot(_slots.SLOT_NAME_FIRST), $options, this.normalizeSlot()]);\n  }\n});\n\nexports.BFormSelect = BFormSelect;"},"sourceMaps":null,"error":null,"hash":"efdf14804e82d8356bfc35741073bb67","cacheData":{"env":{}}}