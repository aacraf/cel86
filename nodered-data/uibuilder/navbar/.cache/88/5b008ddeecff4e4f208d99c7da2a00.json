{"id":"components/EchartsGrafica.vue","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"moment","loc":{"line":9,"column":19,"index":39},"parent":"/data/uibuilder/navbar/src/components/EchartsGrafica.vue","resolved":"/data/uibuilder/node_modules/moment/moment.js"},{"name":"vue-hot-reload-api","parent":"/data/uibuilder/navbar/src/components/EchartsGrafica.vue","resolved":"/data/uibuilder/navbar/node_modules/vue-hot-reload-api/dist/index.js"},{"name":"vue","parent":"/data/uibuilder/navbar/src/components/EchartsGrafica.vue","resolved":"/data/uibuilder/navbar/node_modules/vue/dist/vue.runtime.esm.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _moment = _interopRequireDefault(require(\"moment\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n//\n//\n//\n//\n//\n//\n_moment.default.locale('es');\n\nvar _default = {\n  props: {\n    SignalID: {\n      type: String,\n      required: true\n    },\n    live: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    timesteps: {\n      type: String,\n      required: false,\n      default: '5m'\n    },\n    stopLoading: {\n      type: Function,\n      required: false\n    }\n  },\n  data: function data() {\n    this.chartDataZoom = [{\n      type: 'slider'\n    }];\n    this.markPoint = {\n      data: []\n    };\n    return {\n      legend: {\n        data: [\"Tolerancia Superior\", \"Medicion\", \"Modelo\", \"Tolerancia Inferior\"],\n        // data: [ \"Medicion\"],\n        selected: {\n          \"Tolerancia Superior\": false,\n          \"Medicion\": true,\n          \"Modelo\": false,\n          \"Tolerancia Inferior\": false\n        }\n      },\n      series: [{\n        type: 'line',\n        name: 'Tolerancia Superior',\n        data: [],\n        smooth: true,\n        showSymbol: false\n      }, {\n        type: 'line',\n        name: 'Medicion',\n        data: [],\n        smooth: true,\n        showSymbol: false\n      }, {\n        type: 'line',\n        name: 'Modelo',\n        data: [],\n        smooth: true,\n        showSymbol: false\n      }, {\n        type: 'line',\n        name: 'Tolerancia Inferior',\n        data: [],\n        smooth: true,\n        showSymbol: false\n      }],\n      xAxis: {\n        type: \"time\",\n        // boundaryGap: false,\n        splitLine: {\n          show: false\n        }\n      },\n      yAxis: {\n        type: \"value\",\n        // boundaryGap: [0, \"100%\"],\n        splitLine: {\n          show: false\n        } // boundaryGap: ['20%', '20%']\n\n      },\n      // visualMap: [{ type: \"continuous\" }],\n      title: {\n        textAlign: \"left\",\n        text: this.SignalID,\n        textStyle: {\n          fontSize: 18,\n          fontWeight: \"bold\"\n        }\n      },\n      toolbox: {\n        show: true,\n        feature: {\n          dataZoom: {\n            yAxisIndex: \"none\"\n          },\n          restore: {},\n          saveAsImage: {}\n        }\n      },\n      tooltip: {\n        trigger: \"axis\",\n        axisPointer: {\n          animation: false\n        }\n      },\n      chartColors: [\"#FF0000\", \"#247BA0\", \"orange\", \"#FF0000\"],\n      chartData: {\n        showSymbol: false,\n        columns: [\"Timestamp\", \"Medicion\"],\n        rows: []\n      }\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    uibuilder.onChange(\"msg\", function (newMsg) {\n      // this.chartData.rows.push({\n      //   'Timestamp': moment.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"),\n      //   'Medicion': newMsg.payload.sensores.payload.Temp_Horno\n      // })\n      try {\n        _this.series[0].data.push({\n          name: _moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"),\n          value: [_moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"), newMsg.payload.sensores.payload[_this.SignalID + \"_Max\"]]\n        });\n\n        _this.series[1].data.push({\n          name: _moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"),\n          value: [_moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"), newMsg.payload.sensores.payload[_this.SignalID]]\n        });\n\n        _this.series[2].data.push({\n          name: _moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"),\n          value: [_moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"), newMsg.payload.forecasting.payload[14][newMsg.payload.forecasting.signal_index[_this.SignalID]]]\n        });\n\n        _this.series[3].data.push({\n          name: _moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"),\n          value: [_moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"), newMsg.payload.sensores.payload[_this.SignalID + \"_Min\"]]\n        });\n\n        if (newMsg.payload.sensores.payload.Inyectada) {\n          _this.markPoint.data.push({\n            name: 'Medicion',\n            yAxis: newMsg.payload.sensores.payload[_this.SignalID],\n            xAxis: _moment.default.utc(newMsg.payload.sensores.payload.FechaHora).format(\"YYYY-MM-DD HH:mm:ss\"),\n            value: \"Inyectada\"\n          });\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    });\n    this.stopLoading();\n  }\n};\nexports.default = _default;\n        var $64cbcd = exports.default || module.exports;\n      \n      if (typeof $64cbcd === 'function') {\n        $64cbcd = $64cbcd.options;\n      }\n    \n        /* template */\n        Object.assign($64cbcd, (function () {\n          var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"page-line-chart\" },\n    [\n      _c(\"ve-line\", {\n        attrs: {\n          \"x-axis\": _vm.xAxis,\n          \"y-axis\": _vm.yAxis,\n          title: _vm.title,\n          toolbox: _vm.toolbox,\n          tooltip: _vm.tooltip,\n          colors: _vm.chartColors,\n          \"data-zoom\": _vm.chartDataZoom,\n          \"tooltip-visible\": false,\n          series: _vm.series,\n          legend: _vm.legend,\n          resizeable: true,\n          \"mark-point\": _vm.markPoint,\n        },\n      }),\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n          return {\n            render: render,\n            staticRenderFns: staticRenderFns,\n            _compiled: true,\n            _scopeId: null,\n            functional: undefined\n          };\n        })());\n      \n    /* hot reload */\n    (function () {\n      if (module.hot) {\n        var api = require('vue-hot-reload-api');\n        api.install(require('vue'));\n        if (api.compatible) {\n          module.hot.accept();\n          if (!module.hot.data) {\n            api.createRecord('$64cbcd', $64cbcd);\n          } else {\n            api.reload('$64cbcd', $64cbcd);\n          }\n        }\n\n        \n      }\n    })();"},"sourceMaps":null,"error":null,"hash":"0b8398469625ae023851e97800b9efbc","cacheData":{"env":{}}}