{"id":"../node_modules/bootstrap-vue/esm/directives/hover/hover.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../constants/env","loc":{"line":2,"column":27,"index":50},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/directives/hover/hover.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/env.js"},{"name":"../../constants/events","loc":{"line":3,"column":41,"index":114},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/directives/hover/hover.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../utils/events","loc":{"line":4,"column":27,"index":167},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/directives/hover/hover.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/events.js"},{"name":"../../utils/inspect","loc":{"line":5,"column":27,"index":216},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/directives/hover/hover.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VBHover = void 0;\n\nvar _env = require(\"../../constants/env\");\n\nvar _events = require(\"../../constants/events\");\n\nvar _events2 = require(\"../../utils/events\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\n// v-b-hover directive\n// --- Constants ---\nvar PROP = '__BV_hover_handler__';\nvar MOUSEENTER = 'mouseenter';\nvar MOUSELEAVE = 'mouseleave'; // --- Helper methods ---\n\nvar createListener = function createListener(handler) {\n  var listener = function listener(event) {\n    handler(event.type === MOUSEENTER, event);\n  };\n\n  listener.fn = handler;\n  return listener;\n};\n\nvar updateListeners = function updateListeners(on, el, listener) {\n  (0, _events2.eventOnOff)(on, el, MOUSEENTER, listener, _events.EVENT_OPTIONS_NO_CAPTURE);\n  (0, _events2.eventOnOff)(on, el, MOUSELEAVE, listener, _events.EVENT_OPTIONS_NO_CAPTURE);\n}; // --- Directive bind/unbind/update handler ---\n\n\nvar directive = function directive(el, _ref) {\n  var _ref$value = _ref.value,\n      handler = _ref$value === void 0 ? null : _ref$value;\n\n  if (_env.IS_BROWSER) {\n    var listener = el[PROP];\n    var hasListener = (0, _inspect.isFunction)(listener);\n    var handlerChanged = !(hasListener && listener.fn === handler);\n\n    if (hasListener && handlerChanged) {\n      updateListeners(false, el, listener);\n      delete el[PROP];\n    }\n\n    if ((0, _inspect.isFunction)(handler) && handlerChanged) {\n      el[PROP] = createListener(handler);\n      updateListeners(true, el, el[PROP]);\n    }\n  }\n}; // VBHover directive\n\n\nvar VBHover = {\n  bind: directive,\n  componentUpdated: directive,\n  unbind: function unbind(el) {\n    directive(el, {\n      value: null\n    });\n  }\n};\nexports.VBHover = VBHover;"},"sourceMaps":null,"error":null,"hash":"eafb7db4955de32f807f20d1eb0896f6","cacheData":{"env":{}}}