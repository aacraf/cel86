{"id":"../node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../constants/components","loc":{"line":26,"column":41,"index":3059},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../../constants/events","loc":{"line":27,"column":110,"index":3202},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../../utils/array","loc":{"line":28,"column":23,"index":3254},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"},{"name":"../../../utils/config","loc":{"line":29,"column":35,"index":3313},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/config.js"},{"name":"../../../utils/dom","loc":{"line":30,"column":26,"index":3364},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../../../utils/events","loc":{"line":31,"column":39,"index":3425},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/events.js"},{"name":"../../../utils/inspect","loc":{"line":32,"column":40,"index":3490},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../../utils/object","loc":{"line":33,"column":105,"index":3621},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/object.js"},{"name":"../../../utils/plugins","loc":{"line":34,"column":30,"index":3676},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/plugins.js"},{"name":"../../../utils/warn","loc":{"line":35,"column":58,"index":3760},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/warn.js"},{"name":"../modal","loc":{"line":36,"column":44,"index":3827},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/helpers/bv-modal.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/modal/modal.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BVModalPlugin = void 0;\n\nvar _components = require(\"../../../constants/components\");\n\nvar _events = require(\"../../../constants/events\");\n\nvar _array = require(\"../../../utils/array\");\n\nvar _config = require(\"../../../utils/config\");\n\nvar _dom = require(\"../../../utils/dom\");\n\nvar _events2 = require(\"../../../utils/events\");\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _object = require(\"../../../utils/object\");\n\nvar _plugins = require(\"../../../utils/plugins\");\n\nvar _warn = require(\"../../../utils/warn\");\n\nvar _modal = require(\"../modal\");\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n} // Plugin for adding `$bvModal` property to all Vue instances\n\n\n// --- Constants ---\nvar PROP_NAME = '$bvModal';\nvar PROP_NAME_PRIV = '_bv__modal'; // Base modal props that are allowed\n// Some may be ignored or overridden on some message boxes\n// Prop ID is allowed, but really only should be used for testing\n// We need to add it in explicitly as it comes from the `idMixin`\n\nvar BASE_PROPS = ['id'].concat(_toConsumableArray((0, _object.keys)((0, _object.omit)(_modal.props, ['busy', 'lazy', 'noStacking', 'static', 'visible'])))); // Fallback event resolver (returns undefined)\n\nvar defaultResolver = function defaultResolver() {}; // Map prop names to modal slot names\n\n\nvar propsToSlots = {\n  msgBoxContent: 'default',\n  title: 'modal-title',\n  okTitle: 'modal-ok',\n  cancelTitle: 'modal-cancel'\n}; // --- Helper methods ---\n// Method to filter only recognized props that are not undefined\n\nvar filterOptions = function filterOptions(options) {\n  return BASE_PROPS.reduce(function (memo, key) {\n    if (!(0, _inspect.isUndefined)(options[key])) {\n      memo[key] = options[key];\n    }\n\n    return memo;\n  }, {});\n}; // Method to install `$bvModal` VM injection\n\n\nvar plugin = function plugin(Vue) {\n  // Create a private sub-component that extends BModal\n  // which self-destructs after hidden\n  // @vue/component\n  var BMsgBox = Vue.extend({\n    name: _components.NAME_MSG_BOX,\n    extends: _modal.BModal,\n    destroyed: function destroyed() {\n      // Make sure we not in document any more\n      if (this.$el && this.$el.parentNode) {\n        this.$el.parentNode.removeChild(this.$el);\n      }\n    },\n    mounted: function mounted() {\n      var _this = this; // Self destruct handler\n\n\n      var handleDestroy = function handleDestroy() {\n        _this.$nextTick(function () {\n          // In a `requestAF()` to release control back to application\n          (0, _dom.requestAF)(function () {\n            _this.$destroy();\n          });\n        });\n      }; // Self destruct if parent destroyed\n\n\n      this.$parent.$once(_events.HOOK_EVENT_NAME_DESTROYED, handleDestroy); // Self destruct after hidden\n\n      this.$once(_events.EVENT_NAME_HIDDEN, handleDestroy); // Self destruct on route change\n\n      /* istanbul ignore if */\n\n      if (this.$router && this.$route) {\n        // Destroy ourselves if route changes\n\n        /* istanbul ignore next */\n        this.$once(_events.HOOK_EVENT_NAME_BEFORE_DESTROY, this.$watch('$router', handleDestroy));\n      } // Show the `BMsgBox`\n\n\n      this.show();\n    }\n  }); // Method to generate the on-demand modal message box\n  // Returns a promise that resolves to a value returned by the resolve\n\n  var asyncMsgBox = function asyncMsgBox($parent, props) {\n    var resolver = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : defaultResolver;\n\n    if ((0, _warn.warnNotClient)(PROP_NAME) || (0, _warn.warnNoPromiseSupport)(PROP_NAME)) {\n      /* istanbul ignore next */\n      return;\n    } // Create an instance of `BMsgBox` component\n\n\n    var msgBox = new BMsgBox({\n      // We set parent as the local VM so these modals can emit events on\n      // the app `$root`, as needed by things like tooltips and popovers\n      // And it helps to ensure `BMsgBox` is destroyed when parent is destroyed\n      parent: $parent,\n      // Preset the prop values\n      propsData: _objectSpread(_objectSpread(_objectSpread({}, filterOptions((0, _config.getComponentConfig)(_components.NAME_MODAL))), {}, {\n        // Defaults that user can override\n        hideHeaderClose: true,\n        hideHeader: !(props.title || props.titleHtml)\n      }, (0, _object.omit)(props, (0, _object.keys)(propsToSlots))), {}, {\n        // Props that can't be overridden\n        lazy: false,\n        busy: false,\n        visible: false,\n        noStacking: false,\n        noEnforceFocus: false\n      })\n    }); // Convert certain props to scoped slots\n\n    (0, _object.keys)(propsToSlots).forEach(function (prop) {\n      if (!(0, _inspect.isUndefined)(props[prop])) {\n        // Can be a string, or array of VNodes.\n        // Alternatively, user can use HTML version of prop to pass an HTML string.\n        msgBox.$slots[propsToSlots[prop]] = (0, _array.concat)(props[prop]);\n      }\n    }); // Return a promise that resolves when hidden, or rejects on destroyed\n\n    return new Promise(function (resolve, reject) {\n      var resolved = false;\n      msgBox.$once(_events.HOOK_EVENT_NAME_DESTROYED, function () {\n        if (!resolved) {\n          /* istanbul ignore next */\n          reject(new Error('BootstrapVue MsgBox destroyed before resolve'));\n        }\n      });\n      msgBox.$on(_events.EVENT_NAME_HIDE, function (bvModalEvt) {\n        if (!bvModalEvt.defaultPrevented) {\n          var result = resolver(bvModalEvt); // If resolver didn't cancel hide, we resolve\n\n          if (!bvModalEvt.defaultPrevented) {\n            resolved = true;\n            resolve(result);\n          }\n        }\n      }); // Create a mount point (a DIV) and mount the msgBo which will trigger it to show\n\n      var div = document.createElement('div');\n      document.body.appendChild(div);\n      msgBox.$mount(div);\n    });\n  }; // Private utility method to open a user defined message box and returns a promise.\n  // Not to be used directly by consumers, as this method may change calling syntax\n\n\n  var makeMsgBox = function makeMsgBox($parent, content) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var resolver = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n    if (!content || (0, _warn.warnNoPromiseSupport)(PROP_NAME) || (0, _warn.warnNotClient)(PROP_NAME) || !(0, _inspect.isFunction)(resolver)) {\n      /* istanbul ignore next */\n      return;\n    }\n\n    return asyncMsgBox($parent, _objectSpread(_objectSpread({}, filterOptions(options)), {}, {\n      msgBoxContent: content\n    }), resolver);\n  }; // BvModal instance class\n\n\n  var BvModal = /*#__PURE__*/function () {\n    function BvModal(vm) {\n      _classCallCheck(this, BvModal); // Assign the new properties to this instance\n\n\n      (0, _object.assign)(this, {\n        _vm: vm,\n        _root: vm.$root\n      }); // Set these properties as read-only and non-enumerable\n\n      (0, _object.defineProperties)(this, {\n        _vm: (0, _object.readonlyDescriptor)(),\n        _root: (0, _object.readonlyDescriptor)()\n      });\n    } // --- Instance methods ---\n    // Show modal with the specified ID args are for future use\n\n\n    _createClass(BvModal, [{\n      key: \"show\",\n      value: function show(id) {\n        if (id && this._root) {\n          var _this$_root;\n\n          for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n            args[_key - 1] = arguments[_key];\n          }\n\n          (_this$_root = this._root).$emit.apply(_this$_root, [(0, _events2.getRootActionEventName)(_components.NAME_MODAL, 'show'), id].concat(args));\n        }\n      } // Hide modal with the specified ID args are for future use\n\n    }, {\n      key: \"hide\",\n      value: function hide(id) {\n        if (id && this._root) {\n          var _this$_root2;\n\n          for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n            args[_key2 - 1] = arguments[_key2];\n          }\n\n          (_this$_root2 = this._root).$emit.apply(_this$_root2, [(0, _events2.getRootActionEventName)(_components.NAME_MODAL, 'hide'), id].concat(args));\n        }\n      } // The following methods require Promise support!\n      // IE 11 and others do not support Promise natively, so users\n      // should have a Polyfill loaded (which they need anyways for IE 11 support)\n      // Open a message box with OK button only and returns a promise\n\n    }, {\n      key: \"msgBoxOk\",\n      value: function msgBoxOk(message) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Pick the modal props we support from options\n\n        var props = _objectSpread(_objectSpread({}, options), {}, {\n          // Add in overrides and our content prop\n          okOnly: true,\n          okDisabled: false,\n          hideFooter: false,\n          msgBoxContent: message\n        });\n\n        return makeMsgBox(this._vm, message, props, function () {\n          // Always resolve to true for OK\n          return true;\n        });\n      } // Open a message box modal with OK and CANCEL buttons\n      // and returns a promise\n\n    }, {\n      key: \"msgBoxConfirm\",\n      value: function msgBoxConfirm(message) {\n        var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}; // Set the modal props we support from options\n\n        var props = _objectSpread(_objectSpread({}, options), {}, {\n          // Add in overrides and our content prop\n          okOnly: false,\n          okDisabled: false,\n          cancelDisabled: false,\n          hideFooter: false\n        });\n\n        return makeMsgBox(this._vm, message, props, function (bvModalEvt) {\n          var trigger = bvModalEvt.trigger;\n          return trigger === 'ok' ? true : trigger === 'cancel' ? false : null;\n        });\n      }\n    }]);\n\n    return BvModal;\n  }(); // Add our instance mixin\n\n\n  Vue.mixin({\n    beforeCreate: function beforeCreate() {\n      // Because we need access to `$root` for `$emits`, and VM for parenting,\n      // we have to create a fresh instance of `BvModal` for each VM\n      this[PROP_NAME_PRIV] = new BvModal(this);\n    }\n  }); // Define our read-only `$bvModal` instance property\n  // Placed in an if just in case in HMR mode\n\n  if (!(0, _object.hasOwnProperty)(Vue.prototype, PROP_NAME)) {\n    (0, _object.defineProperty)(Vue.prototype, PROP_NAME, {\n      get: function get() {\n        /* istanbul ignore next */\n        if (!this || !this[PROP_NAME_PRIV]) {\n          (0, _warn.warn)(\"\\\"\".concat(PROP_NAME, \"\\\" must be accessed from a Vue instance \\\"this\\\" context.\"), _components.NAME_MODAL);\n        }\n\n        return this[PROP_NAME_PRIV];\n      }\n    });\n  }\n};\n\nvar BVModalPlugin = /*#__PURE__*/(0, _plugins.pluginFactory)({\n  plugins: {\n    plugin: plugin\n  }\n});\nexports.BVModalPlugin = BVModalPlugin;"},"sourceMaps":null,"error":null,"hash":"504a03dcac5271c5c6e1da700d26f8ca","cacheData":{"env":{}}}