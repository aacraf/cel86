{"id":"../node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../vue","loc":{"line":1,"column":20,"index":20},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../constants/slots","loc":{"line":2,"column":34,"index":64},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/slots.js"},{"name":"../utils/normalize-slot","loc":{"line":3,"column":89,"index":175},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/normalize-slot.js"},{"name":"../utils/array","loc":{"line":4,"column":23,"index":225},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.normalizeSlotMixin = void 0;\n\nvar _vue = require(\"../vue\");\n\nvar _slots = require(\"../constants/slots\");\n\nvar _normalizeSlot2 = require(\"../utils/normalize-slot\");\n\nvar _array = require(\"../utils/array\");\n\n// @vue/component\nvar normalizeSlotMixin = _vue.Vue.extend({\n  methods: {\n    // Returns `true` if the either a `$scopedSlot` or `$slot` exists with the specified name\n    // `name` can be a string name or an array of names\n    hasNormalizedSlot: function hasNormalizedSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _slots.SLOT_NAME_DEFAULT;\n      var scopedSlots = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.$scopedSlots;\n      var slots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$slots;\n      return (0, _normalizeSlot2.hasNormalizedSlot)(name, scopedSlots, slots);\n    },\n    // Returns an array of rendered VNodes if slot found, otherwise `undefined`\n    // `name` can be a string name or an array of names\n    normalizeSlot: function normalizeSlot() {\n      var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _slots.SLOT_NAME_DEFAULT;\n      var scope = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var scopedSlots = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.$scopedSlots;\n      var slots = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : this.$slots;\n      var vNodes = (0, _normalizeSlot2.normalizeSlot)(name, scope, scopedSlots, slots);\n      return vNodes ? (0, _array.concat)(vNodes) : vNodes;\n    }\n  }\n});\n\nexports.normalizeSlotMixin = normalizeSlotMixin;"},"sourceMaps":null,"error":null,"hash":"5d9742d06110f75dc405e68b59ac1229","cacheData":{"env":{}}}