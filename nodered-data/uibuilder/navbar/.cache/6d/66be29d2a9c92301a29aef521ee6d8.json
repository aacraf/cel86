{"id":"../../node_modules/zrender/lib/graphic/Text.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/node_modules/zrender/package.json","includedInParent":true,"mtime":1654768047284},{"name":"./Displayable","loc":{"line":1,"column":26,"index":26},"parent":"/data/uibuilder/node_modules/zrender/lib/graphic/Text.js","resolved":"/data/uibuilder/node_modules/zrender/lib/graphic/Displayable.js"},{"name":"../core/util","loc":{"line":3,"column":21,"index":66},"parent":"/data/uibuilder/node_modules/zrender/lib/graphic/Text.js","resolved":"/data/uibuilder/node_modules/zrender/lib/core/util.js"},{"name":"../contain/text","loc":{"line":5,"column":26,"index":110},"parent":"/data/uibuilder/node_modules/zrender/lib/graphic/Text.js","resolved":"/data/uibuilder/node_modules/zrender/lib/contain/text.js"},{"name":"./helper/text","loc":{"line":7,"column":25,"index":156},"parent":"/data/uibuilder/node_modules/zrender/lib/graphic/Text.js","resolved":"/data/uibuilder/node_modules/zrender/lib/graphic/helper/text.js"},{"name":"./constant","loc":{"line":9,"column":24,"index":199},"parent":"/data/uibuilder/node_modules/zrender/lib/graphic/Text.js","resolved":"/data/uibuilder/node_modules/zrender/lib/graphic/constant.js"}],"generated":{"js":"var Displayable = require(\"./Displayable\");\n\nvar zrUtil = require(\"../core/util\");\n\nvar textContain = require(\"../contain/text\");\n\nvar textHelper = require(\"./helper/text\");\n\nvar _constant = require(\"./constant\");\n\nvar ContextCachedBy = _constant.ContextCachedBy;\n\n/**\n * @alias zrender/graphic/Text\n * @extends module:zrender/graphic/Displayable\n * @constructor\n * @param {Object} opts\n */\nvar Text = function (opts) {\n  // jshint ignore:line\n  Displayable.call(this, opts);\n};\n\nText.prototype = {\n  constructor: Text,\n  type: 'text',\n  brush: function (ctx, prevEl) {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true); // Use props with prefix 'text'.\n\n    style.fill = style.stroke = style.shadowBlur = style.shadowColor = style.shadowOffsetX = style.shadowOffsetY = null;\n    var text = style.text; // Convert to string\n\n    text != null && (text += ''); // Do not apply style.bind in Text node. Because the real bind job\n    // is in textHelper.renderText, and performance of text render should\n    // be considered.\n    // style.bind(ctx, this, prevEl);\n\n    if (!textHelper.needDrawText(text, style)) {\n      // The current el.style is not applied\n      // and should not be used as cache.\n      ctx.__attrCachedBy = ContextCachedBy.NONE;\n      return;\n    }\n\n    this.setTransform(ctx);\n    textHelper.renderText(this, ctx, text, style, null, prevEl);\n    this.restoreTransform(ctx);\n  },\n  getBoundingRect: function () {\n    var style = this.style; // Optimize, avoid normalize every time.\n\n    this.__dirty && textHelper.normalizeTextStyle(style, true);\n\n    if (!this._rect) {\n      var text = style.text;\n      text != null ? text += '' : text = '';\n      var rect = textContain.getBoundingRect(style.text + '', style.font, style.textAlign, style.textVerticalAlign, style.textPadding, style.textLineHeight, style.rich);\n      rect.x += style.x || 0;\n      rect.y += style.y || 0;\n\n      if (textHelper.getStroke(style.textStroke, style.textStrokeWidth)) {\n        var w = style.textStrokeWidth;\n        rect.x -= w / 2;\n        rect.y -= w / 2;\n        rect.width += w;\n        rect.height += w;\n      }\n\n      this._rect = rect;\n    }\n\n    return this._rect;\n  }\n};\nzrUtil.inherits(Text, Displayable);\nvar _default = Text;\nmodule.exports = _default;"},"sourceMaps":null,"error":null,"hash":"05a40f461519339d53a6350ceb077257","cacheData":{"env":{}}}