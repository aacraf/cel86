{"id":"../node_modules/bootstrap-vue/esm/mixins/pagination.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../vue","loc":{"line":9,"column":20,"index":1123},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../constants/components","loc":{"line":10,"column":32,"index":1165},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../constants/key-codes","loc":{"line":11,"column":70,"index":1262},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/key-codes.js"},{"name":"../constants/props","loc":{"line":12,"column":168,"index":1456},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../constants/slots","loc":{"line":13,"column":141,"index":1619},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/slots.js"},{"name":"../utils/array","loc":{"line":14,"column":28,"index":1669},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"},{"name":"../utils/dom","loc":{"line":15,"column":90,"index":1777},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../utils/events","loc":{"line":16,"column":26,"index":1819},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/events.js"},{"name":"../utils/inspect","loc":{"line":17,"column":35,"index":1873},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../utils/math","loc":{"line":18,"column":44,"index":1937},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/math.js"},{"name":"../utils/model","loc":{"line":19,"column":31,"index":1985},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/model.js"},{"name":"../utils/number","loc":{"line":20,"column":26,"index":2029},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/number.js"},{"name":"../utils/object","loc":{"line":21,"column":25,"index":2073},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/object.js"},{"name":"../utils/props","loc":{"line":22,"column":65,"index":2157},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../utils/string","loc":{"line":23,"column":25,"index":2200},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/string.js"},{"name":"../utils/warn","loc":{"line":24,"column":21,"index":2240},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/warn.js"},{"name":"../mixins/normalize-slot","loc":{"line":25,"column":35,"index":2292},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"},{"name":"../components/link/link","loc":{"line":26,"column":22,"index":2342},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/pagination.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/link/link.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.paginationMixin = exports.MODEL_PROP_NAME = exports.MODEL_EVENT_NAME = void 0;\n\nvar _vue = require(\"../vue\");\n\nvar _components = require(\"../constants/components\");\n\nvar _keyCodes = require(\"../constants/key-codes\");\n\nvar _props = require(\"../constants/props\");\n\nvar _slots = require(\"../constants/slots\");\n\nvar _array = require(\"../utils/array\");\n\nvar _dom = require(\"../utils/dom\");\n\nvar _events = require(\"../utils/events\");\n\nvar _inspect = require(\"../utils/inspect\");\n\nvar _math = require(\"../utils/math\");\n\nvar _model = require(\"../utils/model\");\n\nvar _number = require(\"../utils/number\");\n\nvar _object = require(\"../utils/object\");\n\nvar _props2 = require(\"../utils/props\");\n\nvar _string = require(\"../utils/string\");\n\nvar _warn = require(\"../utils/warn\");\n\nvar _normalizeSlot = require(\"../mixins/normalize-slot\");\n\nvar _link = require(\"../components/link/link\");\n\nvar _watch;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// Common props, computed, data, render function, and methods\n// for `<b-pagination>` and `<b-pagination-nav>`\n// --- Constants ---\nvar _makeModelMixin = (0, _model.makeModelMixin)('value', {\n  type: _props.PROP_TYPE_BOOLEAN_NUMBER_STRING,\n  defaultValue: null,\n\n  /* istanbul ignore next */\n  validator: function validator(value) {\n    if (!(0, _inspect.isNull)(value) && (0, _number.toInteger)(value, 0) < 1) {\n      (0, _warn.warn)('\"v-model\" value must be a number greater than \"0\"', _components.NAME_PAGINATION);\n      return false;\n    }\n\n    return true;\n  }\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event;\n\nexports.MODEL_EVENT_NAME = MODEL_EVENT_NAME;\nexports.MODEL_PROP_NAME = MODEL_PROP_NAME;\n// Threshold of limit size when we start/stop showing ellipsis\nvar ELLIPSIS_THRESHOLD = 3; // Default # of buttons limit\n\nvar DEFAULT_LIMIT = 5; // --- Helper methods ---\n// Make an array of N to N+X\n\nvar makePageArray = function makePageArray(startNumber, numberOfPages) {\n  return (0, _array.createArray)(numberOfPages, function (_, i) {\n    return {\n      number: startNumber + i,\n      classes: null\n    };\n  });\n}; // Sanitize the provided limit value (converting to a number)\n\n\nvar sanitizeLimit = function sanitizeLimit(value) {\n  var limit = (0, _number.toInteger)(value) || 1;\n  return limit < 1 ? DEFAULT_LIMIT : limit;\n}; // Sanitize the provided current page number (converting to a number)\n\n\nvar sanitizeCurrentPage = function sanitizeCurrentPage(val, numberOfPages) {\n  var page = (0, _number.toInteger)(val) || 1;\n  return page > numberOfPages ? numberOfPages : page < 1 ? 1 : page;\n}; // Links don't normally respond to SPACE, so we add that\n// functionality via this handler\n\n\nvar onSpaceKey = function onSpaceKey(event) {\n  if (event.keyCode === _keyCodes.CODE_SPACE) {\n    // Stop page from scrolling\n    (0, _events.stopEvent)(event, {\n      immediatePropagation: true\n    }); // Trigger the click event on the link\n\n    event.currentTarget.click();\n    return false;\n  }\n}; // --- Props ---\n\n\nvar props = (0, _props2.makePropsConfigurable)((0, _object.sortKeys)(_objectSpread(_objectSpread({}, modelProps), {}, {\n  align: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'left'),\n  ariaLabel: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Pagination'),\n  disabled: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  ellipsisClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING),\n  ellipsisText: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, \"\\u2026\"),\n  // '…'\n  firstClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING),\n  firstNumber: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  firstText: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, \"\\xAB\"),\n  // '«'\n  hideEllipsis: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  hideGotoEndButtons: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  labelFirstPage: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Go to first page'),\n  labelLastPage: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Go to last page'),\n  labelNextPage: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Go to next page'),\n  labelPage: (0, _props2.makeProp)(_props.PROP_TYPE_FUNCTION_STRING, 'Go to page'),\n  labelPrevPage: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Go to previous page'),\n  lastClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING),\n  lastNumber: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  lastText: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, \"\\xBB\"),\n  // '»'\n  limit: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, DEFAULT_LIMIT,\n  /* istanbul ignore next */\n  function (value) {\n    if ((0, _number.toInteger)(value, 0) < 1) {\n      (0, _warn.warn)('Prop \"limit\" must be a number greater than \"0\"', _components.NAME_PAGINATION);\n      return false;\n    }\n\n    return true;\n  }),\n  nextClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING),\n  nextText: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, \"\\u203A\"),\n  // '›'\n  pageClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING),\n  pills: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  prevClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING),\n  prevText: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, \"\\u2039\"),\n  // '‹'\n  size: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n})), 'pagination'); // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar paginationMixin = _vue.Vue.extend({\n  mixins: [modelMixin, _normalizeSlot.normalizeSlotMixin],\n  props: props,\n  data: function data() {\n    // `-1` signifies no page initially selected\n    var currentPage = (0, _number.toInteger)(this[MODEL_PROP_NAME], 0);\n    currentPage = currentPage > 0 ? currentPage : -1;\n    return {\n      currentPage: currentPage,\n      localNumberOfPages: 1,\n      localLimit: DEFAULT_LIMIT\n    };\n  },\n  computed: {\n    btnSize: function btnSize() {\n      var size = this.size;\n      return size ? \"pagination-\".concat(size) : '';\n    },\n    alignment: function alignment() {\n      var align = this.align;\n\n      if (align === 'center') {\n        return 'justify-content-center';\n      } else if (align === 'end' || align === 'right') {\n        return 'justify-content-end';\n      } else if (align === 'fill') {\n        // The page-items will also have 'flex-fill' added\n        // We add text centering to make the button appearance better in fill mode\n        return 'text-center';\n      }\n\n      return '';\n    },\n    styleClass: function styleClass() {\n      return this.pills ? 'b-pagination-pills' : '';\n    },\n    computedCurrentPage: function computedCurrentPage() {\n      return sanitizeCurrentPage(this.currentPage, this.localNumberOfPages);\n    },\n    paginationParams: function paginationParams() {\n      // Determine if we should show the the ellipsis\n      var limit = this.localLimit,\n          numberOfPages = this.localNumberOfPages,\n          currentPage = this.computedCurrentPage,\n          hideEllipsis = this.hideEllipsis,\n          firstNumber = this.firstNumber,\n          lastNumber = this.lastNumber;\n      var showFirstDots = false;\n      var showLastDots = false;\n      var numberOfLinks = limit;\n      var startNumber = 1;\n\n      if (numberOfPages <= limit) {\n        // Special case: Less pages available than the limit of displayed pages\n        numberOfLinks = numberOfPages;\n      } else if (currentPage < limit - 1 && limit > ELLIPSIS_THRESHOLD) {\n        if (!hideEllipsis || lastNumber) {\n          showLastDots = true;\n          numberOfLinks = limit - (firstNumber ? 0 : 1);\n        }\n\n        numberOfLinks = (0, _math.mathMin)(numberOfLinks, limit);\n      } else if (numberOfPages - currentPage + 2 < limit && limit > ELLIPSIS_THRESHOLD) {\n        if (!hideEllipsis || firstNumber) {\n          showFirstDots = true;\n          numberOfLinks = limit - (lastNumber ? 0 : 1);\n        }\n\n        startNumber = numberOfPages - numberOfLinks + 1;\n      } else {\n        // We are somewhere in the middle of the page list\n        if (limit > ELLIPSIS_THRESHOLD) {\n          numberOfLinks = limit - (hideEllipsis ? 0 : 2);\n          showFirstDots = !!(!hideEllipsis || firstNumber);\n          showLastDots = !!(!hideEllipsis || lastNumber);\n        }\n\n        startNumber = currentPage - (0, _math.mathFloor)(numberOfLinks / 2);\n      } // Sanity checks\n\n      /* istanbul ignore if */\n\n\n      if (startNumber < 1) {\n        startNumber = 1;\n        showFirstDots = false;\n      } else if (startNumber > numberOfPages - numberOfLinks) {\n        startNumber = numberOfPages - numberOfLinks + 1;\n        showLastDots = false;\n      }\n\n      if (showFirstDots && firstNumber && startNumber < 4) {\n        numberOfLinks = numberOfLinks + 2;\n        startNumber = 1;\n        showFirstDots = false;\n      }\n\n      var lastPageNumber = startNumber + numberOfLinks - 1;\n\n      if (showLastDots && lastNumber && lastPageNumber > numberOfPages - 3) {\n        numberOfLinks = numberOfLinks + (lastPageNumber === numberOfPages - 2 ? 2 : 3);\n        showLastDots = false;\n      } // Special handling for lower limits (where ellipsis are never shown)\n\n\n      if (limit <= ELLIPSIS_THRESHOLD) {\n        if (firstNumber && startNumber === 1) {\n          numberOfLinks = (0, _math.mathMin)(numberOfLinks + 1, numberOfPages, limit + 1);\n        } else if (lastNumber && numberOfPages === startNumber + numberOfLinks - 1) {\n          startNumber = (0, _math.mathMax)(startNumber - 1, 1);\n          numberOfLinks = (0, _math.mathMin)(numberOfPages - startNumber + 1, numberOfPages, limit + 1);\n        }\n      }\n\n      numberOfLinks = (0, _math.mathMin)(numberOfLinks, numberOfPages - startNumber + 1);\n      return {\n        showFirstDots: showFirstDots,\n        showLastDots: showLastDots,\n        numberOfLinks: numberOfLinks,\n        startNumber: startNumber\n      };\n    },\n    pageList: function pageList() {\n      // Generates the pageList array\n      var _this$paginationParam = this.paginationParams,\n          numberOfLinks = _this$paginationParam.numberOfLinks,\n          startNumber = _this$paginationParam.startNumber;\n      var currentPage = this.computedCurrentPage; // Generate list of page numbers\n\n      var pages = makePageArray(startNumber, numberOfLinks); // We limit to a total of 3 page buttons on XS screens\n      // So add classes to page links to hide them for XS breakpoint\n      // Note: Ellipsis will also be hidden on XS screens\n      // TODO: Make this visual limit configurable based on breakpoint(s)\n\n      if (pages.length > 3) {\n        var idx = currentPage - startNumber; // THe following is a bootstrap-vue custom utility class\n\n        var classes = 'bv-d-xs-down-none';\n\n        if (idx === 0) {\n          // Keep leftmost 3 buttons visible when current page is first page\n          for (var i = 3; i < pages.length; i++) {\n            pages[i].classes = classes;\n          }\n        } else if (idx === pages.length - 1) {\n          // Keep rightmost 3 buttons visible when current page is last page\n          for (var _i = 0; _i < pages.length - 3; _i++) {\n            pages[_i].classes = classes;\n          }\n        } else {\n          // Hide all except current page, current page - 1 and current page + 1\n          for (var _i2 = 0; _i2 < idx - 1; _i2++) {\n            // hide some left button(s)\n            pages[_i2].classes = classes;\n          }\n\n          for (var _i3 = pages.length - 1; _i3 > idx + 1; _i3--) {\n            // hide some right button(s)\n            pages[_i3].classes = classes;\n          }\n        }\n      }\n\n      return pages;\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.currentPage = sanitizeCurrentPage(newValue, this.localNumberOfPages);\n    }\n  }), _defineProperty(_watch, \"currentPage\", function currentPage(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      // Emit `null` if no page selected\n      this.$emit(MODEL_EVENT_NAME, newValue > 0 ? newValue : null);\n    }\n  }), _defineProperty(_watch, \"limit\", function limit(newValue, oldValue) {\n    if (newValue !== oldValue) {\n      this.localLimit = sanitizeLimit(newValue);\n    }\n  }), _watch),\n  created: function created() {\n    var _this = this; // Set our default values in data\n\n\n    this.localLimit = sanitizeLimit(this.limit);\n    this.$nextTick(function () {\n      // Sanity check\n      _this.currentPage = _this.currentPage > _this.localNumberOfPages ? _this.localNumberOfPages : _this.currentPage;\n    });\n  },\n  methods: {\n    handleKeyNav: function handleKeyNav(event) {\n      var keyCode = event.keyCode,\n          shiftKey = event.shiftKey;\n      /* istanbul ignore if */\n\n      if (this.isNav) {\n        // We disable left/right keyboard navigation in `<b-pagination-nav>`\n        return;\n      }\n\n      if (keyCode === _keyCodes.CODE_LEFT || keyCode === _keyCodes.CODE_UP) {\n        (0, _events.stopEvent)(event, {\n          propagation: false\n        });\n        shiftKey ? this.focusFirst() : this.focusPrev();\n      } else if (keyCode === _keyCodes.CODE_RIGHT || keyCode === _keyCodes.CODE_DOWN) {\n        (0, _events.stopEvent)(event, {\n          propagation: false\n        });\n        shiftKey ? this.focusLast() : this.focusNext();\n      }\n    },\n    getButtons: function getButtons() {\n      // Return only buttons that are visible\n      return (0, _dom.selectAll)('button.page-link, a.page-link', this.$el).filter(function (btn) {\n        return (0, _dom.isVisible)(btn);\n      });\n    },\n    focusCurrent: function focusCurrent() {\n      var _this2 = this; // We do this in `$nextTick()` to ensure buttons have finished rendering\n\n\n      this.$nextTick(function () {\n        var btn = _this2.getButtons().find(function (el) {\n          return (0, _number.toInteger)((0, _dom.getAttr)(el, 'aria-posinset'), 0) === _this2.computedCurrentPage;\n        });\n\n        if (!(0, _dom.attemptFocus)(btn)) {\n          // Fallback if current page is not in button list\n          _this2.focusFirst();\n        }\n      });\n    },\n    focusFirst: function focusFirst() {\n      var _this3 = this; // We do this in `$nextTick()` to ensure buttons have finished rendering\n\n\n      this.$nextTick(function () {\n        var btn = _this3.getButtons().find(function (el) {\n          return !(0, _dom.isDisabled)(el);\n        });\n\n        (0, _dom.attemptFocus)(btn);\n      });\n    },\n    focusLast: function focusLast() {\n      var _this4 = this; // We do this in `$nextTick()` to ensure buttons have finished rendering\n\n\n      this.$nextTick(function () {\n        var btn = _this4.getButtons().reverse().find(function (el) {\n          return !(0, _dom.isDisabled)(el);\n        });\n\n        (0, _dom.attemptFocus)(btn);\n      });\n    },\n    focusPrev: function focusPrev() {\n      var _this5 = this; // We do this in `$nextTick()` to ensure buttons have finished rendering\n\n\n      this.$nextTick(function () {\n        var buttons = _this5.getButtons();\n\n        var index = buttons.indexOf((0, _dom.getActiveElement)());\n\n        if (index > 0 && !(0, _dom.isDisabled)(buttons[index - 1])) {\n          (0, _dom.attemptFocus)(buttons[index - 1]);\n        }\n      });\n    },\n    focusNext: function focusNext() {\n      var _this6 = this; // We do this in `$nextTick()` to ensure buttons have finished rendering\n\n\n      this.$nextTick(function () {\n        var buttons = _this6.getButtons();\n\n        var index = buttons.indexOf((0, _dom.getActiveElement)());\n\n        if (index < buttons.length - 1 && !(0, _dom.isDisabled)(buttons[index + 1])) {\n          (0, _dom.attemptFocus)(buttons[index + 1]);\n        }\n      });\n    }\n  },\n  render: function render(h) {\n    var _this7 = this;\n\n    var disabled = this.disabled,\n        labelPage = this.labelPage,\n        ariaLabel = this.ariaLabel,\n        isNav = this.isNav,\n        numberOfPages = this.localNumberOfPages,\n        currentPage = this.computedCurrentPage;\n    var pageNumbers = this.pageList.map(function (p) {\n      return p.number;\n    });\n    var _this$paginationParam2 = this.paginationParams,\n        showFirstDots = _this$paginationParam2.showFirstDots,\n        showLastDots = _this$paginationParam2.showLastDots;\n    var fill = this.align === 'fill';\n    var $buttons = []; // Helper function and flag\n\n    var isActivePage = function isActivePage(pageNumber) {\n      return pageNumber === currentPage;\n    };\n\n    var noCurrentPage = this.currentPage < 1; // Factory function for prev/next/first/last buttons\n\n    var makeEndBtn = function makeEndBtn(linkTo, ariaLabel, btnSlot, btnText, btnClass, pageTest, key) {\n      var isDisabled = disabled || isActivePage(pageTest) || noCurrentPage || linkTo < 1 || linkTo > numberOfPages;\n      var pageNumber = linkTo < 1 ? 1 : linkTo > numberOfPages ? numberOfPages : linkTo;\n      var scope = {\n        disabled: isDisabled,\n        page: pageNumber,\n        index: pageNumber - 1\n      };\n      var $btnContent = _this7.normalizeSlot(btnSlot, scope) || (0, _string.toString)(btnText) || h();\n      var $inner = h(isDisabled ? 'span' : isNav ? _link.BLink : 'button', {\n        staticClass: 'page-link',\n        class: {\n          'flex-grow-1': !isNav && !isDisabled && fill\n        },\n        props: isDisabled || !isNav ? {} : _this7.linkProps(linkTo),\n        attrs: {\n          role: isNav ? null : 'menuitem',\n          type: isNav || isDisabled ? null : 'button',\n          tabindex: isDisabled || isNav ? null : '-1',\n          'aria-label': ariaLabel,\n          'aria-controls': _this7.ariaControls || null,\n          'aria-disabled': isDisabled ? 'true' : null\n        },\n        on: isDisabled ? {} : {\n          '!click': function click(event) {\n            _this7.onClick(event, linkTo);\n          },\n          keydown: onSpaceKey\n        }\n      }, [$btnContent]);\n      return h('li', {\n        key: key,\n        staticClass: 'page-item',\n        class: [{\n          disabled: isDisabled,\n          'flex-fill': fill,\n          'd-flex': fill && !isNav && !isDisabled\n        }, btnClass],\n        attrs: {\n          role: isNav ? null : 'presentation',\n          'aria-hidden': isDisabled ? 'true' : null\n        }\n      }, [$inner]);\n    }; // Ellipsis factory\n\n\n    var makeEllipsis = function makeEllipsis(isLast) {\n      return h('li', {\n        staticClass: 'page-item',\n        class: ['disabled', 'bv-d-xs-down-none', fill ? 'flex-fill' : '', _this7.ellipsisClass],\n        attrs: {\n          role: 'separator'\n        },\n        key: \"ellipsis-\".concat(isLast ? 'last' : 'first')\n      }, [h('span', {\n        staticClass: 'page-link'\n      }, [_this7.normalizeSlot(_slots.SLOT_NAME_ELLIPSIS_TEXT) || (0, _string.toString)(_this7.ellipsisText) || h()])]);\n    }; // Page button factory\n\n\n    var makePageButton = function makePageButton(page, idx) {\n      var pageNumber = page.number;\n      var active = isActivePage(pageNumber) && !noCurrentPage; // Active page will have tabindex of 0, or if no current page and first page button\n\n      var tabIndex = disabled ? null : active || noCurrentPage && idx === 0 ? '0' : '-1';\n      var attrs = {\n        role: isNav ? null : 'menuitemradio',\n        type: isNav || disabled ? null : 'button',\n        'aria-disabled': disabled ? 'true' : null,\n        'aria-controls': _this7.ariaControls || null,\n        'aria-label': (0, _props2.hasPropFunction)(labelPage) ?\n        /* istanbul ignore next */\n        labelPage(pageNumber) : \"\".concat((0, _inspect.isFunction)(labelPage) ? labelPage() : labelPage, \" \").concat(pageNumber),\n        'aria-checked': isNav ? null : active ? 'true' : 'false',\n        'aria-current': isNav && active ? 'page' : null,\n        'aria-posinset': isNav ? null : pageNumber,\n        'aria-setsize': isNav ? null : numberOfPages,\n        // ARIA \"roving tabindex\" method (except in `isNav` mode)\n        tabindex: isNav ? null : tabIndex\n      };\n      var btnContent = (0, _string.toString)(_this7.makePage(pageNumber));\n      var scope = {\n        page: pageNumber,\n        index: pageNumber - 1,\n        content: btnContent,\n        active: active,\n        disabled: disabled\n      };\n      var $inner = h(disabled ? 'span' : isNav ? _link.BLink : 'button', {\n        props: disabled || !isNav ? {} : _this7.linkProps(pageNumber),\n        staticClass: 'page-link',\n        class: {\n          'flex-grow-1': !isNav && !disabled && fill\n        },\n        attrs: attrs,\n        on: disabled ? {} : {\n          '!click': function click(event) {\n            _this7.onClick(event, pageNumber);\n          },\n          keydown: onSpaceKey\n        }\n      }, [_this7.normalizeSlot(_slots.SLOT_NAME_PAGE, scope) || btnContent]);\n      return h('li', {\n        staticClass: 'page-item',\n        class: [{\n          disabled: disabled,\n          active: active,\n          'flex-fill': fill,\n          'd-flex': fill && !isNav && !disabled\n        }, page.classes, _this7.pageClass],\n        attrs: {\n          role: isNav ? null : 'presentation'\n        },\n        key: \"page-\".concat(pageNumber)\n      }, [$inner]);\n    }; // Goto first page button\n    // Don't render button when `hideGotoEndButtons` or `firstNumber` is set\n\n\n    var $firstPageBtn = h();\n\n    if (!this.firstNumber && !this.hideGotoEndButtons) {\n      $firstPageBtn = makeEndBtn(1, this.labelFirstPage, _slots.SLOT_NAME_FIRST_TEXT, this.firstText, this.firstClass, 1, 'pagination-goto-first');\n    }\n\n    $buttons.push($firstPageBtn); // Goto previous page button\n\n    $buttons.push(makeEndBtn(currentPage - 1, this.labelPrevPage, _slots.SLOT_NAME_PREV_TEXT, this.prevText, this.prevClass, 1, 'pagination-goto-prev')); // Show first (1) button?\n\n    $buttons.push(this.firstNumber && pageNumbers[0] !== 1 ? makePageButton({\n      number: 1\n    }, 0) : h()); // First ellipsis\n\n    $buttons.push(showFirstDots ? makeEllipsis(false) : h()); // Individual page links\n\n    this.pageList.forEach(function (page, idx) {\n      var offset = showFirstDots && _this7.firstNumber && pageNumbers[0] !== 1 ? 1 : 0;\n      $buttons.push(makePageButton(page, idx + offset));\n    }); // Last ellipsis\n\n    $buttons.push(showLastDots ? makeEllipsis(true) : h()); // Show last page button?\n\n    $buttons.push(this.lastNumber && pageNumbers[pageNumbers.length - 1] !== numberOfPages ? makePageButton({\n      number: numberOfPages\n    }, -1) : h()); // Goto next page button\n\n    $buttons.push(makeEndBtn(currentPage + 1, this.labelNextPage, _slots.SLOT_NAME_NEXT_TEXT, this.nextText, this.nextClass, numberOfPages, 'pagination-goto-next')); // Goto last page button\n    // Don't render button when `hideGotoEndButtons` or `lastNumber` is set\n\n    var $lastPageBtn = h();\n\n    if (!this.lastNumber && !this.hideGotoEndButtons) {\n      $lastPageBtn = makeEndBtn(numberOfPages, this.labelLastPage, _slots.SLOT_NAME_LAST_TEXT, this.lastText, this.lastClass, numberOfPages, 'pagination-goto-last');\n    }\n\n    $buttons.push($lastPageBtn); // Assemble the pagination buttons\n\n    var $pagination = h('ul', {\n      staticClass: 'pagination',\n      class: ['b-pagination', this.btnSize, this.alignment, this.styleClass],\n      attrs: {\n        role: isNav ? null : 'menubar',\n        'aria-disabled': disabled ? 'true' : 'false',\n        'aria-label': isNav ? null : ariaLabel || null\n      },\n      // We disable keyboard left/right nav when `<b-pagination-nav>`\n      on: isNav ? {} : {\n        keydown: this.handleKeyNav\n      },\n      ref: 'ul'\n    }, $buttons); // If we are `<b-pagination-nav>`, wrap in `<nav>` wrapper\n\n    if (isNav) {\n      return h('nav', {\n        attrs: {\n          'aria-disabled': disabled ? 'true' : null,\n          'aria-hidden': disabled ? 'true' : 'false',\n          'aria-label': isNav ? ariaLabel || null : null\n        }\n      }, [$pagination]);\n    }\n\n    return $pagination;\n  }\n});\n\nexports.paginationMixin = paginationMixin;"},"sourceMaps":null,"error":null,"hash":"25fff4194db5975e927e7568f7b9285c","cacheData":{"env":{}}}