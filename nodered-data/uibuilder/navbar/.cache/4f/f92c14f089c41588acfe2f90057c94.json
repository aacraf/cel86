{"id":"../node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../vue","loc":{"line":7,"column":20,"index":1110},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../../constants/props","loc":{"line":8,"column":109,"index":1235},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../../utils/identity","loc":{"line":9,"column":25,"index":1288},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/identity.js"},{"name":"../../../utils/inspect","loc":{"line":10,"column":26,"index":1341},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../../utils/props","loc":{"line":11,"column":25,"index":1392},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../../utils/string","loc":{"line":12,"column":25,"index":1441},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/string.js"},{"name":"../../../mixins/attrs","loc":{"line":13,"column":27,"index":1493},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-table-renderer.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/attrs.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.tableRendererMixin = exports.props = void 0;\n\nvar _vue = require(\"../../../vue\");\n\nvar _props = require(\"../../../constants/props\");\n\nvar _identity = require(\"../../../utils/identity\");\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _props2 = require(\"../../../utils/props\");\n\nvar _string = require(\"../../../utils/string\");\n\nvar _attrs = require(\"../../../mixins/attrs\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// Main `<table>` render mixin\n// Includes all main table styling options\n// --- Props ---\nvar props = {\n  bordered: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  borderless: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  captionTop: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  dark: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  fixed: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  hover: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  noBorderCollapse: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  outlined: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  responsive: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN_STRING, false),\n  small: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  // If a string, it is assumed to be the table `max-height` value\n  stickyHeader: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN_STRING, false),\n  striped: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  tableClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING),\n  tableVariant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n}; // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar tableRendererMixin = _vue.Vue.extend({\n  mixins: [_attrs.attrsMixin],\n  provide: function provide() {\n    return {\n      bvTable: this\n    };\n  },\n  // Don't place attributes on root element automatically,\n  // as table could be wrapped in responsive `<div>`\n  inheritAttrs: false,\n  props: props,\n  computed: {\n    // Layout related computed props\n    isResponsive: function isResponsive() {\n      var responsive = this.responsive;\n      return responsive === '' ? true : responsive;\n    },\n    isStickyHeader: function isStickyHeader() {\n      var stickyHeader = this.stickyHeader;\n      stickyHeader = stickyHeader === '' ? true : stickyHeader;\n      return this.isStacked ? false : stickyHeader;\n    },\n    wrapperClasses: function wrapperClasses() {\n      var isResponsive = this.isResponsive;\n      return [this.isStickyHeader ? 'b-table-sticky-header' : '', isResponsive === true ? 'table-responsive' : isResponsive ? \"table-responsive-\".concat(this.responsive) : ''].filter(_identity.identity);\n    },\n    wrapperStyles: function wrapperStyles() {\n      var isStickyHeader = this.isStickyHeader;\n      return isStickyHeader && !(0, _inspect.isBoolean)(isStickyHeader) ? {\n        maxHeight: isStickyHeader\n      } : {};\n    },\n    tableClasses: function tableClasses() {\n      var hover = this.hover,\n          tableVariant = this.tableVariant;\n      hover = this.isTableSimple ? hover : hover && this.computedItems.length > 0 && !this.computedBusy;\n      return [// User supplied classes\n      this.tableClass, // Styling classes\n      {\n        'table-striped': this.striped,\n        'table-hover': hover,\n        'table-dark': this.dark,\n        'table-bordered': this.bordered,\n        'table-borderless': this.borderless,\n        'table-sm': this.small,\n        // The following are b-table custom styles\n        border: this.outlined,\n        'b-table-fixed': this.fixed,\n        'b-table-caption-top': this.captionTop,\n        'b-table-no-border-collapse': this.noBorderCollapse\n      }, tableVariant ? \"\".concat(this.dark ? 'bg' : 'table', \"-\").concat(tableVariant) : '', // Stacked table classes\n      this.stackedTableClasses, // Selectable classes\n      this.selectableTableClasses];\n    },\n    tableAttrs: function tableAttrs() {\n      var items = this.computedItems,\n          filteredItems = this.filteredItems,\n          fields = this.computedFields,\n          selectableTableAttrs = this.selectableTableAttrs;\n      var ariaAttrs = this.isTableSimple ? {} : {\n        'aria-busy': this.computedBusy ? 'true' : 'false',\n        'aria-colcount': (0, _string.toString)(fields.length),\n        // Preserve user supplied `aria-describedby`, if provided\n        'aria-describedby': this.bvAttrs['aria-describedby'] || this.$refs.caption ? this.captionId : null\n      };\n      var rowCount = items && filteredItems && filteredItems.length > items.length ? (0, _string.toString)(filteredItems.length) : null;\n      return _objectSpread(_objectSpread(_objectSpread({\n        // We set `aria-rowcount` before merging in `$attrs`,\n        // in case user has supplied their own\n        'aria-rowcount': rowCount\n      }, this.bvAttrs), {}, {\n        // Now we can override any `$attrs` here\n        id: this.safeId(),\n        role: 'table'\n      }, ariaAttrs), selectableTableAttrs);\n    }\n  },\n  render: function render(h) {\n    var wrapperClasses = this.wrapperClasses,\n        renderCaption = this.renderCaption,\n        renderColgroup = this.renderColgroup,\n        renderThead = this.renderThead,\n        renderTbody = this.renderTbody,\n        renderTfoot = this.renderTfoot;\n    var $content = [];\n\n    if (this.isTableSimple) {\n      $content.push(this.normalizeSlot());\n    } else {\n      // Build the `<caption>` (from caption mixin)\n      $content.push(renderCaption ? renderCaption() : null); // Build the `<colgroup>`\n\n      $content.push(renderColgroup ? renderColgroup() : null); // Build the `<thead>`\n\n      $content.push(renderThead ? renderThead() : null); // Build the `<tbody>`\n\n      $content.push(renderTbody ? renderTbody() : null); // Build the `<tfoot>`\n\n      $content.push(renderTfoot ? renderTfoot() : null);\n    } // Assemble `<table>`\n\n\n    var $table = h('table', {\n      staticClass: 'table b-table',\n      class: this.tableClasses,\n      attrs: this.tableAttrs,\n      key: 'b-table'\n    }, $content.filter(_identity.identity)); // Add responsive/sticky wrapper if needed and return table\n\n    return wrapperClasses.length > 0 ? h('div', {\n      class: wrapperClasses,\n      style: this.wrapperStyles,\n      key: 'wrap'\n    }, [$table]) : $table;\n  }\n});\n\nexports.tableRendererMixin = tableRendererMixin;"},"sourceMaps":null,"error":null,"hash":"39afead2e806d5fa5e1410102ab7aac5","cacheData":{"env":{}}}