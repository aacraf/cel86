{"id":"../node_modules/bootstrap-vue/esm/mixins/form-state.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../vue","loc":{"line":9,"column":20,"index":281},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-state.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../constants/props","loc":{"line":10,"column":34,"index":325},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-state.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../utils/inspect","loc":{"line":11,"column":26,"index":373},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-state.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../utils/props","loc":{"line":12,"column":48,"index":441},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/form-state.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.formStateMixin = void 0;\n\nvar _vue = require(\"../vue\");\n\nvar _props = require(\"../constants/props\");\n\nvar _inspect = require(\"../utils/inspect\");\n\nvar _props2 = require(\"../utils/props\");\n\n/* Form control contextual state class computation\n *\n * Returned class is either 'is-valid' or 'is-invalid' based on the 'state' prop\n * state can be one of five values:\n *  - true for is-valid\n *  - false for is-invalid\n *  - null for no contextual state\n */\n// --- Props ---\nvar props = (0, _props2.makePropsConfigurable)({\n  // Tri-state prop: true, false, null (or undefined)\n  state: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, null)\n}, 'formState'); // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar formStateMixin = _vue.Vue.extend({\n  props: props,\n  computed: {\n    computedState: function computedState() {\n      // If not a boolean, ensure that value is null\n      return (0, _inspect.isBoolean)(this.state) ? this.state : null;\n    },\n    stateClass: function stateClass() {\n      var state = this.computedState;\n      return state === true ? 'is-valid' : state === false ? 'is-invalid' : null;\n    },\n    computedAriaInvalid: function computedAriaInvalid() {\n      var ariaInvalid = this.ariaInvalid;\n\n      if (ariaInvalid === true || ariaInvalid === 'true' || ariaInvalid === '') {\n        return 'true';\n      }\n\n      return this.computedState === false ? 'true' : ariaInvalid;\n    }\n  }\n});\n\nexports.formStateMixin = formStateMixin;"},"sourceMaps":null,"error":null,"hash":"8de9b9332804fa496d6ee4c39d2d4e5d","cacheData":{"env":{}}}