{"id":"../node_modules/bootstrap-vue/esm/components/table/helpers/mixin-stacked.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../vue","loc":{"line":3,"column":20,"index":231},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-stacked.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../../constants/props","loc":{"line":4,"column":41,"index":288},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-stacked.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../../utils/props","loc":{"line":5,"column":25,"index":341},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-stacked.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.stackedMixin = exports.props = void 0;\n\nvar _vue = require(\"../../../vue\");\n\nvar _props = require(\"../../../constants/props\");\n\nvar _props2 = require(\"../../../utils/props\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Props ---\nvar props = {\n  stacked: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN_STRING, false)\n}; // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar stackedMixin = _vue.Vue.extend({\n  props: props,\n  computed: {\n    isStacked: function isStacked() {\n      var stacked = this.stacked; // `true` when always stacked, or returns breakpoint specified\n\n      return stacked === '' ? true : stacked;\n    },\n    isStackedAlways: function isStackedAlways() {\n      return this.isStacked === true;\n    },\n    stackedTableClasses: function stackedTableClasses() {\n      var isStackedAlways = this.isStackedAlways;\n      return _defineProperty({\n        'b-table-stacked': isStackedAlways\n      }, \"b-table-stacked-\".concat(this.stacked), !isStackedAlways && this.isStacked);\n    }\n  }\n});\n\nexports.stackedMixin = stackedMixin;"},"sourceMaps":null,"error":null,"hash":"341df55e62d460615b421cd38972eac7","cacheData":{"env":{}}}