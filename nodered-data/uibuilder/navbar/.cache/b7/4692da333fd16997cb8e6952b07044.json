{"id":"../node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":9,"column":20,"index":1123},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":10,"column":37,"index":1173},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/events","loc":{"line":11,"column":72,"index":1275},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../constants/props","loc":{"line":12,"column":75,"index":1376},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../constants/slots","loc":{"line":13,"column":41,"index":1442},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/slots.js"},{"name":"../../utils/dom","loc":{"line":14,"column":42,"index":1509},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/dom.js"},{"name":"../../utils/inspect","loc":{"line":15,"column":34,"index":1562},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/model","loc":{"line":16,"column":31,"index":1616},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/model.js"},{"name":"../../utils/object","loc":{"line":17,"column":31,"index":1668},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/object.js"},{"name":"../../utils/props","loc":{"line":18,"column":60,"index":1750},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../mixins/id","loc":{"line":19,"column":42,"index":1813},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/id.js"},{"name":"../../icons/icons","loc":{"line":20,"column":43,"index":1875},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/icons/icons.js"},{"name":"../button/button","loc":{"line":21,"column":24,"index":1920},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/button/button.js"},{"name":"../form-btn-label-control/bv-form-btn-label-control","loc":{"line":22,"column":75,"index":2015},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-btn-label-control/bv-form-btn-label-control.js"},{"name":"../time/time","loc":{"line":23,"column":43,"index":2113},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/form-timepicker/form-timepicker.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/time/time.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BFormTimepicker = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _events = require(\"../../constants/events\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _slots = require(\"../../constants/slots\");\n\nvar _dom = require(\"../../utils/dom\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _model = require(\"../../utils/model\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _id = require(\"../../mixins/id\");\n\nvar _icons = require(\"../../icons/icons\");\n\nvar _button = require(\"../button/button\");\n\nvar _bvFormBtnLabelControl = require(\"../form-btn-label-control/bv-form-btn-label-control\");\n\nvar _time = require(\"../time/time\");\n\nvar _watch;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Constants ---\nvar _makeModelMixin = (0, _model.makeModelMixin)('value', {\n  type: _props.PROP_TYPE_STRING,\n  defaultValue: ''\n}),\n    modelMixin = _makeModelMixin.mixin,\n    modelProps = _makeModelMixin.props,\n    MODEL_PROP_NAME = _makeModelMixin.prop,\n    MODEL_EVENT_NAME = _makeModelMixin.event; // --- Props ---\n\n\nvar timeProps = (0, _object.omit)(_time.props, ['hidden', 'id', 'value']);\nvar formBtnLabelControlProps = (0, _object.omit)(_bvFormBtnLabelControl.props, ['formattedValue', 'id', 'lang', 'rtl', 'value']);\nvar props = (0, _props2.makePropsConfigurable)((0, _object.sortKeys)(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _id.props), modelProps), timeProps), formBtnLabelControlProps), {}, {\n  closeButtonVariant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'outline-secondary'),\n  labelCloseButton: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Close'),\n  labelNowButton: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Select now'),\n  labelResetButton: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'Reset'),\n  noCloseButton: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  nowButton: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  nowButtonVariant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'outline-primary'),\n  resetButton: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  resetButtonVariant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'outline-danger'),\n  resetValue: (0, _props2.makeProp)(_props.PROP_TYPE_DATE_STRING)\n})), _components.NAME_FORM_TIMEPICKER); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BFormTimepicker = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_FORM_TIMEPICKER,\n  mixins: [_id.idMixin, modelMixin],\n  props: props,\n  data: function data() {\n    return {\n      // We always use `HH:mm:ss` value internally\n      localHMS: this[MODEL_PROP_NAME] || '',\n      // Context data from BTime\n      localLocale: null,\n      isRTL: false,\n      formattedValue: '',\n      // If the menu is opened\n      isVisible: false\n    };\n  },\n  computed: {\n    computedLang: function computedLang() {\n      return (this.localLocale || '').replace(/-u-.*$/i, '') || null;\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME, function (newValue) {\n    this.localHMS = newValue || '';\n  }), _defineProperty(_watch, \"localHMS\", function localHMS(newValue) {\n    // We only update the v-model value when the timepicker\n    // is open, to prevent cursor jumps when bound to a\n    // text input in button only mode\n    if (this.isVisible) {\n      this.$emit(MODEL_EVENT_NAME, newValue || '');\n    }\n  }), _watch),\n  methods: {\n    // Public methods\n    focus: function focus() {\n      if (!this.disabled) {\n        (0, _dom.attemptFocus)(this.$refs.control);\n      }\n    },\n    blur: function blur() {\n      if (!this.disabled) {\n        (0, _dom.attemptBlur)(this.$refs.control);\n      }\n    },\n    // Private methods\n    setAndClose: function setAndClose(value) {\n      var _this = this;\n\n      this.localHMS = value;\n      this.$nextTick(function () {\n        _this.$refs.control.hide(true);\n      });\n    },\n    onInput: function onInput(hms) {\n      if (this.localHMS !== hms) {\n        this.localHMS = hms;\n      }\n    },\n    onContext: function onContext(ctx) {\n      var isRTL = ctx.isRTL,\n          locale = ctx.locale,\n          value = ctx.value,\n          formatted = ctx.formatted;\n      this.isRTL = isRTL;\n      this.localLocale = locale;\n      this.formattedValue = formatted;\n      this.localHMS = value || ''; // Re-emit the context event\n\n      this.$emit(_events.EVENT_NAME_CONTEXT, ctx);\n    },\n    onNowButton: function onNowButton() {\n      var now = new Date();\n      var hours = now.getHours();\n      var minutes = now.getMinutes();\n      var seconds = this.showSeconds ? now.getSeconds() : 0;\n      var value = [hours, minutes, seconds].map(function (v) {\n        return \"00\".concat(v || '').slice(-2);\n      }).join(':');\n      this.setAndClose(value);\n    },\n    onResetButton: function onResetButton() {\n      this.setAndClose(this.resetValue);\n    },\n    onCloseButton: function onCloseButton() {\n      this.$refs.control.hide(true);\n    },\n    onShow: function onShow() {\n      this.isVisible = true;\n    },\n    onShown: function onShown() {\n      var _this2 = this;\n\n      this.$nextTick(function () {\n        (0, _dom.attemptFocus)(_this2.$refs.time);\n\n        _this2.$emit(_events.EVENT_NAME_SHOWN);\n      });\n    },\n    onHidden: function onHidden() {\n      this.isVisible = false;\n      this.$emit(_events.EVENT_NAME_HIDDEN);\n    },\n    // Render function helpers\n    defaultButtonFn: function defaultButtonFn(_ref) {\n      var isHovered = _ref.isHovered,\n          hasFocus = _ref.hasFocus;\n      return this.$createElement(isHovered || hasFocus ? _icons.BIconClockFill : _icons.BIconClock, {\n        attrs: {\n          'aria-hidden': 'true'\n        }\n      });\n    }\n  },\n  render: function render(h) {\n    var localHMS = this.localHMS,\n        disabled = this.disabled,\n        readonly = this.readonly,\n        $props = this.$props;\n    var placeholder = (0, _inspect.isUndefinedOrNull)(this.placeholder) ? this.labelNoTimeSelected : this.placeholder; // Footer buttons\n\n    var $footer = [];\n\n    if (this.nowButton) {\n      var label = this.labelNowButton;\n      $footer.push(h(_button.BButton, {\n        props: {\n          size: 'sm',\n          disabled: disabled || readonly,\n          variant: this.nowButtonVariant\n        },\n        attrs: {\n          'aria-label': label || null\n        },\n        on: {\n          click: this.onNowButton\n        },\n        key: 'now-btn'\n      }, label));\n    }\n\n    if (this.resetButton) {\n      if ($footer.length > 0) {\n        // Add a \"spacer\" between buttons ('&nbsp;')\n        $footer.push(h('span', \"\\xA0\"));\n      }\n\n      var _label = this.labelResetButton;\n      $footer.push(h(_button.BButton, {\n        props: {\n          size: 'sm',\n          disabled: disabled || readonly,\n          variant: this.resetButtonVariant\n        },\n        attrs: {\n          'aria-label': _label || null\n        },\n        on: {\n          click: this.onResetButton\n        },\n        key: 'reset-btn'\n      }, _label));\n    }\n\n    if (!this.noCloseButton) {\n      // Add a \"spacer\" between buttons ('&nbsp;')\n      if ($footer.length > 0) {\n        $footer.push(h('span', \"\\xA0\"));\n      }\n\n      var _label2 = this.labelCloseButton;\n      $footer.push(h(_button.BButton, {\n        props: {\n          size: 'sm',\n          disabled: disabled,\n          variant: this.closeButtonVariant\n        },\n        attrs: {\n          'aria-label': _label2 || null\n        },\n        on: {\n          click: this.onCloseButton\n        },\n        key: 'close-btn'\n      }, _label2));\n    }\n\n    if ($footer.length > 0) {\n      $footer = [h('div', {\n        staticClass: 'b-form-date-controls d-flex flex-wrap',\n        class: {\n          'justify-content-between': $footer.length > 1,\n          'justify-content-end': $footer.length < 2\n        }\n      }, $footer)];\n    }\n\n    var $time = h(_time.BTime, {\n      staticClass: 'b-form-time-control',\n      props: _objectSpread(_objectSpread({}, (0, _props2.pluckProps)(timeProps, $props)), {}, {\n        value: localHMS,\n        hidden: !this.isVisible\n      }),\n      on: {\n        input: this.onInput,\n        context: this.onContext\n      },\n      ref: 'time'\n    }, $footer);\n    return h(_bvFormBtnLabelControl.BVFormBtnLabelControl, {\n      staticClass: 'b-form-timepicker',\n      props: _objectSpread(_objectSpread({}, (0, _props2.pluckProps)(formBtnLabelControlProps, $props)), {}, {\n        id: this.safeId(),\n        value: localHMS,\n        formattedValue: localHMS ? this.formattedValue : '',\n        placeholder: placeholder,\n        rtl: this.isRTL,\n        lang: this.computedLang\n      }),\n      on: {\n        show: this.onShow,\n        shown: this.onShown,\n        hidden: this.onHidden\n      },\n      scopedSlots: _defineProperty({}, _slots.SLOT_NAME_BUTTON_CONTENT, this.$scopedSlots[_slots.SLOT_NAME_BUTTON_CONTENT] || this.defaultButtonFn),\n      ref: 'control'\n    }, [$time]);\n  }\n});\n\nexports.BFormTimepicker = BFormTimepicker;"},"sourceMaps":null,"error":null,"hash":"0f0f7d093fc18c0167abeb04594fab61","cacheData":{"env":{}}}