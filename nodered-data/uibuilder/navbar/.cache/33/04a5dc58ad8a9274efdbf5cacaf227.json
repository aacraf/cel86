{"id":"../node_modules/bootstrap-vue/esm/mixins/id.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../vue","loc":{"line":4,"column":39,"index":198},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/id.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../constants/props","loc":{"line":5,"column":33,"index":241},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/id.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../utils/props","loc":{"line":6,"column":25,"index":288},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/id.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.idMixin = void 0;\n\nvar _vue = require(\"../vue\");\n\nvar _props = require(\"../constants/props\");\n\nvar _props2 = require(\"../utils/props\");\n\n// SSR safe client-side ID attribute generation\n// ID's can only be generated client-side, after mount\n// `this._uid` is not synched between server and client\n// --- Props ---\nvar props = {\n  id: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n}; // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar idMixin = _vue.Vue.extend({\n  props: props,\n  data: function data() {\n    return {\n      localId_: null\n    };\n  },\n  computed: {\n    safeId: function safeId() {\n      // Computed property that returns a dynamic function for creating the ID\n      // Reacts to changes in both `.id` and `.localId_` and regenerates a new function\n      var id = this.id || this.localId_; // We return a function that accepts an optional suffix string\n      // So this computed prop looks and works like a method\n      // but benefits from Vue's computed prop caching\n\n      var fn = function fn(suffix) {\n        if (!id) {\n          return null;\n        }\n\n        suffix = String(suffix || '').replace(/\\s+/g, '_');\n        return suffix ? id + '_' + suffix : id;\n      };\n\n      return fn;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this; // `mounted()` only occurs client-side\n\n\n    this.$nextTick(function () {\n      // Update DOM with auto-generated ID after mount\n      // to prevent SSR hydration errors\n      _this.localId_ = \"__BVID__\".concat(_this[_vue.COMPONENT_UID_KEY]);\n    });\n  }\n});\n\nexports.idMixin = idMixin;"},"sourceMaps":null,"error":null,"hash":"eec57554d3a92cfac17be8b3143602dd","cacheData":{"env":{}}}