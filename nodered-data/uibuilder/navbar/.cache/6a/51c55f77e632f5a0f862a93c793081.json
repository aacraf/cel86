{"id":"../../node_modules/echarts/lib/component/geo.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/node_modules/echarts/package.json","includedInParent":true,"mtime":1654768047284},{"name":"../echarts","loc":{"line":21,"column":22,"index":815},"parent":"/data/uibuilder/node_modules/echarts/lib/component/geo.js","resolved":"/data/uibuilder/node_modules/echarts/lib/echarts.js"},{"name":"zrender/lib/core/util","loc":{"line":23,"column":21,"index":852},"parent":"/data/uibuilder/node_modules/echarts/lib/component/geo.js","resolved":"/data/uibuilder/node_modules/zrender/lib/core/util.js"},{"name":"../coord/geo/GeoModel","loc":{"line":25,"column":8,"index":887},"parent":"/data/uibuilder/node_modules/echarts/lib/component/geo.js","resolved":"/data/uibuilder/node_modules/echarts/lib/coord/geo/GeoModel.js"},{"name":"../coord/geo/geoCreator","loc":{"line":27,"column":8,"index":922},"parent":"/data/uibuilder/node_modules/echarts/lib/component/geo.js","resolved":"/data/uibuilder/node_modules/echarts/lib/coord/geo/geoCreator.js"},{"name":"./geo/GeoView","loc":{"line":29,"column":8,"index":959},"parent":"/data/uibuilder/node_modules/echarts/lib/component/geo.js","resolved":"/data/uibuilder/node_modules/echarts/lib/component/geo/GeoView.js"},{"name":"../action/geoRoam","loc":{"line":31,"column":8,"index":986},"parent":"/data/uibuilder/node_modules/echarts/lib/component/geo.js","resolved":"/data/uibuilder/node_modules/echarts/lib/action/geoRoam.js"}],"generated":{"js":"\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nrequire(\"../coord/geo/GeoModel\");\n\nrequire(\"../coord/geo/geoCreator\");\n\nrequire(\"./geo/GeoView\");\n\nrequire(\"../action/geoRoam\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction makeAction(method, actionInfo) {\n  actionInfo.update = 'updateView';\n  echarts.registerAction(actionInfo, function (payload, ecModel) {\n    var selected = {};\n    ecModel.eachComponent({\n      mainType: 'geo',\n      query: payload\n    }, function (geoModel) {\n      geoModel[method](payload.name);\n      var geo = geoModel.coordinateSystem;\n      zrUtil.each(geo.regions, function (region) {\n        selected[region.name] = geoModel.isSelected(region.name) || false;\n      });\n    });\n    return {\n      selected: selected,\n      name: payload.name\n    };\n  });\n}\n\nmakeAction('toggleSelected', {\n  type: 'geoToggleSelect',\n  event: 'geoselectchanged'\n});\nmakeAction('select', {\n  type: 'geoSelect',\n  event: 'geoselected'\n});\nmakeAction('unSelect', {\n  type: 'geoUnSelect',\n  event: 'geounselected'\n});"},"sourceMaps":null,"error":null,"hash":"d0be440d84c3482007b43de2f904a5c7","cacheData":{"env":{}}}