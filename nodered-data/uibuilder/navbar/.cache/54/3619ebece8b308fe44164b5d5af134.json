{"id":"../node_modules/bootstrap-vue/esm/components/aspect/aspect.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":13,"column":20,"index":1540},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/aspect/aspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":14,"column":28,"index":1581},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/aspect/aspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":15,"column":58,"index":1669},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/aspect/aspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../constants/regex","loc":{"line":16,"column":47,"index":1741},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/aspect/aspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/regex.js"},{"name":"../../utils/math","loc":{"line":17,"column":24,"index":1790},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/aspect/aspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/math.js"},{"name":"../../utils/number","loc":{"line":18,"column":24,"index":1834},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/aspect/aspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/number.js"},{"name":"../../utils/props","loc":{"line":19,"column":48,"index":1904},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/aspect/aspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../mixins/normalize-slot","loc":{"line":20,"column":35,"index":1960},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/aspect/aspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BAspect = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _regex = require(\"../../constants/regex\");\n\nvar _math = require(\"../../utils/math\");\n\nvar _number = require(\"../../utils/number\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _normalizeSlot = require(\"../../mixins/normalize-slot\");\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\n// --- Constants ---\nvar CLASS_NAME = 'b-aspect'; // --- Props ---\n\nvar props = (0, _props2.makePropsConfigurable)({\n  // Accepts a number (i.e. `16 / 9`, `1`, `4 / 3`)\n  // Or a string (i.e. '16/9', '16:9', '4:3' '1:1')\n  aspect: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, '1:1'),\n  tag: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'div')\n}, _components.NAME_ASPECT); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BAspect = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_ASPECT,\n  mixins: [_normalizeSlot.normalizeSlotMixin],\n  props: props,\n  computed: {\n    padding: function padding() {\n      var aspect = this.aspect;\n      var ratio = 1;\n\n      if (_regex.RX_ASPECT.test(aspect)) {\n        // Width and/or Height can be a decimal value below `1`, so\n        // we only fallback to `1` if the value is `0` or `NaN`\n        var _aspect$split$map = aspect.split(_regex.RX_ASPECT_SEPARATOR).map(function (v) {\n          return (0, _number.toFloat)(v) || 1;\n        }),\n            _aspect$split$map2 = _slicedToArray(_aspect$split$map, 2),\n            width = _aspect$split$map2[0],\n            height = _aspect$split$map2[1];\n\n        ratio = width / height;\n      } else {\n        ratio = (0, _number.toFloat)(aspect) || 1;\n      }\n\n      return \"\".concat(100 / (0, _math.mathAbs)(ratio), \"%\");\n    }\n  },\n  render: function render(h) {\n    var $sizer = h('div', {\n      staticClass: \"\".concat(CLASS_NAME, \"-sizer flex-grow-1\"),\n      style: {\n        paddingBottom: this.padding,\n        height: 0\n      }\n    });\n    var $content = h('div', {\n      staticClass: \"\".concat(CLASS_NAME, \"-content flex-grow-1 w-100 mw-100\"),\n      style: {\n        marginLeft: '-100%'\n      }\n    }, this.normalizeSlot());\n    return h(this.tag, {\n      staticClass: \"\".concat(CLASS_NAME, \" d-flex\")\n    }, [$sizer, $content]);\n  }\n});\n\nexports.BAspect = BAspect;"},"sourceMaps":null,"error":null,"hash":"add0a8f83c80c3522a61da52b5860e22","cacheData":{"env":{}}}