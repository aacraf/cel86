{"id":"../node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":9,"column":20,"index":1146},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":10,"column":29,"index":1188},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/events","loc":{"line":11,"column":226,"index":1444},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../constants/props","loc":{"line":12,"column":171,"index":1641},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../constants/safe-types","loc":{"line":13,"column":40,"index":1706},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/safe-types.js"},{"name":"../../utils/get-scope-id","loc":{"line":14,"column":27,"index":1763},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/get-scope-id.js"},{"name":"../../utils/inspect","loc":{"line":15,"column":34,"index":1825},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../utils/object","loc":{"line":16,"column":21,"index":1869},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/object.js"},{"name":"../../utils/props","loc":{"line":17,"column":48,"index":1939},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../mixins/normalize-slot","loc":{"line":18,"column":35,"index":1995},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/mixins/normalize-slot.js"},{"name":"./helpers/bv-tooltip","loc":{"line":19,"column":26,"index":2052},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/tooltip.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/tooltip/helpers/bv-tooltip.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BTooltip = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _events = require(\"../../constants/events\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _safeTypes = require(\"../../constants/safe-types\");\n\nvar _getScopeId = require(\"../../utils/get-scope-id\");\n\nvar _inspect = require(\"../../utils/inspect\");\n\nvar _object = require(\"../../utils/object\");\n\nvar _props2 = require(\"../../utils/props\");\n\nvar _normalizeSlot = require(\"../../mixins/normalize-slot\");\n\nvar _bvTooltip = require(\"./helpers/bv-tooltip\");\n\nvar _makePropsConfigurabl, _watch;\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Constants ---\nvar MODEL_PROP_NAME_ENABLED = 'disabled';\nvar MODEL_EVENT_NAME_ENABLED = _events.MODEL_EVENT_NAME_PREFIX + MODEL_PROP_NAME_ENABLED;\nvar MODEL_PROP_NAME_SHOW = 'show';\nvar MODEL_EVENT_NAME_SHOW = _events.MODEL_EVENT_NAME_PREFIX + MODEL_PROP_NAME_SHOW; // --- Props ---\n\nvar props = (0, _props2.makePropsConfigurable)((_makePropsConfigurabl = {\n  // String: scrollParent, window, or viewport\n  // Element: element reference\n  // Object: Vue component\n  boundary: (0, _props2.makeProp)([_safeTypes.HTMLElement, _props.PROP_TYPE_OBJECT, _props.PROP_TYPE_STRING], 'scrollParent'),\n  boundaryPadding: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 50),\n  // String: HTML ID of container, if null body is used (default)\n  // HTMLElement: element reference reference\n  // Object: Vue Component\n  container: (0, _props2.makeProp)([_safeTypes.HTMLElement, _props.PROP_TYPE_OBJECT, _props.PROP_TYPE_STRING]),\n  customClass: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  delay: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_OBJECT_STRING, 50)\n}, _defineProperty(_makePropsConfigurabl, MODEL_PROP_NAME_ENABLED, (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false)), _defineProperty(_makePropsConfigurabl, \"fallbackPlacement\", (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_STRING, 'flip')), _defineProperty(_makePropsConfigurabl, \"id\", (0, _props2.makeProp)(_props.PROP_TYPE_STRING)), _defineProperty(_makePropsConfigurabl, \"noFade\", (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false)), _defineProperty(_makePropsConfigurabl, \"noninteractive\", (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false)), _defineProperty(_makePropsConfigurabl, \"offset\", (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 0)), _defineProperty(_makePropsConfigurabl, \"placement\", (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'top')), _defineProperty(_makePropsConfigurabl, MODEL_PROP_NAME_SHOW, (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false)), _defineProperty(_makePropsConfigurabl, \"target\", (0, _props2.makeProp)([_safeTypes.HTMLElement, _safeTypes.SVGElement, _props.PROP_TYPE_FUNCTION, _props.PROP_TYPE_OBJECT, _props.PROP_TYPE_STRING], undefined, true)), _defineProperty(_makePropsConfigurabl, \"title\", (0, _props2.makeProp)(_props.PROP_TYPE_STRING)), _defineProperty(_makePropsConfigurabl, \"triggers\", (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_STRING, 'hover focus')), _defineProperty(_makePropsConfigurabl, \"variant\", (0, _props2.makeProp)(_props.PROP_TYPE_STRING)), _makePropsConfigurabl), _components.NAME_TOOLTIP); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BTooltip = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_TOOLTIP,\n  mixins: [_normalizeSlot.normalizeSlotMixin],\n  inheritAttrs: false,\n  props: props,\n  data: function data() {\n    return {\n      localShow: this[MODEL_PROP_NAME_SHOW],\n      localTitle: '',\n      localContent: ''\n    };\n  },\n  computed: {\n    // Data that will be passed to the template and popper\n    templateData: function templateData() {\n      return _objectSpread({\n        title: this.localTitle,\n        content: this.localContent,\n        interactive: !this.noninteractive\n      }, (0, _object.pick)(this.$props, ['boundary', 'boundaryPadding', 'container', 'customClass', 'delay', 'fallbackPlacement', 'id', 'noFade', 'offset', 'placement', 'target', 'target', 'triggers', 'variant', MODEL_PROP_NAME_ENABLED]));\n    },\n    // Used to watch for changes to the title and content props\n    templateTitleContent: function templateTitleContent() {\n      var title = this.title,\n          content = this.content;\n      return {\n        title: title,\n        content: content\n      };\n    }\n  },\n  watch: (_watch = {}, _defineProperty(_watch, MODEL_PROP_NAME_SHOW, function (newValue, oldValue) {\n    if (newValue !== oldValue && newValue !== this.localShow && this.$_toolpop) {\n      if (newValue) {\n        this.$_toolpop.show();\n      } else {\n        // We use `forceHide()` to override any active triggers\n        this.$_toolpop.forceHide();\n      }\n    }\n  }), _defineProperty(_watch, MODEL_PROP_NAME_ENABLED, function (newValue) {\n    if (newValue) {\n      this.doDisable();\n    } else {\n      this.doEnable();\n    }\n  }), _defineProperty(_watch, \"localShow\", function localShow(newValue) {\n    // TODO: May need to be done in a `$nextTick()`\n    this.$emit(MODEL_EVENT_NAME_SHOW, newValue);\n  }), _defineProperty(_watch, \"templateData\", function templateData() {\n    var _this = this;\n\n    this.$nextTick(function () {\n      if (_this.$_toolpop) {\n        _this.$_toolpop.updateData(_this.templateData);\n      }\n    });\n  }), _defineProperty(_watch, \"templateTitleContent\", function templateTitleContent() {\n    this.$nextTick(this.updateContent);\n  }), _watch),\n  created: function created() {\n    // Create private non-reactive props\n    this.$_toolpop = null;\n  },\n  updated: function updated() {\n    // Update the `propData` object\n    // Done in a `$nextTick()` to ensure slot(s) have updated\n    this.$nextTick(this.updateContent);\n  },\n  beforeDestroy: function beforeDestroy() {\n    // Shutdown our local event listeners\n    this.$off(_events.EVENT_NAME_OPEN, this.doOpen);\n    this.$off(_events.EVENT_NAME_CLOSE, this.doClose);\n    this.$off(_events.EVENT_NAME_DISABLE, this.doDisable);\n    this.$off(_events.EVENT_NAME_ENABLE, this.doEnable); // Destroy the tip instance\n\n    if (this.$_toolpop) {\n      this.$_toolpop.$destroy();\n      this.$_toolpop = null;\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this; // Instantiate a new BVTooltip instance\n    // Done in a `$nextTick()` to ensure DOM has completed rendering\n    // so that target can be found\n\n\n    this.$nextTick(function () {\n      // Load the on demand child instance\n      var Component = _this2.getComponent(); // Ensure we have initial content\n\n\n      _this2.updateContent(); // Pass down the scoped style attribute if available\n\n\n      var scopeId = (0, _getScopeId.getScopeId)(_this2) || (0, _getScopeId.getScopeId)(_this2.$parent); // Create the instance\n\n      var $toolpop = _this2.$_toolpop = new Component({\n        parent: _this2,\n        // Pass down the scoped style ID\n        _scopeId: scopeId || undefined\n      }); // Set the initial data\n\n      $toolpop.updateData(_this2.templateData); // Set listeners\n\n      $toolpop.$on(_events.EVENT_NAME_SHOW, _this2.onShow);\n      $toolpop.$on(_events.EVENT_NAME_SHOWN, _this2.onShown);\n      $toolpop.$on(_events.EVENT_NAME_HIDE, _this2.onHide);\n      $toolpop.$on(_events.EVENT_NAME_HIDDEN, _this2.onHidden);\n      $toolpop.$on(_events.EVENT_NAME_DISABLED, _this2.onDisabled);\n      $toolpop.$on(_events.EVENT_NAME_ENABLED, _this2.onEnabled); // Initially disabled?\n\n      if (_this2[MODEL_PROP_NAME_ENABLED]) {\n        // Initially disabled\n        _this2.doDisable();\n      } // Listen to open signals from others\n\n\n      _this2.$on(_events.EVENT_NAME_OPEN, _this2.doOpen); // Listen to close signals from others\n\n\n      _this2.$on(_events.EVENT_NAME_CLOSE, _this2.doClose); // Listen to disable signals from others\n\n\n      _this2.$on(_events.EVENT_NAME_DISABLE, _this2.doDisable); // Listen to enable signals from others\n\n\n      _this2.$on(_events.EVENT_NAME_ENABLE, _this2.doEnable); // Initially show tooltip?\n\n\n      if (_this2.localShow) {\n        $toolpop.show();\n      }\n    });\n  },\n  methods: {\n    getComponent: function getComponent() {\n      // Overridden by BPopover\n      return _bvTooltip.BVTooltip;\n    },\n    updateContent: function updateContent() {\n      // Overridden by BPopover\n      // Tooltip: Default slot is `title`\n      // Popover: Default slot is `content`, `title` slot is title\n      // We pass a scoped slot function reference by default (Vue v2.6x)\n      // And pass the title prop as a fallback\n      this.setTitle(this.normalizeSlot() || this.title);\n    },\n    // Helper methods for `updateContent()`\n    setTitle: function setTitle(value) {\n      value = (0, _inspect.isUndefinedOrNull)(value) ? '' : value; // We only update the value if it has changed\n\n      if (this.localTitle !== value) {\n        this.localTitle = value;\n      }\n    },\n    setContent: function setContent(value) {\n      value = (0, _inspect.isUndefinedOrNull)(value) ? '' : value; // We only update the value if it has changed\n\n      if (this.localContent !== value) {\n        this.localContent = value;\n      }\n    },\n    // --- Template event handlers ---\n    onShow: function onShow(bvEvent) {\n      // Placeholder\n      this.$emit(_events.EVENT_NAME_SHOW, bvEvent);\n\n      if (bvEvent) {\n        this.localShow = !bvEvent.defaultPrevented;\n      }\n    },\n    onShown: function onShown(bvEvent) {\n      // Tip is now showing\n      this.localShow = true;\n      this.$emit(_events.EVENT_NAME_SHOWN, bvEvent);\n    },\n    onHide: function onHide(bvEvent) {\n      this.$emit(_events.EVENT_NAME_HIDE, bvEvent);\n    },\n    onHidden: function onHidden(bvEvent) {\n      // Tip is no longer showing\n      this.$emit(_events.EVENT_NAME_HIDDEN, bvEvent);\n      this.localShow = false;\n    },\n    onDisabled: function onDisabled(bvEvent) {\n      // Prevent possible endless loop if user mistakenly\n      // fires `disabled` instead of `disable`\n      if (bvEvent && bvEvent.type === _events.EVENT_NAME_DISABLED) {\n        this.$emit(MODEL_EVENT_NAME_ENABLED, true);\n        this.$emit(_events.EVENT_NAME_DISABLED, bvEvent);\n      }\n    },\n    onEnabled: function onEnabled(bvEvent) {\n      // Prevent possible endless loop if user mistakenly\n      // fires `enabled` instead of `enable`\n      if (bvEvent && bvEvent.type === _events.EVENT_NAME_ENABLED) {\n        this.$emit(MODEL_EVENT_NAME_ENABLED, false);\n        this.$emit(_events.EVENT_NAME_ENABLED, bvEvent);\n      }\n    },\n    // --- Local event listeners ---\n    doOpen: function doOpen() {\n      !this.localShow && this.$_toolpop && this.$_toolpop.show();\n    },\n    doClose: function doClose() {\n      this.localShow && this.$_toolpop && this.$_toolpop.hide();\n    },\n    doDisable: function doDisable() {\n      this.$_toolpop && this.$_toolpop.disable();\n    },\n    doEnable: function doEnable() {\n      this.$_toolpop && this.$_toolpop.enable();\n    }\n  },\n  render: function render(h) {\n    // Always renders a comment node\n    // TODO:\n    //   Future: Possibly render a target slot (single root element)\n    //   which we can apply the listeners to (pass `this.$el` to BVTooltip)\n    return h();\n  }\n});\n\nexports.BTooltip = BTooltip;"},"sourceMaps":null,"error":null,"hash":"481fe2b34fd257543d3ee6d9ef3d775a","cacheData":{"env":{}}}