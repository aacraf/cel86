{"id":"../node_modules/bootstrap-vue/esm/utils/inspect.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../constants/regex","loc":{"line":3,"column":26,"index":406},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/regex.js"},{"name":"../constants/safe-types","loc":{"line":4,"column":21,"index":449},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/safe-types.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toType = exports.toRawTypeLC = exports.toRawType = exports.isUndefinedOrNullOrEmpty = exports.isUndefinedOrNull = exports.isUndefined = exports.isString = exports.isRegExp = exports.isPromise = exports.isPrimitive = exports.isPlainObject = exports.isObject = exports.isNumeric = exports.isNumber = exports.isNull = exports.isFunction = exports.isFile = exports.isEvent = exports.isEmptyString = exports.isDate = exports.isBoolean = exports.isArray = void 0;\n\nvar _regex = require(\"../constants/regex\");\n\nvar _safeTypes = require(\"../constants/safe-types\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n// --- Convenience inspection utilities ---\nvar toType = function toType(value) {\n  return _typeof(value);\n};\n\nexports.toType = toType;\n\nvar toRawType = function toRawType(value) {\n  return Object.prototype.toString.call(value).slice(8, -1);\n};\n\nexports.toRawType = toRawType;\n\nvar toRawTypeLC = function toRawTypeLC(value) {\n  return toRawType(value).toLowerCase();\n};\n\nexports.toRawTypeLC = toRawTypeLC;\n\nvar isUndefined = function isUndefined(value) {\n  return value === undefined;\n};\n\nexports.isUndefined = isUndefined;\n\nvar isNull = function isNull(value) {\n  return value === null;\n};\n\nexports.isNull = isNull;\n\nvar isEmptyString = function isEmptyString(value) {\n  return value === '';\n};\n\nexports.isEmptyString = isEmptyString;\n\nvar isUndefinedOrNull = function isUndefinedOrNull(value) {\n  return isUndefined(value) || isNull(value);\n};\n\nexports.isUndefinedOrNull = isUndefinedOrNull;\n\nvar isUndefinedOrNullOrEmpty = function isUndefinedOrNullOrEmpty(value) {\n  return isUndefinedOrNull(value) || isEmptyString(value);\n};\n\nexports.isUndefinedOrNullOrEmpty = isUndefinedOrNullOrEmpty;\n\nvar isFunction = function isFunction(value) {\n  return toType(value) === 'function';\n};\n\nexports.isFunction = isFunction;\n\nvar isBoolean = function isBoolean(value) {\n  return toType(value) === 'boolean';\n};\n\nexports.isBoolean = isBoolean;\n\nvar isString = function isString(value) {\n  return toType(value) === 'string';\n};\n\nexports.isString = isString;\n\nvar isNumber = function isNumber(value) {\n  return toType(value) === 'number';\n};\n\nexports.isNumber = isNumber;\n\nvar isNumeric = function isNumeric(value) {\n  return _regex.RX_NUMBER.test(String(value));\n};\n\nexports.isNumeric = isNumeric;\n\nvar isPrimitive = function isPrimitive(value) {\n  return isBoolean(value) || isString(value) || isNumber(value);\n};\n\nexports.isPrimitive = isPrimitive;\n\nvar isArray = function isArray(value) {\n  return Array.isArray(value);\n}; // Quick object check\n// This is primarily used to tell Objects from primitive values\n// when we know the value is a JSON-compliant type\n// Note object could be a complex type like array, Date, etc.\n\n\nexports.isArray = isArray;\n\nvar isObject = function isObject(obj) {\n  return obj !== null && _typeof(obj) === 'object';\n}; // Strict object type check\n// Only returns true for plain JavaScript objects\n\n\nexports.isObject = isObject;\n\nvar isPlainObject = function isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]';\n};\n\nexports.isPlainObject = isPlainObject;\n\nvar isDate = function isDate(value) {\n  return value instanceof Date;\n};\n\nexports.isDate = isDate;\n\nvar isEvent = function isEvent(value) {\n  return value instanceof Event;\n};\n\nexports.isEvent = isEvent;\n\nvar isFile = function isFile(value) {\n  return value instanceof _safeTypes.File;\n};\n\nexports.isFile = isFile;\n\nvar isRegExp = function isRegExp(value) {\n  return toRawType(value) === 'RegExp';\n};\n\nexports.isRegExp = isRegExp;\n\nvar isPromise = function isPromise(value) {\n  return !isUndefinedOrNull(value) && isFunction(value.then) && isFunction(value.catch);\n};\n\nexports.isPromise = isPromise;"},"sourceMaps":null,"error":null,"hash":"c152701242b46b658ab55eb0abfb2883","cacheData":{"env":{}}}