{"id":"../../node_modules/zrender/lib/contain/polygon.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/node_modules/zrender/package.json","includedInParent":true,"mtime":1654768047284},{"name":"./windingLine","loc":{"line":1,"column":26,"index":26},"parent":"/data/uibuilder/node_modules/zrender/lib/contain/polygon.js","resolved":"/data/uibuilder/node_modules/zrender/lib/contain/windingLine.js"}],"generated":{"js":"var windingLine = require(\"./windingLine\");\n\nvar EPSILON = 1e-8;\n\nfunction isAroundEqual(a, b) {\n  return Math.abs(a - b) < EPSILON;\n}\n\nfunction contain(points, x, y) {\n  var w = 0;\n  var p = points[0];\n\n  if (!p) {\n    return false;\n  }\n\n  for (var i = 1; i < points.length; i++) {\n    var p2 = points[i];\n    w += windingLine(p[0], p[1], p2[0], p2[1], x, y);\n    p = p2;\n  } // Close polygon\n\n\n  var p0 = points[0];\n\n  if (!isAroundEqual(p[0], p0[0]) || !isAroundEqual(p[1], p0[1])) {\n    w += windingLine(p[0], p[1], p0[0], p0[1], x, y);\n  }\n\n  return w !== 0;\n}\n\nexports.contain = contain;"},"sourceMaps":null,"error":null,"hash":"bb02ab77743d6f53c89a12ac00715470","cacheData":{"env":{}}}