{"id":"../node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../vue","loc":{"line":13,"column":20,"index":1195},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../../constants/components","loc":{"line":14,"column":27,"index":1238},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../../constants/events","loc":{"line":15,"column":36,"index":1307},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../../constants/props","loc":{"line":16,"column":127,"index":1463},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../../constants/regex","loc":{"line":17,"column":37,"index":1528},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/regex.js"},{"name":"../../../utils/array","loc":{"line":18,"column":23,"index":1579},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/array.js"},{"name":"../../../utils/clone-deep","loc":{"line":19,"column":26,"index":1629},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/clone-deep.js"},{"name":"../../../utils/identity","loc":{"line":20,"column":25,"index":1683},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/identity.js"},{"name":"../../../utils/inspect","loc":{"line":21,"column":47,"index":1757},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../../utils/loose-equal","loc":{"line":22,"column":27,"index":1810},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/loose-equal.js"},{"name":"../../../utils/number","loc":{"line":23,"column":26,"index":1866},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/number.js"},{"name":"../../../utils/props","loc":{"line":24,"column":42,"index":1933},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../../utils/string","loc":{"line":25,"column":29,"index":1986},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/string.js"},{"name":"../../../utils/warn","loc":{"line":26,"column":21,"index":2032},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/warn.js"},{"name":"./stringify-record-values","loc":{"line":27,"column":38,"index":2093},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-filtering.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/stringify-record-values.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.filteringMixin = void 0;\n\nvar _vue = require(\"../../../vue\");\n\nvar _components = require(\"../../../constants/components\");\n\nvar _events = require(\"../../../constants/events\");\n\nvar _props = require(\"../../../constants/props\");\n\nvar _regex = require(\"../../../constants/regex\");\n\nvar _array = require(\"../../../utils/array\");\n\nvar _cloneDeep = require(\"../../../utils/clone-deep\");\n\nvar _identity = require(\"../../../utils/identity\");\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _looseEqual = require(\"../../../utils/loose-equal\");\n\nvar _number = require(\"../../../utils/number\");\n\nvar _props2 = require(\"../../../utils/props\");\n\nvar _string = require(\"../../../utils/string\");\n\nvar _warn = require(\"../../../utils/warn\");\n\nvar _stringifyRecordValues = require(\"./stringify-record-values\");\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\n// --- Constants ---\nvar DEBOUNCE_DEPRECATED_MSG = 'Prop \"filter-debounce\" is deprecated. Use the debounce feature of \"<b-form-input>\" instead.'; // --- Props ---\n\nvar props = {\n  filter: (0, _props2.makeProp)([].concat(_toConsumableArray(_props.PROP_TYPE_ARRAY_OBJECT_STRING), [_props.PROP_TYPE_REG_EXP])),\n  filterDebounce: (0, _props2.makeProp)(_props.PROP_TYPE_NUMBER_STRING, 0, function (value) {\n    return _regex.RX_DIGITS.test(String(value));\n  }),\n  filterFunction: (0, _props2.makeProp)(_props.PROP_TYPE_FUNCTION),\n  filterIgnoredFields: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY, []),\n  filterIncludedFields: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY, [])\n}; // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar filteringMixin = _vue.Vue.extend({\n  props: props,\n  data: function data() {\n    return {\n      // Flag for displaying which empty slot to show and some event triggering\n      isFiltered: false,\n      // Where we store the copy of the filter criteria after debouncing\n      // We pre-set it with the sanitized filter value\n      localFilter: this.filterSanitize(this.filter)\n    };\n  },\n  computed: {\n    computedFilterIgnored: function computedFilterIgnored() {\n      return (0, _array.concat)(this.filterIgnoredFields || []).filter(_identity.identity);\n    },\n    computedFilterIncluded: function computedFilterIncluded() {\n      return (0, _array.concat)(this.filterIncludedFields || []).filter(_identity.identity);\n    },\n    computedFilterDebounce: function computedFilterDebounce() {\n      var ms = (0, _number.toInteger)(this.filterDebounce, 0);\n      /* istanbul ignore next */\n\n      if (ms > 0) {\n        (0, _warn.warn)(DEBOUNCE_DEPRECATED_MSG, _components.NAME_TABLE);\n      }\n\n      return ms;\n    },\n    localFiltering: function localFiltering() {\n      return this.hasProvider ? !!this.noProviderFiltering : true;\n    },\n    // For watching changes to `filteredItems` vs `localItems`\n    filteredCheck: function filteredCheck() {\n      var filteredItems = this.filteredItems,\n          localItems = this.localItems,\n          localFilter = this.localFilter;\n      return {\n        filteredItems: filteredItems,\n        localItems: localItems,\n        localFilter: localFilter\n      };\n    },\n    // Sanitized/normalize filter-function prop\n    localFilterFn: function localFilterFn() {\n      // Return `null` to signal to use internal filter function\n      var filterFunction = this.filterFunction;\n      return (0, _props2.hasPropFunction)(filterFunction) ? filterFunction : null;\n    },\n    // Returns the records in `localItems` that match the filter criteria\n    // Returns the original `localItems` array if not sorting\n    filteredItems: function filteredItems() {\n      // Note the criteria is debounced and sanitized\n      var items = this.localItems,\n          criteria = this.localFilter; // Resolve the filtering function, when requested\n      // We prefer the provided filtering function and fallback to the internal one\n      // When no filtering criteria is specified the filtering factories will return `null`\n\n      var filterFn = this.localFiltering ? this.filterFnFactory(this.localFilterFn, criteria) || this.defaultFilterFnFactory(criteria) : null; // We only do local filtering when requested and there are records to filter\n\n      return filterFn && items.length > 0 ? items.filter(filterFn) : items;\n    }\n  },\n  watch: {\n    // Watch for debounce being set to 0\n    computedFilterDebounce: function computedFilterDebounce(newValue) {\n      if (!newValue && this.$_filterTimer) {\n        this.clearFilterTimer();\n        this.localFilter = this.filterSanitize(this.filter);\n      }\n    },\n    // Watch for changes to the filter criteria, and debounce if necessary\n    filter: {\n      // We need a deep watcher in case the user passes\n      // an object when using `filter-function`\n      deep: true,\n      handler: function handler(newCriteria) {\n        var _this = this;\n\n        var timeout = this.computedFilterDebounce;\n        this.clearFilterTimer();\n\n        if (timeout && timeout > 0) {\n          // If we have a debounce time, delay the update of `localFilter`\n          this.$_filterTimer = setTimeout(function () {\n            _this.localFilter = _this.filterSanitize(newCriteria);\n          }, timeout);\n        } else {\n          // Otherwise, immediately update `localFilter` with `newFilter` value\n          this.localFilter = this.filterSanitize(newCriteria);\n        }\n      }\n    },\n    // Watch for changes to the filter criteria and filtered items vs `localItems`\n    // Set visual state and emit events as required\n    filteredCheck: function filteredCheck(_ref) {\n      var filteredItems = _ref.filteredItems,\n          localFilter = _ref.localFilter; // Determine if the dataset is filtered or not\n\n      var isFiltered = false;\n\n      if (!localFilter) {\n        // If filter criteria is falsey\n        isFiltered = false;\n      } else if ((0, _looseEqual.looseEqual)(localFilter, []) || (0, _looseEqual.looseEqual)(localFilter, {})) {\n        // If filter criteria is an empty array or object\n        isFiltered = false;\n      } else if (localFilter) {\n        // If filter criteria is truthy\n        isFiltered = true;\n      }\n\n      if (isFiltered) {\n        this.$emit(_events.EVENT_NAME_FILTERED, filteredItems, filteredItems.length);\n      }\n\n      this.isFiltered = isFiltered;\n    },\n    isFiltered: function isFiltered(newValue, oldValue) {\n      if (newValue === false && oldValue === true) {\n        // We need to emit a filtered event if `isFiltered` transitions from `true` to\n        // `false` so that users can update their pagination controls\n        var localItems = this.localItems;\n        this.$emit(_events.EVENT_NAME_FILTERED, localItems, localItems.length);\n      }\n    }\n  },\n  created: function created() {\n    var _this2 = this; // Create private non-reactive props\n\n\n    this.$_filterTimer = null; // If filter is \"pre-set\", set the criteria\n    // This will trigger any watchers/dependents\n    // this.localFilter = this.filterSanitize(this.filter)\n    // Set the initial filtered state in a `$nextTick()` so that\n    // we trigger a filtered event if needed\n\n    this.$nextTick(function () {\n      _this2.isFiltered = Boolean(_this2.localFilter);\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.clearFilterTimer();\n  },\n  methods: {\n    clearFilterTimer: function clearFilterTimer() {\n      clearTimeout(this.$_filterTimer);\n      this.$_filterTimer = null;\n    },\n    filterSanitize: function filterSanitize(criteria) {\n      // Sanitizes filter criteria based on internal or external filtering\n      if (this.localFiltering && !this.localFilterFn && !((0, _inspect.isString)(criteria) || (0, _inspect.isRegExp)(criteria))) {\n        // If using internal filter function, which only accepts string or RegExp,\n        // return '' to signify no filter\n        return '';\n      } // Could be a string, object or array, as needed by external filter function\n      // We use `cloneDeep` to ensure we have a new copy of an object or array\n      // without Vue's reactive observers\n\n\n      return (0, _cloneDeep.cloneDeep)(criteria);\n    },\n    // Filter Function factories\n    filterFnFactory: function filterFnFactory(filterFn, criteria) {\n      // Wrapper factory for external filter functions\n      // Wrap the provided filter-function and return a new function\n      // Returns `null` if no filter-function defined or if criteria is falsey\n      // Rather than directly grabbing `this.computedLocalFilterFn` or `this.filterFunction`\n      // we have it passed, so that the caller computed prop will be reactive to changes\n      // in the original filter-function (as this routine is a method)\n      if (!filterFn || !(0, _inspect.isFunction)(filterFn) || !criteria || (0, _looseEqual.looseEqual)(criteria, []) || (0, _looseEqual.looseEqual)(criteria, {})) {\n        return null;\n      } // Build the wrapped filter test function, passing the criteria to the provided function\n\n\n      var fn = function fn(item) {\n        // Generated function returns true if the criteria matches part\n        // of the serialized data, otherwise false\n        return filterFn(item, criteria);\n      }; // Return the wrapped function\n\n\n      return fn;\n    },\n    defaultFilterFnFactory: function defaultFilterFnFactory(criteria) {\n      var _this3 = this; // Generates the default filter function, using the given filter criteria\n      // Returns `null` if no criteria or criteria format not supported\n\n\n      if (!criteria || !((0, _inspect.isString)(criteria) || (0, _inspect.isRegExp)(criteria))) {\n        // Built in filter can only support strings or RegExp criteria (at the moment)\n        return null;\n      } // Build the RegExp needed for filtering\n\n\n      var regExp = criteria;\n\n      if ((0, _inspect.isString)(regExp)) {\n        // Escape special RegExp characters in the string and convert contiguous\n        // whitespace to \\s+ matches\n        var pattern = (0, _string.escapeRegExp)(criteria).replace(_regex.RX_SPACES, '\\\\s+'); // Build the RegExp (no need for global flag, as we only need\n        // to find the value once in the string)\n\n        regExp = new RegExp(\".*\".concat(pattern, \".*\"), 'i');\n      } // Generate the wrapped filter test function to use\n\n\n      var fn = function fn(item) {\n        // This searches all row values (and sub property values) in the entire (excluding\n        // special `_` prefixed keys), because we convert the record to a space-separated\n        // string containing all the value properties (recursively), even ones that are\n        // not visible (not specified in this.fields)\n        // Users can ignore filtering on specific fields, or on only certain fields,\n        // and can optionall specify searching results of fields with formatter\n        //\n        // TODO: Enable searching on scoped slots (optional, as it will be SLOW)\n        //\n        // Generated function returns true if the criteria matches part of\n        // the serialized data, otherwise false\n        //\n        // We set `lastIndex = 0` on the `RegExp` in case someone specifies the `/g` global flag\n        regExp.lastIndex = 0;\n        return regExp.test((0, _stringifyRecordValues.stringifyRecordValues)(item, _this3.computedFilterIgnored, _this3.computedFilterIncluded, _this3.computedFieldsObj));\n      }; // Return the generated function\n\n\n      return fn;\n    }\n  }\n});\n\nexports.filteringMixin = filteringMixin;"},"sourceMaps":null,"error":null,"hash":"1c77a338f31fce4d7fcc56a84ae6930c","cacheData":{"env":{}}}