{"id":"../node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../../vue","loc":{"line":19,"column":20,"index":2285},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../../constants/events","loc":{"line":20,"column":40,"index":2341},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/events.js"},{"name":"../../../constants/key-codes","loc":{"line":21,"column":39,"index":2409},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/key-codes.js"},{"name":"../../../constants/props","loc":{"line":22,"column":64,"index":2505},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../../constants/slots","loc":{"line":23,"column":36,"index":2569},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/slots.js"},{"name":"../../../utils/events","loc":{"line":24,"column":26,"index":2623},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/events.js"},{"name":"../../../utils/html","loc":{"line":25,"column":27,"index":2675},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/html.js"},{"name":"../../../utils/identity","loc":{"line":26,"column":25,"index":2723},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/identity.js"},{"name":"../../../utils/inspect","loc":{"line":27,"column":34,"index":2784},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/inspect.js"},{"name":"../../../utils/noop","loc":{"line":28,"column":21,"index":2831},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/noop.js"},{"name":"../../../utils/props","loc":{"line":29,"column":25,"index":2879},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"},{"name":"../../../utils/string","loc":{"line":30,"column":26,"index":2929},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/string.js"},{"name":"../thead","loc":{"line":31,"column":23,"index":2977},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/thead.js"},{"name":"../tfoot","loc":{"line":32,"column":23,"index":3012},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/tfoot.js"},{"name":"../tr","loc":{"line":33,"column":20,"index":3044},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/tr.js"},{"name":"../th","loc":{"line":34,"column":20,"index":3073},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/th.js"},{"name":"./filter-event","loc":{"line":35,"column":28,"index":3110},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/filter-event.js"},{"name":"./text-selection-active","loc":{"line":36,"column":36,"index":3164},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/mixin-thead.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/table/helpers/text-selection-active.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.theadMixin = exports.props = void 0;\n\nvar _vue = require(\"../../../vue\");\n\nvar _events = require(\"../../../constants/events\");\n\nvar _keyCodes = require(\"../../../constants/key-codes\");\n\nvar _props = require(\"../../../constants/props\");\n\nvar _slots = require(\"../../../constants/slots\");\n\nvar _events2 = require(\"../../../utils/events\");\n\nvar _html = require(\"../../../utils/html\");\n\nvar _identity = require(\"../../../utils/identity\");\n\nvar _inspect = require(\"../../../utils/inspect\");\n\nvar _noop = require(\"../../../utils/noop\");\n\nvar _props2 = require(\"../../../utils/props\");\n\nvar _string = require(\"../../../utils/string\");\n\nvar _thead = require(\"../thead\");\n\nvar _tfoot = require(\"../tfoot\");\n\nvar _tr = require(\"../tr\");\n\nvar _th = require(\"../th\");\n\nvar _filterEvent = require(\"./filter-event\");\n\nvar _textSelectionActive = require(\"./text-selection-active\");\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Helper methods ---\nvar getHeadSlotName = function getHeadSlotName(value) {\n  return \"head(\".concat(value || '', \")\");\n};\n\nvar getFootSlotName = function getFootSlotName(value) {\n  return \"foot(\".concat(value || '', \")\");\n}; // --- Props ---\n\n\nvar props = {\n  // Any Bootstrap theme variant (or custom)\n  headRowVariant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  // 'light', 'dark' or `null` (or custom)\n  headVariant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  theadClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING),\n  theadTrClass: (0, _props2.makeProp)(_props.PROP_TYPE_ARRAY_OBJECT_STRING)\n}; // --- Mixin ---\n// @vue/component\n\nexports.props = props;\n\nvar theadMixin = _vue.Vue.extend({\n  props: props,\n  methods: {\n    fieldClasses: function fieldClasses(field) {\n      // Header field (<th>) classes\n      return [field.class ? field.class : '', field.thClass ? field.thClass : ''];\n    },\n    headClicked: function headClicked(event, field, isFoot) {\n      if (this.stopIfBusy && this.stopIfBusy(event)) {\n        // If table is busy (via provider) then don't propagate\n        return;\n      } else if ((0, _filterEvent.filterEvent)(event)) {\n        // Clicked on a non-disabled control so ignore\n        return;\n      } else if ((0, _textSelectionActive.textSelectionActive)(this.$el)) {\n        // User is selecting text, so ignore\n\n        /* istanbul ignore next: JSDOM doesn't support getSelection() */\n        return;\n      }\n\n      (0, _events2.stopEvent)(event);\n      this.$emit(_events.EVENT_NAME_HEAD_CLICKED, field.key, field, event, isFoot);\n    },\n    renderThead: function renderThead() {\n      var _this = this;\n\n      var isFoot = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      var fields = this.computedFields,\n          isSortable = this.isSortable,\n          isSelectable = this.isSelectable,\n          headVariant = this.headVariant,\n          footVariant = this.footVariant,\n          headRowVariant = this.headRowVariant,\n          footRowVariant = this.footRowVariant;\n      var h = this.$createElement; // In always stacked mode, we don't bother rendering the head/foot\n      // Or if no field headings (empty table)\n\n      if (this.isStackedAlways || fields.length === 0) {\n        return h();\n      }\n\n      var hasHeadClickListener = isSortable || this.hasListener(_events.EVENT_NAME_HEAD_CLICKED); // Reference to `selectAllRows` and `clearSelected()`, if table is selectable\n\n      var selectAllRows = isSelectable ? this.selectAllRows : _noop.noop;\n      var clearSelected = isSelectable ? this.clearSelected : _noop.noop; // Helper function to generate a field <th> cell\n\n      var makeCell = function makeCell(field, colIndex) {\n        var label = field.label,\n            labelHtml = field.labelHtml,\n            variant = field.variant,\n            stickyColumn = field.stickyColumn,\n            key = field.key;\n        var ariaLabel = null;\n\n        if (!field.label.trim() && !field.headerTitle) {\n          // In case field's label and title are empty/blank\n          // We need to add a hint about what the column is about for non-sighted users\n\n          /* istanbul ignore next */\n          ariaLabel = (0, _string.startCase)(field.key);\n        }\n\n        var on = {};\n\n        if (hasHeadClickListener) {\n          on.click = function (event) {\n            _this.headClicked(event, field, isFoot);\n          };\n\n          on.keydown = function (event) {\n            var keyCode = event.keyCode;\n\n            if (keyCode === _keyCodes.CODE_ENTER || keyCode === _keyCodes.CODE_SPACE) {\n              _this.headClicked(event, field, isFoot);\n            }\n          };\n        }\n\n        var sortAttrs = isSortable ? _this.sortTheadThAttrs(key, field, isFoot) : {};\n        var sortClass = isSortable ? _this.sortTheadThClasses(key, field, isFoot) : null;\n        var sortLabel = isSortable ? _this.sortTheadThLabel(key, field, isFoot) : null;\n        var data = {\n          class: [_this.fieldClasses(field), sortClass],\n          props: {\n            variant: variant,\n            stickyColumn: stickyColumn\n          },\n          style: field.thStyle || {},\n          attrs: _objectSpread(_objectSpread({\n            // We only add a `tabindex` of `0` if there is a head-clicked listener\n            // and the current field is sortable\n            tabindex: hasHeadClickListener && field.sortable ? '0' : null,\n            abbr: field.headerAbbr || null,\n            title: field.headerTitle || null,\n            'aria-colindex': colIndex + 1,\n            'aria-label': ariaLabel\n          }, _this.getThValues(null, key, field.thAttr, isFoot ? 'foot' : 'head', {})), sortAttrs),\n          on: on,\n          key: key\n        }; // Handle edge case where in-document templates are used with new\n        // `v-slot:name` syntax where the browser lower-cases the v-slot's\n        // name (attributes become lower cased when parsed by the browser)\n        // We have replaced the square bracket syntax with round brackets\n        // to prevent confusion with dynamic slot names\n\n        var slotNames = [getHeadSlotName(key), getHeadSlotName(key.toLowerCase()), getHeadSlotName()]; // Footer will fallback to header slot names\n\n        if (isFoot) {\n          slotNames = [getFootSlotName(key), getFootSlotName(key.toLowerCase()), getFootSlotName()].concat(_toConsumableArray(slotNames));\n        }\n\n        var scope = {\n          label: label,\n          column: key,\n          field: field,\n          isFoot: isFoot,\n          // Add in row select methods\n          selectAllRows: selectAllRows,\n          clearSelected: clearSelected\n        };\n        var $content = _this.normalizeSlot(slotNames, scope) || h('div', {\n          domProps: (0, _html.htmlOrText)(labelHtml, label)\n        });\n        var $srLabel = sortLabel ? h('span', {\n          staticClass: 'sr-only'\n        }, \" (\".concat(sortLabel, \")\")) : null; // Return the header cell\n\n        return h(_th.BTh, data, [$content, $srLabel].filter(_identity.identity));\n      }; // Generate the array of <th> cells\n\n\n      var $cells = fields.map(makeCell).filter(_identity.identity); // Generate the row(s)\n\n      var $trs = [];\n\n      if (isFoot) {\n        $trs.push(h(_tr.BTr, {\n          class: this.tfootTrClass,\n          props: {\n            variant: (0, _inspect.isUndefinedOrNull)(footRowVariant) ? headRowVariant :\n            /* istanbul ignore next */\n            footRowVariant\n          }\n        }, $cells));\n      } else {\n        var scope = {\n          columns: fields.length,\n          fields: fields,\n          // Add in row select methods\n          selectAllRows: selectAllRows,\n          clearSelected: clearSelected\n        };\n        $trs.push(this.normalizeSlot(_slots.SLOT_NAME_THEAD_TOP, scope) || h());\n        $trs.push(h(_tr.BTr, {\n          class: this.theadTrClass,\n          props: {\n            variant: headRowVariant\n          }\n        }, $cells));\n      }\n\n      return h(isFoot ? _tfoot.BTfoot : _thead.BThead, {\n        class: (isFoot ? this.tfootClass : this.theadClass) || null,\n        props: isFoot ? {\n          footVariant: footVariant || headVariant || null\n        } : {\n          headVariant: headVariant || null\n        },\n        key: isFoot ? 'bv-tfoot' : 'bv-thead'\n      }, $trs);\n    }\n  }\n});\n\nexports.theadMixin = theadMixin;"},"sourceMaps":null,"error":null,"hash":"e292e06c7470c4cc0db04b81faf9ee28","cacheData":{"env":{}}}