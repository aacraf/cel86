{"id":"../node_modules/bootstrap-vue/esm/components/spinner/spinner.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/navbar/node_modules/bootstrap-vue/package.json","includedInParent":true,"mtime":1651564048996},{"name":"../../vue","loc":{"line":3,"column":31,"index":242},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/spinner/spinner.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/vue.js"},{"name":"../../constants/components","loc":{"line":4,"column":29,"index":284},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/spinner/spinner.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/components.js"},{"name":"../../constants/props","loc":{"line":5,"column":52,"index":366},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/spinner/spinner.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/props.js"},{"name":"../../constants/slots","loc":{"line":6,"column":32,"index":423},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/spinner/spinner.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/constants/slots.js"},{"name":"../../utils/normalize-slot","loc":{"line":7,"column":30,"index":478},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/spinner/spinner.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/normalize-slot.js"},{"name":"../../utils/props","loc":{"line":8,"column":48,"index":556},"parent":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/components/spinner/spinner.js","resolved":"/data/uibuilder/navbar/node_modules/bootstrap-vue/esm/utils/props.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.props = exports.BSpinner = void 0;\n\nvar _vue = require(\"../../vue\");\n\nvar _components = require(\"../../constants/components\");\n\nvar _props = require(\"../../constants/props\");\n\nvar _slots = require(\"../../constants/slots\");\n\nvar _normalizeSlot = require(\"../../utils/normalize-slot\");\n\nvar _props2 = require(\"../../utils/props\");\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n// --- Props ---\nvar props = (0, _props2.makePropsConfigurable)({\n  label: (0, _props2.makeProp)(_props.PROP_TYPE_STRING),\n  role: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'status'),\n  small: (0, _props2.makeProp)(_props.PROP_TYPE_BOOLEAN, false),\n  tag: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'span'),\n  type: (0, _props2.makeProp)(_props.PROP_TYPE_STRING, 'border'),\n  variant: (0, _props2.makeProp)(_props.PROP_TYPE_STRING)\n}, _components.NAME_SPINNER); // --- Main component ---\n// @vue/component\n\nexports.props = props;\n\nvar BSpinner = /*#__PURE__*/_vue.Vue.extend({\n  name: _components.NAME_SPINNER,\n  functional: true,\n  props: props,\n  render: function render(h, _ref) {\n    var _class;\n\n    var props = _ref.props,\n        data = _ref.data,\n        slots = _ref.slots,\n        scopedSlots = _ref.scopedSlots;\n    var $slots = slots();\n    var $scopedSlots = scopedSlots || {};\n    var $label = (0, _normalizeSlot.normalizeSlot)(_slots.SLOT_NAME_LABEL, {}, $scopedSlots, $slots) || props.label;\n\n    if ($label) {\n      $label = h('span', {\n        staticClass: 'sr-only'\n      }, $label);\n    }\n\n    return h(props.tag, (0, _vue.mergeData)(data, {\n      attrs: {\n        role: $label ? props.role || 'status' : null,\n        'aria-hidden': $label ? null : 'true'\n      },\n      class: (_class = {}, _defineProperty(_class, \"spinner-\".concat(props.type), props.type), _defineProperty(_class, \"spinner-\".concat(props.type, \"-sm\"), props.small), _defineProperty(_class, \"text-\".concat(props.variant), props.variant), _class)\n    }), [$label || h()]);\n  }\n});\n\nexports.BSpinner = BSpinner;"},"sourceMaps":null,"error":null,"hash":"c4215e83f30d744b0e765f7947879698","cacheData":{"env":{}}}