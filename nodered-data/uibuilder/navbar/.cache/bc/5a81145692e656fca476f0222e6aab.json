{"id":"../../node_modules/echarts/lib/chart/scatter.js","dependencies":[{"name":"/data/uibuilder/navbar/package.json","includedInParent":true,"mtime":1654946937447},{"name":"/data/uibuilder/node_modules/echarts/package.json","includedInParent":true,"mtime":1654768047284},{"name":"../echarts","loc":{"line":21,"column":22,"index":815},"parent":"/data/uibuilder/node_modules/echarts/lib/chart/scatter.js","resolved":"/data/uibuilder/node_modules/echarts/lib/echarts.js"},{"name":"./scatter/ScatterSeries","loc":{"line":23,"column":8,"index":839},"parent":"/data/uibuilder/node_modules/echarts/lib/chart/scatter.js","resolved":"/data/uibuilder/node_modules/echarts/lib/chart/scatter/ScatterSeries.js"},{"name":"./scatter/ScatterView","loc":{"line":25,"column":8,"index":876},"parent":"/data/uibuilder/node_modules/echarts/lib/chart/scatter.js","resolved":"/data/uibuilder/node_modules/echarts/lib/chart/scatter/ScatterView.js"},{"name":"../visual/symbol","loc":{"line":27,"column":27,"index":930},"parent":"/data/uibuilder/node_modules/echarts/lib/chart/scatter.js","resolved":"/data/uibuilder/node_modules/echarts/lib/visual/symbol.js"},{"name":"../layout/points","loc":{"line":29,"column":27,"index":979},"parent":"/data/uibuilder/node_modules/echarts/lib/chart/scatter.js","resolved":"/data/uibuilder/node_modules/echarts/lib/layout/points.js"},{"name":"../component/gridSimple","loc":{"line":31,"column":8,"index":1009},"parent":"/data/uibuilder/node_modules/echarts/lib/chart/scatter.js","resolved":"/data/uibuilder/node_modules/echarts/lib/component/gridSimple.js"}],"generated":{"js":"\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar echarts = require(\"../echarts\");\n\nrequire(\"./scatter/ScatterSeries\");\n\nrequire(\"./scatter/ScatterView\");\n\nvar visualSymbol = require(\"../visual/symbol\");\n\nvar layoutPoints = require(\"../layout/points\");\n\nrequire(\"../component/gridSimple\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as zrUtil from 'zrender/src/core/util';\n// In case developer forget to include grid component\necharts.registerVisual(visualSymbol('scatter', 'circle'));\necharts.registerLayout(layoutPoints('scatter')); // echarts.registerProcessor(function (ecModel, api) {\n//     ecModel.eachSeriesByType('scatter', function (seriesModel) {\n//         var data = seriesModel.getData();\n//         var coordSys = seriesModel.coordinateSystem;\n//         if (coordSys.type !== 'geo') {\n//             return;\n//         }\n//         var startPt = coordSys.pointToData([0, 0]);\n//         var endPt = coordSys.pointToData([api.getWidth(), api.getHeight()]);\n//         var dims = zrUtil.map(coordSys.dimensions, function (dim) {\n//             return data.mapDimension(dim);\n//         });\n//         var range = {};\n//         range[dims[0]] = [Math.min(startPt[0], endPt[0]), Math.max(startPt[0], endPt[0])];\n//         range[dims[1]] = [Math.min(startPt[1], endPt[1]), Math.max(startPt[1], endPt[1])];\n//         data.selectRange(range);\n//     });\n// });"},"sourceMaps":null,"error":null,"hash":"00c570b1028c26c74251f74fc5f998bc","cacheData":{"env":{}}}